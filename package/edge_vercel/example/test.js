// Generated by dart2js (NullSafetyMode.sound, csp, deferred-serialization, intern-composite-values), the Dart to JavaScript compiler version: 2.19.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var A = {JS_CONST: function JS_CONST() {
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    Symbol: function Symbol(t0) {
      this._name = t0;
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      B.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
        namedArguments.forEach$1(0, new A.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, new A.JSInvocationMirror(B.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction($function, positionalArguments, namedArguments) {
      var t1, argumentCount, jsStub;
      if (Array.isArray(positionalArguments))
        t1 = namedArguments == null || namedArguments.__js_helper$_length === 0;
      else
        t1 = false;
      if (t1) {
        argumentCount = positionalArguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1(positionalArguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2(positionalArguments[0], positionalArguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3(positionalArguments[0], positionalArguments[1], positionalArguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3], positionalArguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, positionalArguments);
      }
      return A.Primitives__generalApplyFunction($function, positionalArguments, namedArguments);
    },
    Primitives__generalApplyFunction($function, positionalArguments, namedArguments) {
      var defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, maxArguments, missingDefaults, keys, _i, defaultValue, used, key,
        $arguments = Array.isArray(positionalArguments) ? positionalArguments : A.List_List$of(positionalArguments, type$.dynamic),
        argumentCount = $arguments.length,
        requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (Array.isArray(defaultValues)) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        maxArguments = requiredParameterCount + defaultValues.length;
        if (argumentCount > maxArguments)
          return A.Primitives_functionNoSuchMethod($function, $arguments, null);
        if (argumentCount < maxArguments) {
          missingDefaults = defaultValues.slice(argumentCount - requiredParameterCount);
          if ($arguments === positionalArguments)
            $arguments = A.List_List$of($arguments, type$.dynamic);
          B.JSArray_methods.addAll$1($arguments, missingDefaults);
        }
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if ($arguments === positionalArguments)
          $arguments = A.List_List$of($arguments, type$.dynamic);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            defaultValue = defaultValues[A._asString(keys[_i])];
            if (B.C__Required === defaultValue)
              return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
            B.JSArray_methods.add$1($arguments, defaultValue);
          }
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            key = A._asString(keys[_i]);
            if (namedArguments.containsKey$1(key)) {
              ++used;
              B.JSArray_methods.add$1($arguments, namedArguments.$index(0, key));
            } else {
              defaultValue = defaultValues[key];
              if (B.C__Required === defaultValue)
                return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
              B.JSArray_methods.add$1($arguments, defaultValue);
            }
          }
          if (used !== namedArguments.__js_helper$_length)
            return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    ioore(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, _s5_);
      return new A.RangeError(null, null, true, index, _s5_, "Value not in range");
    },
    wrapException(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new A.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      var t1;
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace) {
        t1 = ex.dartException;
        return A.saveStackTrace(ex, t1 == null ? type$.Object._as(t1) : t1);
      }
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              t1 = A.S(message);
              return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1) {
              A._asString(message);
              return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
            }
          }
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new A._StackTrace(exception);
    },
    objectHashCode(object) {
      if (object == null || typeof object != "object")
        return J.get$hashCode$(object);
      else
        return A.Primitives_objectHashCode(object);
    },
    invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      type$.Function._as(closure);
      switch (A._asInt(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(new A._Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = A._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _._memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _Required: function _Required() {
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      this.hashMapCellKey = t0;
      this.hashMapCellValue = t1;
      this._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var t1,
        signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        t1 = closure.$signature();
        return t1;
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      var rti;
      if (object instanceof A.Object) {
        rti = object.$ti;
        return rti != null ? rti : A._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, isFn, $name, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
    },
    _Error_compose(object, objectRti, checkedTypeDescription) {
      var objectDescription = A.Error_safeToString(object);
      return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (!(t4 >= 0))
            return A.ioore(genericContext, t4);
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (!(t1 >= 0 && t1 < t2))
          return A.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, head, base, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = A._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 12:
                    t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(A._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleArguments(parser, stack) {
      var optionalPositional, named, requiredPositional, returnType, parameters, _null = null,
        t1 = parser.u,
        head = stack.pop();
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            named = _null;
            break;
          case -2:
            named = stack.pop();
            optionalPositional = _null;
            break;
          default:
            stack.push(head);
            named = _null;
            optionalPositional = named;
            break;
        }
      else {
        stack.push(head);
        named = _null;
        optionalPositional = named;
      }
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      t1 = sKind === 11;
      if (t1 && t === type$.Record)
        return true;
      if (t1 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(type$.void_Function._as(callback)), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.C_Duration, type$.void_Function._as(callback));
    },
    Timer__createTimer(duration, callback) {
      return A._TimerImpl$(0, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      var value, t2,
        t1 = completer.$ti;
      t1._eval$1("1/?")._as(object);
      if (object == null) {
        t1._precomputed1._as(object);
        value = object;
      } else
        value = object;
      if (!completer.isSync)
        completer._future._asyncComplete$1(value);
      else {
        t2 = completer._future;
        if (t1._eval$1("Future<1>")._is(value))
          t2._chainFuture$1(value);
        else
          t2._completeWithValue$1(t1._precomputed1._as(value));
      }
    },
    _asyncRethrow(object, completer) {
      var t1 = A.unwrapException(object),
        st = A.getTraceFromException(object),
        t2 = completer.isSync,
        t3 = completer._future;
      if (t2)
        t3._completeError$2(t1, st);
      else
        t3._asyncCompleteError$2(t1, st);
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(0, thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new A._wrapJsFunctionForAsync_closure($protected), type$.void, type$.int, type$.dynamic);
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    Future_Future(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(B.C_Duration, new A.Future_Future_closure(result, computation));
      return result;
    },
    _Future__chainCoreFuture(source, target) {
      var t1, t2, listeners;
      for (t1 = type$._Future_dynamic; t2 = source._state, (t2 & 4) !== 0;)
        source = t1._as(source._resultOrListeners);
      if ((t2 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = type$.nullable__FutureListener_dynamic_dynamic._as(target._resultOrListeners);
        target._state = target._state & 1 | 4;
        target._resultOrListeners = source;
        source._prependListeners$1(listeners);
      }
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, t3, t4, _box_0, t5, t6, hasError, asyncError, nextListener, nextListener0, sourceResult, t7, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.AsyncError, t3 = type$.nullable__FutureListener_dynamic_dynamic, t4 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t5 = t1._state;
        t6 = (t5 & 16) === 0;
        hasError = !t6;
        if (listeners == null) {
          if (hasError && (t5 & 1) === 0) {
            asyncError = t2._as(t1._resultOrListeners);
            A._rootHandleError(asyncError.error, asyncError.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t5 = _box_1.source;
        sourceResult = t5._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t6) {
          t7 = t1.state;
          t7 = (t7 & 1) !== 0 || (t7 & 15) === 8;
        } else
          t7 = true;
        if (t7) {
          zone = t1.result._zone;
          if (hasError) {
            t5 = t5._zone === zone;
            t5 = !(t5 || t5);
          } else
            t5 = false;
          if (t5) {
            t2._as(sourceResult);
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t6) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t4._is(t1)) {
            t5 = _box_0.listener.$ti;
            t5 = t5._eval$1("Future<2>")._is(t1) || !t5._rest[1]._is(t1);
          } else
            t5 = false;
          if (t5) {
            t4._as(t1);
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = t3._as(result._resultOrListeners);
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFuture(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = t3._as(result._resultOrListeners);
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t5 = _box_0.listenerValueOrError;
        if (!t1) {
          result.$ti._precomputed1._as(t5);
          result._state = 8;
          result._resultOrListeners = t5;
        } else {
          t2._as(t5);
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t5;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      var t1;
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$3$1(errorHandler, type$.dynamic, type$.Object, type$.StackTrace);
      t1 = type$.dynamic_Function_Object;
      if (t1._is(errorHandler))
        return t1._as(errorHandler);
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(callback));
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, type$.void_Function._as(currentZone.bindCallbackGuarded$1(callback)));
    },
    StreamIterator_StreamIterator(stream, $T) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator($T._eval$1("_StreamIterator<0>"));
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, type$.void_Function._as(callback));
      return A.Timer__createTimer(duration, type$.void_Function._as(t1.bindCallbackGuarded$1(callback)));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f, $R) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg, $R, $T) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      type$.void_Function._as(f);
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.result = t0;
      this.computation = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__chainFuture_closure: function _Future__chainFuture_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    _StreamIterator: function _StreamIterator(t0) {
      this.$ti = t0;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      B.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        B.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            B.JSArray_methods.add$1(parts, A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          if (0 >= parts.length)
            return A.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return A.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              B.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        B.JSArray_methods.add$1(parts, elision);
      B.JSArray_methods.add$1(parts, penultimateString);
      B.JSArray_methods.add$1(parts, ultimateString);
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A._isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        B.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return A.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: function _HashMap() {
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    ListMixin: function ListMixin() {
    },
    MapBase: function MapBase() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    MapMixin: function MapMixin() {
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    Error__objectToString(object) {
      if (object instanceof A.Closure)
        return object.toString$0(0);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      if (error == null)
        error = type$.Object._as(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, $E) {
      var result, t1, i;
      if ($length > 4294967295)
        A.throwExpression(A.RangeError$range($length, 0, 4294967295, "length", null));
      result = J.JSArray_markFixedList(A._setArrayType(new Array($length), $E._eval$1("JSArray<0>")), $E);
      if ($length !== 0 && fill != null)
        for (t1 = result.length, i = 0; i < t1; ++i)
          result[i] = fill;
      return result;
    },
    List_List$of(elements, $E) {
      var t1 = A.List_List$_of(elements, $E);
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        B.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    NoSuchMethodError$_(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
      return new A.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Error__objectToString(object);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    IndexError$withLength(invalidValue, $length, indexable, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    Duration: function Duration() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3, t4) {
      var _ = this;
      _._core$_receiver = t0;
      _._core$_memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
      _._existingArgumentNames = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    Iterable: function Iterable() {
    },
    Iterator: function Iterator() {
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    _convertDataTree(data) {
      var t1 = new A._convertDataTree__convert(new A._IdentityHashMap(type$._IdentityHashMap_dynamic_dynamic)).call$1(data);
      t1.toString;
      return t1;
    },
    _convertDataTree__convert: function _convertDataTree__convert(t0) {
      this._convertedObjects = t0;
    },
    Accelerometer: function Accelerometer() {
    },
    AccelerometerSensorOptions: function AccelerometerSensorOptions() {
    },
    LinearAccelerationSensor: function LinearAccelerationSensor() {
    },
    GravitySensor: function GravitySensor() {
    },
    AccelerometerReadingValues: function AccelerometerReadingValues() {
    },
    LinearAccelerationReadingValues: function LinearAccelerationReadingValues() {
    },
    GravityReadingValues: function GravityReadingValues() {
    },
    AmbientLightSensor: function AmbientLightSensor() {
    },
    AmbientLightReadingValues: function AmbientLightReadingValues() {
    },
    XRAnchor: function XRAnchor() {
    },
    XRAnchorSet: function XRAnchorSet() {
    },
    ANGLEInstancedArrays: function ANGLEInstancedArrays() {
    },
    HTMLAttributionSrcElementUtils: function HTMLAttributionSrcElementUtils() {
    },
    AudioOutputOptions: function AudioOutputOptions() {
    },
    BackgroundFetchManager: function BackgroundFetchManager() {
    },
    BackgroundFetchUIOptions: function BackgroundFetchUIOptions() {
    },
    BackgroundFetchOptions: function BackgroundFetchOptions() {
    },
    BackgroundFetchRegistration: function BackgroundFetchRegistration() {
    },
    BackgroundFetchRecord: function BackgroundFetchRecord() {
    },
    BackgroundFetchEvent: function BackgroundFetchEvent() {
    },
    BackgroundFetchEventInit: function BackgroundFetchEventInit() {
    },
    BackgroundFetchUpdateUIEvent: function BackgroundFetchUpdateUIEvent() {
    },
    SyncManager: function SyncManager() {
    },
    SyncEvent: function SyncEvent() {
    },
    SyncEventInit: function SyncEventInit() {
    },
    NavigatorBadge: function NavigatorBadge() {
    },
    BatteryManager: function BatteryManager() {
    },
    CaptureHandleConfig: function CaptureHandleConfig() {
    },
    CaptureHandle: function CaptureHandle() {
    },
    ClipboardEventInit: function ClipboardEventInit() {
    },
    ClipboardEvent: function ClipboardEvent() {
    },
    ClipboardItem: function ClipboardItem() {
    },
    ClipboardItemOptions: function ClipboardItemOptions() {
    },
    Clipboard: function Clipboard() {
    },
    ClipboardPermissionDescriptor: function ClipboardPermissionDescriptor() {
    },
    CloseWatcher: function CloseWatcher() {
    },
    CloseWatcherOptions: function CloseWatcherOptions() {
    },
    CompressionStream: function CompressionStream() {
    },
    DecompressionStream: function DecompressionStream() {
    },
    PressureObserver: function PressureObserver() {
    },
    PressureRecord: function PressureRecord() {
    },
    PressureObserverOptions: function PressureObserverOptions() {
    },
    Console: function Console() {
    },
    ContactAddress: function ContactAddress() {
    },
    ContactInfo: function ContactInfo() {
    },
    ContactsSelectOptions: function ContactsSelectOptions() {
    },
    ContactsManager: function ContactsManager() {
    },
    ContentDescription: function ContentDescription() {
    },
    ContentIndex: function ContentIndex() {
    },
    ContentIndexEventInit: function ContentIndexEventInit() {
    },
    ContentIndexEvent: function ContentIndexEvent() {
    },
    CookieStore: function CookieStore() {
    },
    CookieStoreGetOptions: function CookieStoreGetOptions() {
    },
    CookieInit: function CookieInit() {
    },
    CookieStoreDeleteOptions: function CookieStoreDeleteOptions() {
    },
    CookieListItem: function CookieListItem() {
    },
    CookieStoreManager: function CookieStoreManager() {
    },
    CookieChangeEvent: function CookieChangeEvent() {
    },
    CookieChangeEventInit: function CookieChangeEventInit() {
    },
    ExtendableCookieChangeEvent: function ExtendableCookieChangeEvent() {
    },
    ExtendableCookieChangeEventInit: function ExtendableCookieChangeEventInit() {
    },
    CrashReportBody: function CrashReportBody() {
    },
    Credential: function Credential() {
    },
    CredentialUserData: function CredentialUserData() {
    },
    CredentialsContainer: function CredentialsContainer() {
    },
    CredentialData: function CredentialData() {
    },
    CredentialRequestOptions: function CredentialRequestOptions() {
    },
    CredentialCreationOptions: function CredentialCreationOptions() {
    },
    PasswordCredential: function PasswordCredential() {
    },
    PasswordCredentialData: function PasswordCredentialData() {
    },
    FederatedCredential: function FederatedCredential() {
    },
    FederatedCredentialRequestOptions: function FederatedCredentialRequestOptions() {
    },
    FederatedCredentialInit: function FederatedCredentialInit() {
    },
    CSPViolationReportBody: function CSPViolationReportBody() {
    },
    SecurityPolicyViolationEvent: function SecurityPolicyViolationEvent() {
    },
    SecurityPolicyViolationEventInit: function SecurityPolicyViolationEventInit() {
    },
    ScriptingPolicyReportBody: function ScriptingPolicyReportBody() {
    },
    AnimationWorkletGlobalScope: function AnimationWorkletGlobalScope() {
    },
    WorkletAnimationEffect: function WorkletAnimationEffect() {
    },
    WorkletAnimation: function WorkletAnimation() {
    },
    WorkletGroupEffect: function WorkletGroupEffect() {
    },
    AnimationEvent: function AnimationEvent() {
    },
    AnimationEventInit: function AnimationEventInit() {
    },
    CSSKeyframeRule: function CSSKeyframeRule() {
    },
    CSSKeyframesRule: function CSSKeyframesRule() {
    },
    CSSAnimation: function CSSAnimation() {
    },
    CSSLayerBlockRule: function CSSLayerBlockRule() {
    },
    CSSLayerStatementRule: function CSSLayerStatementRule() {
    },
    CSSColorProfileRule: function CSSColorProfileRule() {
    },
    CSSConditionRule: function CSSConditionRule() {
    },
    CSSMediaRule: function CSSMediaRule() {
    },
    CSSSupportsRule: function CSSSupportsRule() {
    },
    ContentVisibilityAutoStateChangedEvent: function ContentVisibilityAutoStateChangedEvent() {
    },
    ContentVisibilityAutoStateChangedEventInit: function ContentVisibilityAutoStateChangedEventInit() {
    },
    CSSContainerRule: function CSSContainerRule() {
    },
    CSSCounterStyleRule: function CSSCounterStyleRule() {
    },
    FontFaceDescriptors: function FontFaceDescriptors() {
    },
    FontFace: function FontFace() {
    },
    FontFaceFeatures: function FontFaceFeatures() {
    },
    FontFaceVariationAxis: function FontFaceVariationAxis() {
    },
    FontFaceVariations: function FontFaceVariations() {
    },
    FontFacePalette: function FontFacePalette() {
    },
    FontFacePalettes: function FontFacePalettes() {
    },
    FontFaceSetLoadEventInit: function FontFaceSetLoadEventInit() {
    },
    FontFaceSetLoadEvent: function FontFaceSetLoadEvent() {
    },
    FontFaceSet: function FontFaceSet() {
    },
    FontFaceSource: function FontFaceSource() {
    },
    CSSFontFaceRule: function CSSFontFaceRule() {
    },
    CSSFontFeatureValuesRule: function CSSFontFeatureValuesRule() {
    },
    CSSFontFeatureValuesMap: function CSSFontFeatureValuesMap() {
    },
    CSSFontPaletteValuesRule: function CSSFontPaletteValuesRule() {
    },
    Highlight: function Highlight() {
    },
    HighlightRegistry: function HighlightRegistry() {
    },
    LayoutWorkletGlobalScope: function LayoutWorkletGlobalScope() {
    },
    LayoutOptions: function LayoutOptions() {
    },
    LayoutChild: function LayoutChild() {
    },
    LayoutFragment: function LayoutFragment() {
    },
    IntrinsicSizes: function IntrinsicSizes() {
    },
    LayoutConstraints: function LayoutConstraints() {
    },
    LayoutConstraintsOptions: function LayoutConstraintsOptions() {
    },
    ChildBreakToken: function ChildBreakToken() {
    },
    BreakToken: function BreakToken() {
    },
    BreakTokenOptions: function BreakTokenOptions() {
    },
    LayoutEdges: function LayoutEdges() {
    },
    FragmentResultOptions: function FragmentResultOptions() {
    },
    FragmentResult: function FragmentResult() {
    },
    IntrinsicSizesResultOptions: function IntrinsicSizesResultOptions() {
    },
    SVGClipPathElement: function SVGClipPathElement() {
    },
    SVGMaskElement: function SVGMaskElement() {
    },
    FocusableAreasOption: function FocusableAreasOption() {
    },
    SpatialNavigationSearchOptions: function SpatialNavigationSearchOptions() {
    },
    NavigationEvent: function NavigationEvent() {
    },
    NavigationEventInit: function NavigationEventInit() {
    },
    PaintWorkletGlobalScope: function PaintWorkletGlobalScope() {
    },
    PaintRenderingContext2DSettings: function PaintRenderingContext2DSettings() {
    },
    PaintRenderingContext2D: function PaintRenderingContext2D() {
    },
    PaintSize: function PaintSize() {
    },
    CSSParserOptions: function CSSParserOptions() {
    },
    CSSParserRule: function CSSParserRule() {
    },
    CSSParserAtRule: function CSSParserAtRule() {
    },
    CSSParserQualifiedRule: function CSSParserQualifiedRule() {
    },
    CSSParserDeclaration: function CSSParserDeclaration() {
    },
    CSSParserValue: function CSSParserValue() {
    },
    CSSParserBlock: function CSSParserBlock() {
    },
    CSSParserFunction: function CSSParserFunction() {
    },
    PropertyDefinition: function PropertyDefinition() {
    },
    CSSPropertyRule: function CSSPropertyRule() {
    },
    CSSPseudoElement: function CSSPseudoElement() {
    },
    NamedFlowMap: function NamedFlowMap() {
    },
    NamedFlow: function NamedFlow() {
    },
    Region: function Region() {
    },
    TransitionEvent: function TransitionEvent() {
    },
    TransitionEventInit: function TransitionEventInit() {
    },
    CSSTransition: function CSSTransition() {
    },
    CSSStyleValue: function CSSStyleValue() {
    },
    StylePropertyMapReadOnly: function StylePropertyMapReadOnly() {
    },
    StylePropertyMap: function StylePropertyMap() {
    },
    CSSUnparsedValue: function CSSUnparsedValue() {
    },
    CSSVariableReferenceValue: function CSSVariableReferenceValue() {
    },
    CSSKeywordValue: function CSSKeywordValue() {
    },
    CSSNumericType: function CSSNumericType() {
    },
    CSSNumericValue: function CSSNumericValue() {
    },
    CSSUnitValue: function CSSUnitValue() {
    },
    CSSMathValue: function CSSMathValue() {
    },
    CSSMathSum: function CSSMathSum() {
    },
    CSSMathProduct: function CSSMathProduct() {
    },
    CSSMathNegate: function CSSMathNegate() {
    },
    CSSMathInvert: function CSSMathInvert() {
    },
    CSSMathMin: function CSSMathMin() {
    },
    CSSMathMax: function CSSMathMax() {
    },
    CSSMathClamp: function CSSMathClamp() {
    },
    CSSNumericArray: function CSSNumericArray() {
    },
    CSSTransformValue: function CSSTransformValue() {
    },
    CSSTransformComponent: function CSSTransformComponent() {
    },
    CSSTranslate: function CSSTranslate() {
    },
    CSSRotate: function CSSRotate() {
    },
    CSSScale: function CSSScale() {
    },
    CSSSkew: function CSSSkew() {
    },
    CSSSkewX: function CSSSkewX() {
    },
    CSSSkewY: function CSSSkewY() {
    },
    CSSPerspective: function CSSPerspective() {
    },
    CSSMatrixComponent: function CSSMatrixComponent() {
    },
    CSSMatrixComponentOptions: function CSSMatrixComponentOptions() {
    },
    CSSImageValue: function CSSImageValue() {
    },
    CSSColorValue: function CSSColorValue() {
    },
    Cssrgb: function Cssrgb() {
    },
    Csshsl: function Csshsl() {
    },
    Csshwb: function Csshwb() {
    },
    CSSLab: function CSSLab() {
    },
    Csslch: function Csslch() {
    },
    CSSOKLab: function CSSOKLab() {
    },
    Cssoklch: function Cssoklch() {
    },
    CSSColor: function CSSColor() {
    },
    ViewTransition: function ViewTransition() {
    },
    MediaList: function MediaList() {
    },
    StyleSheet: function StyleSheet() {
    },
    CSSStyleSheet: function CSSStyleSheet() {
    },
    CSSStyleSheetInit: function CSSStyleSheetInit() {
    },
    StyleSheetList: function StyleSheetList() {
    },
    LinkStyle: function LinkStyle() {
    },
    CSSRuleList: function CSSRuleList() {
    },
    CSSRule: function CSSRule() {
    },
    CSSStyleRule: function CSSStyleRule() {
    },
    CSSImportRule: function CSSImportRule() {
    },
    CSSGroupingRule: function CSSGroupingRule() {
    },
    CSSPageRule: function CSSPageRule() {
    },
    CSSMarginRule: function CSSMarginRule() {
    },
    CSSNamespaceRule: function CSSNamespaceRule() {
    },
    CSSStyleDeclaration: function CSSStyleDeclaration() {
    },
    ElementCSSInlineStyle: function ElementCSSInlineStyle() {
    },
    Css: function Css() {
    },
    ScrollOptions: function ScrollOptions() {
    },
    ScrollToOptions: function ScrollToOptions() {
    },
    MediaQueryList: function MediaQueryList() {
    },
    MediaQueryListEvent: function MediaQueryListEvent() {
    },
    MediaQueryListEventInit: function MediaQueryListEventInit() {
    },
    Screen: function Screen() {
    },
    CaretPosition: function CaretPosition() {
    },
    ScrollIntoViewOptions: function ScrollIntoViewOptions() {
    },
    CheckVisibilityOptions: function CheckVisibilityOptions() {
    },
    BoxQuadOptions: function BoxQuadOptions() {
    },
    ConvertCoordinateOptions: function ConvertCoordinateOptions() {
    },
    GeometryUtils: function GeometryUtils() {
    },
    VisualViewport: function VisualViewport() {
    },
    CustomStateSet: function CustomStateSet() {
    },
    DataCue: function DataCue() {
    },
    DeprecationReportBody: function DeprecationReportBody() {
    },
    NavigatorDeviceMemory: function NavigatorDeviceMemory() {
    },
    DevicePosture: function DevicePosture() {
    },
    DigitalGoodsService: function DigitalGoodsService() {
    },
    ItemDetails: function ItemDetails() {
    },
    PurchaseDetails: function PurchaseDetails() {
    },
    Event: function Event() {
    },
    EventInit: function EventInit() {
    },
    CustomEvent: function CustomEvent() {
    },
    CustomEventInit: function CustomEventInit() {
    },
    EventTarget: function EventTarget() {
    },
    EventListenerOptions: function EventListenerOptions() {
    },
    AddEventListenerOptions: function AddEventListenerOptions() {
    },
    AbortController: function AbortController() {
    },
    AbortSignal: function AbortSignal() {
    },
    NonElementParentNode: function NonElementParentNode() {
    },
    DocumentOrShadowRoot: function DocumentOrShadowRoot() {
    },
    ParentNode: function ParentNode() {
    },
    NonDocumentTypeChildNode: function NonDocumentTypeChildNode() {
    },
    ChildNode: function ChildNode() {
    },
    Slottable: function Slottable() {
    },
    NodeList: function NodeList() {
    },
    HTMLCollection: function HTMLCollection() {
    },
    MutationObserver: function MutationObserver() {
    },
    MutationObserverInit: function MutationObserverInit() {
    },
    MutationRecord: function MutationRecord() {
    },
    Node: function Node() {
    },
    GetRootNodeOptions: function GetRootNodeOptions() {
    },
    Document: function Document() {
    },
    XMLDocument: function XMLDocument() {
    },
    ElementCreationOptions: function ElementCreationOptions() {
    },
    DOMImplementation: function DOMImplementation() {
    },
    DocumentType: function DocumentType() {
    },
    DocumentFragment: function DocumentFragment() {
    },
    ShadowRoot: function ShadowRoot() {
    },
    Element: function Element() {
    },
    ShadowRootInit: function ShadowRootInit() {
    },
    NamedNodeMap: function NamedNodeMap() {
    },
    Attr: function Attr() {
    },
    CharacterData: function CharacterData() {
    },
    Text: function Text() {
    },
    CDATASection: function CDATASection() {
    },
    ProcessingInstruction: function ProcessingInstruction() {
    },
    Comment: function Comment() {
    },
    AbstractRange: function AbstractRange() {
    },
    StaticRangeInit: function StaticRangeInit() {
    },
    StaticRange: function StaticRange() {
    },
    Range: function Range() {
    },
    NodeIterator: function NodeIterator() {
    },
    TreeWalker: function TreeWalker() {
    },
    NodeFilter: function NodeFilter() {
    },
    DOMTokenList: function DOMTokenList() {
    },
    XPathResult: function XPathResult() {
    },
    XPathExpression: function XPathExpression() {
    },
    XPathNSResolver: function XPathNSResolver() {
    },
    XPathEvaluatorBase: function XPathEvaluatorBase() {
    },
    XPathEvaluator: function XPathEvaluator() {
    },
    XSLTProcessor: function XSLTProcessor() {
    },
    XMLSerializer: function XMLSerializer() {
    },
    InnerHTML: function InnerHTML() {
    },
    EditContextInit: function EditContextInit() {
    },
    EditContext: function EditContext() {
    },
    TextUpdateEventInit: function TextUpdateEventInit() {
    },
    TextUpdateEvent: function TextUpdateEvent() {
    },
    TextFormatInit: function TextFormatInit() {
    },
    TextFormat: function TextFormat() {
    },
    TextFormatUpdateEventInit: function TextFormatUpdateEventInit() {
    },
    TextFormatUpdateEvent: function TextFormatUpdateEvent() {
    },
    CharacterBoundsUpdateEventInit: function CharacterBoundsUpdateEventInit() {
    },
    CharacterBoundsUpdateEvent: function CharacterBoundsUpdateEvent() {
    },
    PerformanceElementTiming: function PerformanceElementTiming() {
    },
    TextDecoderCommon: function TextDecoderCommon() {
    },
    TextDecoderOptions: function TextDecoderOptions() {
    },
    TextDecodeOptions: function TextDecodeOptions() {
    },
    TextDecoder: function TextDecoder() {
    },
    TextEncoderCommon: function TextEncoderCommon() {
    },
    TextEncoderEncodeIntoResult: function TextEncoderEncodeIntoResult() {
    },
    TextEncoder: function TextEncoder() {
    },
    TextDecoderStream: function TextDecoderStream() {
    },
    TextEncoderStream: function TextEncoderStream() {
    },
    MediaKeySystemConfiguration: function MediaKeySystemConfiguration() {
    },
    MediaKeySystemMediaCapability: function MediaKeySystemMediaCapability() {
    },
    MediaKeySystemAccess: function MediaKeySystemAccess() {
    },
    MediaKeys: function MediaKeys() {
    },
    MediaKeySession: function MediaKeySession() {
    },
    MediaKeyStatusMap: function MediaKeyStatusMap() {
    },
    MediaKeyMessageEvent: function MediaKeyMessageEvent() {
    },
    MediaKeyMessageEventInit: function MediaKeyMessageEventInit() {
    },
    MediaEncryptedEvent: function MediaEncryptedEvent() {
    },
    MediaEncryptedEventInit: function MediaEncryptedEventInit() {
    },
    FileSystemEntry: function FileSystemEntry() {
    },
    FileSystemDirectoryEntry: function FileSystemDirectoryEntry() {
    },
    FileSystemFlags: function FileSystemFlags() {
    },
    FileSystemDirectoryReader: function FileSystemDirectoryReader() {
    },
    FileSystemFileEntry: function FileSystemFileEntry() {
    },
    FileSystem: function FileSystem() {
    },
    EpubReadingSystem: function EpubReadingSystem() {
    },
    PerformanceEventTiming: function PerformanceEventTiming() {
    },
    EventCounts: function EventCounts() {
    },
    EXTBlendMinmax: function EXTBlendMinmax() {
    },
    EXTClipCullDistance: function EXTClipCullDistance() {
    },
    EXTColorBufferFloat: function EXTColorBufferFloat() {
    },
    EXTColorBufferHalfFloat: function EXTColorBufferHalfFloat() {
    },
    WebGLTimerQueryEXT: function WebGLTimerQueryEXT() {
    },
    EXTDisjointTimerQuery: function EXTDisjointTimerQuery() {
    },
    EXTDisjointTimerQueryWebgl2: function EXTDisjointTimerQueryWebgl2() {
    },
    EXTFloatBlend: function EXTFloatBlend() {
    },
    EXTFragDepth: function EXTFragDepth() {
    },
    EXTShaderTextureLod: function EXTShaderTextureLod() {
    },
    EXTSRGB: function EXTSRGB() {
    },
    EXTTextureCompressionBptc: function EXTTextureCompressionBptc() {
    },
    EXTTextureCompressionRgtc: function EXTTextureCompressionRgtc() {
    },
    EXTTextureFilterAnisotropic: function EXTTextureFilterAnisotropic() {
    },
    EXTTextureNorm16: function EXTTextureNorm16() {
    },
    ColorSelectionResult: function ColorSelectionResult() {
    },
    ColorSelectionOptions: function ColorSelectionOptions() {
    },
    EyeDropper: function EyeDropper() {
    },
    IdentityProviderWellKnown: function IdentityProviderWellKnown() {
    },
    IdentityProviderIcon: function IdentityProviderIcon() {
    },
    IdentityProviderBranding: function IdentityProviderBranding() {
    },
    IdentityProviderAPIConfig: function IdentityProviderAPIConfig() {
    },
    IdentityProviderAccount: function IdentityProviderAccount() {
    },
    IdentityProviderAccountList: function IdentityProviderAccountList() {
    },
    IdentityProviderClientMetadata: function IdentityProviderClientMetadata() {
    },
    IdentityProviderToken: function IdentityProviderToken() {
    },
    IdentityCredential: function IdentityCredential() {
    },
    IdentityCredentialRequestOptions: function IdentityCredentialRequestOptions() {
    },
    IdentityProviderConfig: function IdentityProviderConfig() {
    },
    IdentityCredentialLogoutRPsRequest: function IdentityCredentialLogoutRPsRequest() {
    },
    IdentityProvider: function IdentityProvider() {
    },
    Headers: function Headers() {
    },
    Body: function Body() {
    },
    Request0: function Request0() {
    },
    RequestInit: function RequestInit() {
    },
    Response0: function Response0() {
    },
    ResponseInit: function ResponseInit() {
    },
    HMACGetSecretInput: function HMACGetSecretInput() {
    },
    HMACGetSecretOutput: function HMACGetSecretOutput() {
    },
    FileSystemPermissionDescriptor: function FileSystemPermissionDescriptor() {
    },
    FileSystemHandlePermissionDescriptor: function FileSystemHandlePermissionDescriptor() {
    },
    FilePickerAcceptType: function FilePickerAcceptType() {
    },
    FilePickerOptions: function FilePickerOptions() {
    },
    OpenFilePickerOptions: function OpenFilePickerOptions() {
    },
    SaveFilePickerOptions: function SaveFilePickerOptions() {
    },
    DirectoryPickerOptions: function DirectoryPickerOptions() {
    },
    Blob: function Blob() {
    },
    BlobPropertyBag: function BlobPropertyBag() {
    },
    File: function File() {
    },
    FilePropertyBag: function FilePropertyBag() {
    },
    FileList: function FileList() {
    },
    FileReader: function FileReader() {
    },
    FileReaderSync: function FileReaderSync() {
    },
    SVGFilterElement: function SVGFilterElement() {
    },
    SVGFilterPrimitiveStandardAttributes: function SVGFilterPrimitiveStandardAttributes() {
    },
    SVGFEBlendElement: function SVGFEBlendElement() {
    },
    SVGFEColorMatrixElement: function SVGFEColorMatrixElement() {
    },
    SVGFEComponentTransferElement: function SVGFEComponentTransferElement() {
    },
    SVGComponentTransferFunctionElement: function SVGComponentTransferFunctionElement() {
    },
    SVGFEFuncRElement: function SVGFEFuncRElement() {
    },
    SVGFEFuncGElement: function SVGFEFuncGElement() {
    },
    SVGFEFuncBElement: function SVGFEFuncBElement() {
    },
    SVGFEFuncAElement: function SVGFEFuncAElement() {
    },
    SVGFECompositeElement: function SVGFECompositeElement() {
    },
    SVGFEConvolveMatrixElement: function SVGFEConvolveMatrixElement() {
    },
    SVGFEDiffuseLightingElement: function SVGFEDiffuseLightingElement() {
    },
    SVGFEDistantLightElement: function SVGFEDistantLightElement() {
    },
    SVGFEPointLightElement: function SVGFEPointLightElement() {
    },
    SVGFESpotLightElement: function SVGFESpotLightElement() {
    },
    SVGFEDisplacementMapElement: function SVGFEDisplacementMapElement() {
    },
    SVGFEDropShadowElement: function SVGFEDropShadowElement() {
    },
    SVGFEFloodElement: function SVGFEFloodElement() {
    },
    SVGFEGaussianBlurElement: function SVGFEGaussianBlurElement() {
    },
    SVGFEImageElement: function SVGFEImageElement() {
    },
    SVGFEMergeElement: function SVGFEMergeElement() {
    },
    SVGFEMergeNodeElement: function SVGFEMergeNodeElement() {
    },
    SVGFEMorphologyElement: function SVGFEMorphologyElement() {
    },
    SVGFEOffsetElement: function SVGFEOffsetElement() {
    },
    SVGFESpecularLightingElement: function SVGFESpecularLightingElement() {
    },
    SVGFETileElement: function SVGFETileElement() {
    },
    SVGFETurbulenceElement: function SVGFETurbulenceElement() {
    },
    FontMetrics: function FontMetrics() {
    },
    Baseline: function Baseline() {
    },
    Font: function Font() {
    },
    FileSystemHandle: function FileSystemHandle() {
    },
    FileSystemCreateWritableOptions: function FileSystemCreateWritableOptions() {
    },
    FileSystemFileHandle: function FileSystemFileHandle() {
    },
    FileSystemGetFileOptions: function FileSystemGetFileOptions() {
    },
    FileSystemGetDirectoryOptions: function FileSystemGetDirectoryOptions() {
    },
    FileSystemRemoveOptions: function FileSystemRemoveOptions() {
    },
    FileSystemDirectoryHandle: function FileSystemDirectoryHandle() {
    },
    WriteParams: function WriteParams() {
    },
    FileSystemWritableFileStream: function FileSystemWritableFileStream() {
    },
    FileSystemReadWriteOptions: function FileSystemReadWriteOptions() {
    },
    FileSystemSyncAccessHandle: function FileSystemSyncAccessHandle() {
    },
    FullscreenOptions: function FullscreenOptions() {
    },
    Gamepad: function Gamepad() {
    },
    GamepadButton: function GamepadButton() {
    },
    GamepadEvent: function GamepadEvent() {
    },
    GamepadEventInit: function GamepadEventInit() {
    },
    GamepadHapticActuator: function GamepadHapticActuator() {
    },
    GamepadEffectParameters: function GamepadEffectParameters() {
    },
    GamepadPose: function GamepadPose() {
    },
    GamepadTouch: function GamepadTouch() {
    },
    Sensor: function Sensor() {
    },
    SensorOptions: function SensorOptions() {
    },
    SensorErrorEvent: function SensorErrorEvent() {
    },
    SensorErrorEventInit: function SensorErrorEventInit() {
    },
    MockSensorConfiguration: function MockSensorConfiguration() {
    },
    MockSensor: function MockSensor() {
    },
    MockSensorReadingValues: function MockSensorReadingValues() {
    },
    Geolocation: function Geolocation() {
    },
    PositionOptions: function PositionOptions() {
    },
    GeolocationPosition: function GeolocationPosition() {
    },
    GeolocationCoordinates: function GeolocationCoordinates() {
    },
    GeolocationPositionError: function GeolocationPositionError() {
    },
    GeolocationSensor: function GeolocationSensor() {
    },
    GeolocationSensorOptions: function GeolocationSensorOptions() {
    },
    ReadOptions: function ReadOptions() {
    },
    GeolocationSensorReading: function GeolocationSensorReading() {
    },
    GeolocationReadingValues: function GeolocationReadingValues() {
    },
    DOMPointReadOnly: function DOMPointReadOnly() {
    },
    DOMPoint: function DOMPoint() {
    },
    DOMPointInit: function DOMPointInit() {
    },
    DOMRectReadOnly: function DOMRectReadOnly() {
    },
    DOMRect: function DOMRect() {
    },
    DOMRectInit: function DOMRectInit() {
    },
    DOMRectList: function DOMRectList() {
    },
    DOMQuad: function DOMQuad() {
    },
    DOMQuadInit: function DOMQuadInit() {
    },
    DOMMatrixReadOnly: function DOMMatrixReadOnly() {
    },
    DOMMatrix: function DOMMatrix() {
    },
    DOMMatrix2DInit: function DOMMatrix2DInit() {
    },
    DOMMatrixInit: function DOMMatrixInit() {
    },
    RelatedApplication: function RelatedApplication() {
    },
    Gyroscope: function Gyroscope() {
    },
    GyroscopeSensorOptions: function GyroscopeSensorOptions() {
    },
    GyroscopeReadingValues: function GyroscopeReadingValues() {
    },
    Performance: function Performance() {
    },
    HTMLAllCollection: function HTMLAllCollection() {
    },
    HTMLFormControlsCollection: function HTMLFormControlsCollection() {
    },
    RadioNodeList: function RadioNodeList() {
    },
    HTMLOptionsCollection: function HTMLOptionsCollection() {
    },
    DOMStringList: function DOMStringList() {
    },
    HTMLElement: function HTMLElement() {
    },
    HTMLUnknownElement: function HTMLUnknownElement() {
    },
    HTMLOrSVGElement: function HTMLOrSVGElement() {
    },
    DOMStringMap: function DOMStringMap() {
    },
    HTMLHtmlElement: function HTMLHtmlElement() {
    },
    HTMLHeadElement: function HTMLHeadElement() {
    },
    HTMLTitleElement: function HTMLTitleElement() {
    },
    HTMLBaseElement: function HTMLBaseElement() {
    },
    HTMLLinkElement: function HTMLLinkElement() {
    },
    HTMLMetaElement: function HTMLMetaElement() {
    },
    HTMLStyleElement: function HTMLStyleElement() {
    },
    HTMLBodyElement: function HTMLBodyElement() {
    },
    HTMLHeadingElement: function HTMLHeadingElement() {
    },
    HTMLParagraphElement: function HTMLParagraphElement() {
    },
    HTMLHRElement: function HTMLHRElement() {
    },
    HTMLPreElement: function HTMLPreElement() {
    },
    HTMLQuoteElement: function HTMLQuoteElement() {
    },
    HTMLOListElement: function HTMLOListElement() {
    },
    HTMLUListElement: function HTMLUListElement() {
    },
    HTMLMenuElement: function HTMLMenuElement() {
    },
    HTMLLIElement: function HTMLLIElement() {
    },
    HTMLDListElement: function HTMLDListElement() {
    },
    HTMLDivElement: function HTMLDivElement() {
    },
    HTMLAnchorElement: function HTMLAnchorElement() {
    },
    HTMLDataElement: function HTMLDataElement() {
    },
    HTMLTimeElement: function HTMLTimeElement() {
    },
    HTMLSpanElement: function HTMLSpanElement() {
    },
    HTMLBRElement: function HTMLBRElement() {
    },
    HTMLHyperlinkElementUtils: function HTMLHyperlinkElementUtils() {
    },
    HTMLModElement: function HTMLModElement() {
    },
    HTMLPictureElement: function HTMLPictureElement() {
    },
    HTMLSourceElement: function HTMLSourceElement() {
    },
    HTMLImageElement: function HTMLImageElement() {
    },
    HTMLIFrameElement: function HTMLIFrameElement() {
    },
    HTMLEmbedElement: function HTMLEmbedElement() {
    },
    HTMLObjectElement: function HTMLObjectElement() {
    },
    HTMLVideoElement: function HTMLVideoElement() {
    },
    HTMLAudioElement: function HTMLAudioElement() {
    },
    HTMLTrackElement: function HTMLTrackElement() {
    },
    HTMLMediaElement: function HTMLMediaElement() {
    },
    MediaError: function MediaError() {
    },
    AudioTrackList: function AudioTrackList() {
    },
    AudioTrack: function AudioTrack() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    VideoTrack: function VideoTrack() {
    },
    TextTrackList: function TextTrackList() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TimeRanges: function TimeRanges() {
    },
    TrackEvent: function TrackEvent() {
    },
    TrackEventInit: function TrackEventInit() {
    },
    HTMLMapElement: function HTMLMapElement() {
    },
    HTMLAreaElement: function HTMLAreaElement() {
    },
    HTMLTableElement: function HTMLTableElement() {
    },
    HTMLTableCaptionElement: function HTMLTableCaptionElement() {
    },
    HTMLTableColElement: function HTMLTableColElement() {
    },
    HTMLTableSectionElement: function HTMLTableSectionElement() {
    },
    HTMLTableRowElement: function HTMLTableRowElement() {
    },
    HTMLTableCellElement: function HTMLTableCellElement() {
    },
    HTMLFormElement: function HTMLFormElement() {
    },
    HTMLLabelElement: function HTMLLabelElement() {
    },
    HTMLInputElement: function HTMLInputElement() {
    },
    HTMLButtonElement: function HTMLButtonElement() {
    },
    HTMLSelectElement: function HTMLSelectElement() {
    },
    HTMLDataListElement: function HTMLDataListElement() {
    },
    HTMLOptGroupElement: function HTMLOptGroupElement() {
    },
    HTMLOptionElement: function HTMLOptionElement() {
    },
    HTMLTextAreaElement: function HTMLTextAreaElement() {
    },
    HTMLOutputElement: function HTMLOutputElement() {
    },
    HTMLProgressElement: function HTMLProgressElement() {
    },
    HTMLMeterElement: function HTMLMeterElement() {
    },
    HTMLFieldSetElement: function HTMLFieldSetElement() {
    },
    HTMLLegendElement: function HTMLLegendElement() {
    },
    ValidityState: function ValidityState() {
    },
    SubmitEvent: function SubmitEvent() {
    },
    SubmitEventInit: function SubmitEventInit() {
    },
    FormDataEvent: function FormDataEvent() {
    },
    FormDataEventInit: function FormDataEventInit() {
    },
    HTMLDetailsElement: function HTMLDetailsElement() {
    },
    HTMLDialogElement: function HTMLDialogElement() {
    },
    HTMLScriptElement: function HTMLScriptElement() {
    },
    HTMLTemplateElement: function HTMLTemplateElement() {
    },
    HTMLSlotElement: function HTMLSlotElement() {
    },
    AssignedNodesOptions: function AssignedNodesOptions() {
    },
    HTMLCanvasElement: function HTMLCanvasElement() {
    },
    CanvasRenderingContext2DSettings: function CanvasRenderingContext2DSettings() {
    },
    CanvasRenderingContext2D: function CanvasRenderingContext2D() {
    },
    CanvasState: function CanvasState() {
    },
    CanvasTransform: function CanvasTransform() {
    },
    CanvasCompositing: function CanvasCompositing() {
    },
    CanvasImageSmoothing: function CanvasImageSmoothing() {
    },
    CanvasFillStrokeStyles: function CanvasFillStrokeStyles() {
    },
    CanvasShadowStyles: function CanvasShadowStyles() {
    },
    CanvasFilters: function CanvasFilters() {
    },
    CanvasRect: function CanvasRect() {
    },
    CanvasDrawPath: function CanvasDrawPath() {
    },
    CanvasUserInterface: function CanvasUserInterface() {
    },
    CanvasText: function CanvasText() {
    },
    CanvasDrawImage: function CanvasDrawImage() {
    },
    CanvasImageData: function CanvasImageData() {
    },
    CanvasPathDrawingStyles: function CanvasPathDrawingStyles() {
    },
    CanvasTextDrawingStyles: function CanvasTextDrawingStyles() {
    },
    CanvasPath: function CanvasPath() {
    },
    CanvasGradient: function CanvasGradient() {
    },
    CanvasPattern: function CanvasPattern() {
    },
    TextMetrics: function TextMetrics() {
    },
    ImageDataSettings: function ImageDataSettings() {
    },
    ImageData: function ImageData() {
    },
    Path2D: function Path2D() {
    },
    ImageBitmapRenderingContext: function ImageBitmapRenderingContext() {
    },
    ImageBitmapRenderingContextSettings: function ImageBitmapRenderingContextSettings() {
    },
    ImageEncodeOptions: function ImageEncodeOptions() {
    },
    OffscreenCanvas: function OffscreenCanvas() {
    },
    OffscreenCanvasRenderingContext2D: function OffscreenCanvasRenderingContext2D() {
    },
    CustomElementRegistry: function CustomElementRegistry() {
    },
    ElementDefinitionOptions: function ElementDefinitionOptions() {
    },
    ElementInternals: function ElementInternals() {
    },
    ValidityStateFlags: function ValidityStateFlags() {
    },
    UserActivation: function UserActivation() {
    },
    FocusOptions: function FocusOptions() {
    },
    ElementContentEditable: function ElementContentEditable() {
    },
    DataTransfer: function DataTransfer() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DataTransferItem: function DataTransferItem() {
    },
    DragEvent: function DragEvent() {
    },
    DragEventInit: function DragEventInit() {
    },
    Window: function Window() {
    },
    WindowPostMessageOptions: function WindowPostMessageOptions() {
    },
    BarProp: function BarProp() {
    },
    Location: function Location() {
    },
    History: function History() {
    },
    PopStateEvent: function PopStateEvent() {
    },
    PopStateEventInit: function PopStateEventInit() {
    },
    HashChangeEvent: function HashChangeEvent() {
    },
    HashChangeEventInit: function HashChangeEventInit() {
    },
    PageTransitionEvent: function PageTransitionEvent() {
    },
    PageTransitionEventInit: function PageTransitionEventInit() {
    },
    BeforeUnloadEvent: function BeforeUnloadEvent() {
    },
    ErrorEvent: function ErrorEvent() {
    },
    ErrorEventInit: function ErrorEventInit() {
    },
    PromiseRejectionEvent: function PromiseRejectionEvent() {
    },
    PromiseRejectionEventInit: function PromiseRejectionEventInit() {
    },
    GlobalEventHandlers: function GlobalEventHandlers() {
    },
    WindowEventHandlers: function WindowEventHandlers() {
    },
    WindowOrWorkerGlobalScope: function WindowOrWorkerGlobalScope() {
    },
    DOMParser: function DOMParser() {
    },
    Navigator: function Navigator() {
    },
    NavigatorID: function NavigatorID() {
    },
    NavigatorLanguage: function NavigatorLanguage() {
    },
    NavigatorOnLine: function NavigatorOnLine() {
    },
    NavigatorContentUtils: function NavigatorContentUtils() {
    },
    NavigatorCookies: function NavigatorCookies() {
    },
    NavigatorPlugins: function NavigatorPlugins() {
    },
    PluginArray: function PluginArray() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    Plugin: function Plugin() {
    },
    MimeType: function MimeType() {
    },
    ImageBitmap: function ImageBitmap() {
    },
    ImageBitmapOptions: function ImageBitmapOptions() {
    },
    AnimationFrameProvider: function AnimationFrameProvider() {
    },
    MessageEvent: function MessageEvent() {
    },
    MessageEventInit: function MessageEventInit() {
    },
    EventSource: function EventSource() {
    },
    EventSourceInit: function EventSourceInit() {
    },
    MessageChannel: function MessageChannel() {
    },
    MessagePort: function MessagePort() {
    },
    StructuredSerializeOptions: function StructuredSerializeOptions() {
    },
    BroadcastChannel: function BroadcastChannel() {
    },
    WorkerGlobalScope: function WorkerGlobalScope() {
    },
    DedicatedWorkerGlobalScope: function DedicatedWorkerGlobalScope() {
    },
    SharedWorkerGlobalScope: function SharedWorkerGlobalScope() {
    },
    AbstractWorker: function AbstractWorker() {
    },
    Worker: function Worker() {
    },
    WorkerOptions: function WorkerOptions() {
    },
    SharedWorker: function SharedWorker() {
    },
    NavigatorConcurrentHardware: function NavigatorConcurrentHardware() {
    },
    WorkerNavigator: function WorkerNavigator() {
    },
    WorkerLocation: function WorkerLocation() {
    },
    WorkletGlobalScope: function WorkletGlobalScope() {
    },
    Worklet: function Worklet() {
    },
    WorkletOptions: function WorkletOptions() {
    },
    Storage: function Storage() {
    },
    WindowSessionStorage: function WindowSessionStorage() {
    },
    WindowLocalStorage: function WindowLocalStorage() {
    },
    StorageEvent: function StorageEvent() {
    },
    StorageEventInit: function StorageEventInit() {
    },
    HTMLMarqueeElement: function HTMLMarqueeElement() {
    },
    HTMLFrameSetElement: function HTMLFrameSetElement() {
    },
    HTMLFrameElement: function HTMLFrameElement() {
    },
    HTMLDirectoryElement: function HTMLDirectoryElement() {
    },
    HTMLFontElement: function HTMLFontElement() {
    },
    HTMLParamElement: function HTMLParamElement() {
    },
    External: function External() {
    },
    IdleOptions: function IdleOptions() {
    },
    IdleDetector: function IdleDetector() {
    },
    ImageCapture: function ImageCapture() {
    },
    PhotoCapabilities: function PhotoCapabilities() {
    },
    PhotoSettings: function PhotoSettings() {
    },
    MediaSettingsRange: function MediaSettingsRange() {
    },
    ConstrainPoint2DParameters: function ConstrainPoint2DParameters() {
    },
    Point2D: function Point2D() {
    },
    ImageResource: function ImageResource() {
    },
    IDBRequest: function IDBRequest() {
    },
    IDBOpenDBRequest: function IDBOpenDBRequest() {
    },
    IDBVersionChangeEvent: function IDBVersionChangeEvent() {
    },
    IDBVersionChangeEventInit: function IDBVersionChangeEventInit() {
    },
    IDBFactory: function IDBFactory() {
    },
    IDBDatabaseInfo: function IDBDatabaseInfo() {
    },
    IDBDatabase: function IDBDatabase() {
    },
    IDBTransactionOptions: function IDBTransactionOptions() {
    },
    IDBObjectStoreParameters: function IDBObjectStoreParameters() {
    },
    IDBObjectStore: function IDBObjectStore() {
    },
    IDBIndexParameters: function IDBIndexParameters() {
    },
    IDBIndex: function IDBIndex() {
    },
    IDBKeyRange: function IDBKeyRange() {
    },
    IDBCursor: function IDBCursor() {
    },
    IDBCursorWithValue: function IDBCursorWithValue() {
    },
    IDBTransaction: function IDBTransaction() {
    },
    Ink: function Ink() {
    },
    InkPresenterParam: function InkPresenterParam() {
    },
    InkPresenter: function InkPresenter() {
    },
    InkTrailStyle: function InkTrailStyle() {
    },
    InputDeviceCapabilities: function InputDeviceCapabilities() {
    },
    InputDeviceCapabilitiesInit: function InputDeviceCapabilitiesInit() {
    },
    IntersectionObserver: function IntersectionObserver() {
    },
    IntersectionObserverEntry: function IntersectionObserverEntry() {
    },
    IntersectionObserverEntryInit: function IntersectionObserverEntryInit() {
    },
    IntersectionObserverInit: function IntersectionObserverInit() {
    },
    InterventionReportBody: function InterventionReportBody() {
    },
    IsInputPendingOptions: function IsInputPendingOptions() {
    },
    Scheduling: function Scheduling() {
    },
    Profiler: function Profiler() {
    },
    ProfilerTrace: function ProfilerTrace() {
    },
    ProfilerSample: function ProfilerSample() {
    },
    ProfilerStack: function ProfilerStack() {
    },
    ProfilerFrame: function ProfilerFrame() {
    },
    ProfilerInitOptions: function ProfilerInitOptions() {
    },
    JsonLd: function JsonLd() {
    },
    JsonLdProcessor: function JsonLdProcessor() {
    },
    RdfDataset: function RdfDataset() {
    },
    RdfGraph: function RdfGraph() {
    },
    RdfTriple: function RdfTriple() {
    },
    RdfLiteral: function RdfLiteral() {
    },
    JsonLdOptions: function JsonLdOptions() {
    },
    LoadDocumentOptions: function LoadDocumentOptions() {
    },
    RemoteDocument: function RemoteDocument() {
    },
    JsonLdError: function JsonLdError() {
    },
    JsonLdFramingError: function JsonLdFramingError() {
    },
    Keyboard: function Keyboard() {
    },
    KeyboardLayoutMap: function KeyboardLayoutMap() {
    },
    KHRParallelShaderCompile: function KHRParallelShaderCompile() {
    },
    LargestContentfulPaint: function LargestContentfulPaint() {
    },
    LayoutShift: function LayoutShift() {
    },
    LayoutShiftAttribution: function LayoutShiftAttribution() {
    },
    QueryOptions: function QueryOptions() {
    },
    FontData: function FontData() {
    },
    PerformanceLongTaskTiming: function PerformanceLongTaskTiming() {
    },
    TaskAttributionTiming: function TaskAttributionTiming() {
    },
    Magnetometer: function Magnetometer() {
    },
    MagnetometerSensorOptions: function MagnetometerSensorOptions() {
    },
    UncalibratedMagnetometer: function UncalibratedMagnetometer() {
    },
    MagnetometerReadingValues: function MagnetometerReadingValues() {
    },
    UncalibratedMagnetometerReadingValues: function UncalibratedMagnetometerReadingValues() {
    },
    BeforeInstallPromptEvent: function BeforeInstallPromptEvent() {
    },
    PromptResponseObject: function PromptResponseObject() {
    },
    MathMLElement: function MathMLElement() {
    },
    MediaConfiguration: function MediaConfiguration() {
    },
    MediaDecodingConfiguration: function MediaDecodingConfiguration() {
    },
    MediaEncodingConfiguration: function MediaEncodingConfiguration() {
    },
    VideoConfiguration: function VideoConfiguration() {
    },
    AudioConfiguration: function AudioConfiguration() {
    },
    MediaCapabilitiesKeySystemConfiguration: function MediaCapabilitiesKeySystemConfiguration() {
    },
    KeySystemTrackConfiguration: function KeySystemTrackConfiguration() {
    },
    MediaCapabilitiesInfo: function MediaCapabilitiesInfo() {
    },
    MediaCapabilitiesDecodingInfo: function MediaCapabilitiesDecodingInfo() {
    },
    MediaCapabilitiesEncodingInfo: function MediaCapabilitiesEncodingInfo() {
    },
    MediaCapabilities: function MediaCapabilities() {
    },
    VideoPlaybackQuality: function VideoPlaybackQuality() {
    },
    MediaSource: function MediaSource() {
    },
    MediaSourceHandle: function MediaSourceHandle() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    MockCapturePromptResultConfiguration: function MockCapturePromptResultConfiguration() {
    },
    MockCaptureDeviceConfiguration: function MockCaptureDeviceConfiguration() {
    },
    MockCameraConfiguration: function MockCameraConfiguration() {
    },
    MockMicrophoneConfiguration: function MockMicrophoneConfiguration() {
    },
    CanvasCaptureMediaStreamTrack: function CanvasCaptureMediaStreamTrack() {
    },
    CaptureActionEvent: function CaptureActionEvent() {
    },
    CaptureActionEventInit: function CaptureActionEventInit() {
    },
    CropTarget: function CropTarget() {
    },
    BrowserCaptureMediaStreamTrack: function BrowserCaptureMediaStreamTrack() {
    },
    MediaStream: function MediaStream() {
    },
    MediaStreamTrack: function MediaStreamTrack() {
    },
    MediaTrackSupportedConstraints: function MediaTrackSupportedConstraints() {
    },
    MediaTrackCapabilities: function MediaTrackCapabilities() {
    },
    MediaTrackConstraints: function MediaTrackConstraints() {
    },
    MediaTrackConstraintSet: function MediaTrackConstraintSet() {
    },
    MediaTrackSettings: function MediaTrackSettings() {
    },
    MediaStreamTrackEvent: function MediaStreamTrackEvent() {
    },
    MediaStreamTrackEventInit: function MediaStreamTrackEventInit() {
    },
    OverconstrainedError: function OverconstrainedError() {
    },
    MediaDevices: function MediaDevices() {
    },
    MediaDeviceInfo: function MediaDeviceInfo() {
    },
    InputDeviceInfo: function InputDeviceInfo() {
    },
    MediaStreamConstraints: function MediaStreamConstraints() {
    },
    DoubleRange: function DoubleRange() {
    },
    ConstrainDoubleRange: function ConstrainDoubleRange() {
    },
    ULongRange: function ULongRange() {
    },
    ConstrainULongRange: function ConstrainULongRange() {
    },
    ConstrainBooleanParameters: function ConstrainBooleanParameters() {
    },
    ConstrainDOMStringParameters: function ConstrainDOMStringParameters() {
    },
    DevicePermissionDescriptor: function DevicePermissionDescriptor() {
    },
    CameraDevicePermissionDescriptor: function CameraDevicePermissionDescriptor() {
    },
    MediaStreamTrackProcessor: function MediaStreamTrackProcessor() {
    },
    MediaStreamTrackProcessorInit: function MediaStreamTrackProcessorInit() {
    },
    VideoTrackGenerator: function VideoTrackGenerator() {
    },
    ViewportMediaStreamConstraints: function ViewportMediaStreamConstraints() {
    },
    MediaSession: function MediaSession() {
    },
    MediaMetadata: function MediaMetadata() {
    },
    MediaMetadataInit: function MediaMetadataInit() {
    },
    MediaImage: function MediaImage() {
    },
    MediaPositionState: function MediaPositionState() {
    },
    MediaSessionActionDetails: function MediaSessionActionDetails() {
    },
    MediaRecorder: function MediaRecorder() {
    },
    MediaRecorderOptions: function MediaRecorderOptions() {
    },
    BlobEvent: function BlobEvent() {
    },
    BlobEventInit: function BlobEventInit() {
    },
    HTMLModelElement: function HTMLModelElement() {
    },
    Navigation: function Navigation() {
    },
    NavigationUpdateCurrentEntryOptions: function NavigationUpdateCurrentEntryOptions() {
    },
    NavigationOptions: function NavigationOptions() {
    },
    NavigationNavigateOptions: function NavigationNavigateOptions() {
    },
    NavigationReloadOptions: function NavigationReloadOptions() {
    },
    NavigationResult: function NavigationResult() {
    },
    NavigationCurrentEntryChangeEvent: function NavigationCurrentEntryChangeEvent() {
    },
    NavigationCurrentEntryChangeEventInit: function NavigationCurrentEntryChangeEventInit() {
    },
    NavigationTransition: function NavigationTransition() {
    },
    NavigateEvent: function NavigateEvent() {
    },
    NavigateEventInit: function NavigateEventInit() {
    },
    NavigationInterceptOptions: function NavigationInterceptOptions() {
    },
    NavigationDestination: function NavigationDestination() {
    },
    NavigationHistoryEntry: function NavigationHistoryEntry() {
    },
    PerformanceNavigationTiming: function PerformanceNavigationTiming() {
    },
    PerformanceTiming: function PerformanceTiming() {
    },
    PerformanceNavigation: function PerformanceNavigation() {
    },
    NavigatorNetworkInformation: function NavigatorNetworkInformation() {
    },
    NetworkInformation: function NetworkInformation() {
    },
    Notification: function Notification() {
    },
    NotificationOptions: function NotificationOptions() {
    },
    NotificationAction: function NotificationAction() {
    },
    GetNotificationOptions: function GetNotificationOptions() {
    },
    NotificationEvent: function NotificationEvent() {
    },
    NotificationEventInit: function NotificationEventInit() {
    },
    OESDrawBuffersIndexed: function OESDrawBuffersIndexed() {
    },
    OESElementIndexUint: function OESElementIndexUint() {
    },
    OESFboRenderMipmap: function OESFboRenderMipmap() {
    },
    OESStandardDerivatives: function OESStandardDerivatives() {
    },
    OESTextureFloat: function OESTextureFloat() {
    },
    OESTextureFloatLinear: function OESTextureFloatLinear() {
    },
    OESTextureHalfFloat: function OESTextureHalfFloat() {
    },
    OESTextureHalfFloatLinear: function OESTextureHalfFloatLinear() {
    },
    WebGLVertexArrayObjectOES: function WebGLVertexArrayObjectOES() {
    },
    OESVertexArrayObject: function OESVertexArrayObject() {
    },
    DeviceOrientationEvent: function DeviceOrientationEvent() {
    },
    DeviceOrientationEventInit: function DeviceOrientationEventInit() {
    },
    DeviceMotionEventAcceleration: function DeviceMotionEventAcceleration() {
    },
    DeviceMotionEventRotationRate: function DeviceMotionEventRotationRate() {
    },
    DeviceMotionEvent: function DeviceMotionEvent() {
    },
    DeviceMotionEventAccelerationInit: function DeviceMotionEventAccelerationInit() {
    },
    DeviceMotionEventRotationRateInit: function DeviceMotionEventRotationRateInit() {
    },
    DeviceMotionEventInit: function DeviceMotionEventInit() {
    },
    OrientationSensor: function OrientationSensor() {
    },
    OrientationSensorOptions: function OrientationSensorOptions() {
    },
    AbsoluteOrientationSensor: function AbsoluteOrientationSensor() {
    },
    RelativeOrientationSensor: function RelativeOrientationSensor() {
    },
    AbsoluteOrientationReadingValues: function AbsoluteOrientationReadingValues() {
    },
    RelativeOrientationReadingValues: function RelativeOrientationReadingValues() {
    },
    OVRMultiview2: function OVRMultiview2() {
    },
    PerformancePaintTiming: function PerformancePaintTiming() {
    },
    PaymentManager: function PaymentManager() {
    },
    PaymentInstruments: function PaymentInstruments() {
    },
    PaymentInstrument: function PaymentInstrument() {
    },
    ImageObject: function ImageObject() {
    },
    CanMakePaymentEvent: function CanMakePaymentEvent() {
    },
    PaymentRequestDetailsUpdate: function PaymentRequestDetailsUpdate() {
    },
    PaymentRequestEvent: function PaymentRequestEvent() {
    },
    PaymentRequestEventInit: function PaymentRequestEventInit() {
    },
    PaymentHandlerResponse: function PaymentHandlerResponse() {
    },
    AddressInit: function AddressInit() {
    },
    PaymentOptions: function PaymentOptions() {
    },
    PaymentShippingOption: function PaymentShippingOption() {
    },
    AddressErrors: function AddressErrors() {
    },
    PaymentRequest: function PaymentRequest() {
    },
    PaymentMethodData: function PaymentMethodData() {
    },
    PaymentCurrencyAmount: function PaymentCurrencyAmount() {
    },
    PaymentDetailsBase: function PaymentDetailsBase() {
    },
    PaymentDetailsInit: function PaymentDetailsInit() {
    },
    PaymentDetailsUpdate: function PaymentDetailsUpdate() {
    },
    PaymentDetailsModifier: function PaymentDetailsModifier() {
    },
    PaymentItem: function PaymentItem() {
    },
    PaymentCompleteDetails: function PaymentCompleteDetails() {
    },
    PaymentResponse: function PaymentResponse() {
    },
    PaymentValidationErrors: function PaymentValidationErrors() {
    },
    PaymentMethodChangeEvent: function PaymentMethodChangeEvent() {
    },
    PaymentMethodChangeEventInit: function PaymentMethodChangeEventInit() {
    },
    PaymentRequestUpdateEvent: function PaymentRequestUpdateEvent() {
    },
    PaymentRequestUpdateEventInit: function PaymentRequestUpdateEventInit() {
    },
    MemoryMeasurement: function MemoryMeasurement() {
    },
    MemoryBreakdownEntry: function MemoryBreakdownEntry() {
    },
    MemoryAttribution: function MemoryAttribution() {
    },
    MemoryAttributionContainer: function MemoryAttributionContainer() {
    },
    PerformanceEntry: function PerformanceEntry() {
    },
    PerformanceObserver: function PerformanceObserver() {
    },
    PerformanceObserverCallbackOptions: function PerformanceObserverCallbackOptions() {
    },
    PerformanceObserverInit: function PerformanceObserverInit() {
    },
    PerformanceObserverEntryList: function PerformanceObserverEntryList() {
    },
    PeriodicSyncManager: function PeriodicSyncManager() {
    },
    BackgroundSyncOptions: function BackgroundSyncOptions() {
    },
    PeriodicSyncEventInit: function PeriodicSyncEventInit() {
    },
    PeriodicSyncEvent: function PeriodicSyncEvent() {
    },
    Permissions: function Permissions() {
    },
    PermissionDescriptor: function PermissionDescriptor() {
    },
    PermissionStatus: function PermissionStatus() {
    },
    PermissionSetParameters: function PermissionSetParameters() {
    },
    PermissionsPolicy: function PermissionsPolicy() {
    },
    PermissionsPolicyViolationReportBody: function PermissionsPolicyViolationReportBody() {
    },
    PictureInPictureWindow: function PictureInPictureWindow() {
    },
    PictureInPictureEvent: function PictureInPictureEvent() {
    },
    PictureInPictureEventInit: function PictureInPictureEventInit() {
    },
    PointerEventInit: function PointerEventInit() {
    },
    PointerEvent: function PointerEvent() {
    },
    HTMLPortalElement: function HTMLPortalElement() {
    },
    PortalActivateOptions: function PortalActivateOptions() {
    },
    PortalHost: function PortalHost() {
    },
    PortalActivateEvent: function PortalActivateEvent() {
    },
    PortalActivateEventInit: function PortalActivateEventInit() {
    },
    Presentation: function Presentation() {
    },
    PresentationRequest: function PresentationRequest() {
    },
    PresentationAvailability: function PresentationAvailability() {
    },
    PresentationConnectionAvailableEvent: function PresentationConnectionAvailableEvent() {
    },
    PresentationConnectionAvailableEventInit: function PresentationConnectionAvailableEventInit() {
    },
    PresentationConnection: function PresentationConnection() {
    },
    PresentationConnectionCloseEvent: function PresentationConnectionCloseEvent() {
    },
    PresentationConnectionCloseEventInit: function PresentationConnectionCloseEventInit() {
    },
    PresentationReceiver: function PresentationReceiver() {
    },
    PresentationConnectionList: function PresentationConnectionList() {
    },
    ProximitySensor: function ProximitySensor() {
    },
    ProximityReadingValues: function ProximityReadingValues() {
    },
    PushPermissionDescriptor: function PushPermissionDescriptor() {
    },
    PushManager: function PushManager() {
    },
    PushSubscriptionOptions: function PushSubscriptionOptions() {
    },
    PushSubscriptionOptionsInit: function PushSubscriptionOptionsInit() {
    },
    PushSubscription: function PushSubscription() {
    },
    PushSubscriptionJSON: function PushSubscriptionJSON() {
    },
    PushMessageData: function PushMessageData() {
    },
    PushEvent: function PushEvent() {
    },
    PushEventInit: function PushEventInit() {
    },
    PushSubscriptionChangeEvent: function PushSubscriptionChangeEvent() {
    },
    PushSubscriptionChangeEventInit: function PushSubscriptionChangeEventInit() {
    },
    XRCamera: function XRCamera() {
    },
    RemotePlayback: function RemotePlayback() {
    },
    ReportBody: function ReportBody() {
    },
    Report: function Report() {
    },
    ReportingObserver: function ReportingObserver() {
    },
    ReportingObserverOptions: function ReportingObserverOptions() {
    },
    GenerateTestReportParameters: function GenerateTestReportParameters() {
    },
    IdleRequestOptions: function IdleRequestOptions() {
    },
    IdleDeadline: function IdleDeadline() {
    },
    ResizeObserverOptions: function ResizeObserverOptions() {
    },
    ResizeObserver: function ResizeObserver() {
    },
    ResizeObserverEntry: function ResizeObserverEntry() {
    },
    ResizeObserverSize: function ResizeObserverSize() {
    },
    PerformanceResourceTiming: function PerformanceResourceTiming() {
    },
    Sanitizer: function Sanitizer() {
    },
    SetHTMLOptions: function SetHTMLOptions() {
    },
    SanitizerConfig: function SanitizerConfig() {
    },
    NetworkInformationSaveData: function NetworkInformationSaveData() {
    },
    SchedulerPostTaskOptions: function SchedulerPostTaskOptions() {
    },
    Scheduler: function Scheduler() {
    },
    TaskPriorityChangeEvent: function TaskPriorityChangeEvent() {
    },
    TaskPriorityChangeEventInit: function TaskPriorityChangeEventInit() {
    },
    TaskControllerInit: function TaskControllerInit() {
    },
    TaskController: function TaskController() {
    },
    TaskSignal: function TaskSignal() {
    },
    CaptureController: function CaptureController() {
    },
    DisplayMediaStreamOptions: function DisplayMediaStreamOptions() {
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    WakeLock: function WakeLock() {
    },
    WakeLockSentinel: function WakeLockSentinel() {
    },
    ScrollTimelineOptions: function ScrollTimelineOptions() {
    },
    ScrollTimeline: function ScrollTimeline() {
    },
    ViewTimelineOptions: function ViewTimelineOptions() {
    },
    ViewTimeline: function ViewTimeline() {
    },
    FragmentDirective: function FragmentDirective() {
    },
    SecurePaymentConfirmationRequest: function SecurePaymentConfirmationRequest() {
    },
    AuthenticationExtensionsPaymentInputs: function AuthenticationExtensionsPaymentInputs() {
    },
    CollectedClientPaymentData: function CollectedClientPaymentData() {
    },
    CollectedClientAdditionalPaymentData: function CollectedClientAdditionalPaymentData() {
    },
    PaymentCredentialInstrument: function PaymentCredentialInstrument() {
    },
    Selection: function Selection() {
    },
    Serial: function Serial() {
    },
    SerialPortRequestOptions: function SerialPortRequestOptions() {
    },
    SerialPortFilter: function SerialPortFilter() {
    },
    SerialPort: function SerialPort() {
    },
    SerialPortInfo: function SerialPortInfo() {
    },
    SerialOptions: function SerialOptions() {
    },
    SerialOutputSignals: function SerialOutputSignals() {
    },
    SerialInputSignals: function SerialInputSignals() {
    },
    PerformanceServerTiming: function PerformanceServerTiming() {
    },
    ServiceWorker: function ServiceWorker() {
    },
    ServiceWorkerRegistration: function ServiceWorkerRegistration() {
    },
    ServiceWorkerContainer: function ServiceWorkerContainer() {
    },
    RegistrationOptions: function RegistrationOptions() {
    },
    NavigationPreloadManager: function NavigationPreloadManager() {
    },
    NavigationPreloadState: function NavigationPreloadState() {
    },
    ServiceWorkerGlobalScope: function ServiceWorkerGlobalScope() {
    },
    Client: function Client() {
    },
    WindowClient: function WindowClient() {
    },
    Clients: function Clients() {
    },
    ClientQueryOptions: function ClientQueryOptions() {
    },
    ExtendableEvent: function ExtendableEvent() {
    },
    ExtendableEventInit: function ExtendableEventInit() {
    },
    FetchEvent: function FetchEvent() {
    },
    FetchEventInit: function FetchEventInit() {
    },
    ExtendableMessageEvent: function ExtendableMessageEvent() {
    },
    ExtendableMessageEventInit: function ExtendableMessageEventInit() {
    },
    Cache: function Cache() {
    },
    CacheQueryOptions: function CacheQueryOptions() {
    },
    CacheStorage: function CacheStorage() {
    },
    MultiCacheQueryOptions: function MultiCacheQueryOptions() {
    },
    FaceDetector: function FaceDetector() {
    },
    FaceDetectorOptions: function FaceDetectorOptions() {
    },
    DetectedFace: function DetectedFace() {
    },
    Landmark: function Landmark() {
    },
    BarcodeDetector: function BarcodeDetector() {
    },
    BarcodeDetectorOptions: function BarcodeDetectorOptions() {
    },
    DetectedBarcode: function DetectedBarcode() {
    },
    SpeechRecognition: function SpeechRecognition() {
    },
    SpeechRecognitionErrorEvent: function SpeechRecognitionErrorEvent() {
    },
    SpeechRecognitionErrorEventInit: function SpeechRecognitionErrorEventInit() {
    },
    SpeechRecognitionAlternative: function SpeechRecognitionAlternative() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    SpeechRecognitionResultList: function SpeechRecognitionResultList() {
    },
    SpeechRecognitionEvent: function SpeechRecognitionEvent() {
    },
    SpeechRecognitionEventInit: function SpeechRecognitionEventInit() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechSynthesis: function SpeechSynthesis() {
    },
    SpeechSynthesisUtterance: function SpeechSynthesisUtterance() {
    },
    SpeechSynthesisEvent: function SpeechSynthesisEvent() {
    },
    SpeechSynthesisEventInit: function SpeechSynthesisEventInit() {
    },
    SpeechSynthesisErrorEvent: function SpeechSynthesisErrorEvent() {
    },
    SpeechSynthesisErrorEventInit: function SpeechSynthesisErrorEventInit() {
    },
    SpeechSynthesisVoice: function SpeechSynthesisVoice() {
    },
    NavigatorStorage: function NavigatorStorage() {
    },
    StorageManager: function StorageManager() {
    },
    StorageEstimate: function StorageEstimate() {
    },
    ReadableStream: function ReadableStream() {
    },
    ReadableStreamGetReaderOptions: function ReadableStreamGetReaderOptions() {
    },
    ReadableStreamIteratorOptions: function ReadableStreamIteratorOptions() {
    },
    ReadableWritablePair: function ReadableWritablePair() {
    },
    StreamPipeOptions: function StreamPipeOptions() {
    },
    UnderlyingSource: function UnderlyingSource() {
    },
    ReadableStreamGenericReader: function ReadableStreamGenericReader() {
    },
    ReadableStreamDefaultReader: function ReadableStreamDefaultReader() {
    },
    ReadableStreamReadResult: function ReadableStreamReadResult() {
    },
    ReadableStreamBYOBReader: function ReadableStreamBYOBReader() {
    },
    ReadableStreamDefaultController: function ReadableStreamDefaultController() {
    },
    ReadableByteStreamController: function ReadableByteStreamController() {
    },
    ReadableStreamBYOBRequest: function ReadableStreamBYOBRequest() {
    },
    WritableStream: function WritableStream() {
    },
    UnderlyingSink: function UnderlyingSink() {
    },
    WritableStreamDefaultWriter: function WritableStreamDefaultWriter() {
    },
    WritableStreamDefaultController: function WritableStreamDefaultController() {
    },
    TransformStream: function TransformStream() {
    },
    Transformer: function Transformer() {
    },
    TransformStreamDefaultController: function TransformStreamDefaultController() {
    },
    QueuingStrategy: function QueuingStrategy() {
    },
    QueuingStrategyInit: function QueuingStrategyInit() {
    },
    ByteLengthQueuingStrategy: function ByteLengthQueuingStrategy() {
    },
    CountQueuingStrategy: function CountQueuingStrategy() {
    },
    GenericTransformStream: function GenericTransformStream() {
    },
    SVGElement: function SVGElement() {
    },
    SVGBoundingBoxOptions: function SVGBoundingBoxOptions() {
    },
    SVGGraphicsElement: function SVGGraphicsElement() {
    },
    SVGGeometryElement: function SVGGeometryElement() {
    },
    SVGNumber: function SVGNumber() {
    },
    SVGLength: function SVGLength() {
    },
    SVGAngle: function SVGAngle() {
    },
    SVGNumberList: function SVGNumberList() {
    },
    SVGLengthList: function SVGLengthList() {
    },
    SVGStringList: function SVGStringList() {
    },
    SVGAnimatedBoolean: function SVGAnimatedBoolean() {
    },
    SVGAnimatedEnumeration: function SVGAnimatedEnumeration() {
    },
    SVGAnimatedInteger: function SVGAnimatedInteger() {
    },
    SVGAnimatedNumber: function SVGAnimatedNumber() {
    },
    SVGAnimatedLength: function SVGAnimatedLength() {
    },
    SVGAnimatedAngle: function SVGAnimatedAngle() {
    },
    SVGAnimatedString: function SVGAnimatedString() {
    },
    SVGAnimatedRect: function SVGAnimatedRect() {
    },
    SVGAnimatedNumberList: function SVGAnimatedNumberList() {
    },
    SVGAnimatedLengthList: function SVGAnimatedLengthList() {
    },
    SVGUnitTypes: function SVGUnitTypes() {
    },
    SVGTests: function SVGTests() {
    },
    SVGFitToViewBox: function SVGFitToViewBox() {
    },
    SVGURIReference: function SVGURIReference() {
    },
    SVGSVGElement: function SVGSVGElement() {
    },
    SVGGElement: function SVGGElement() {
    },
    SVGDefsElement: function SVGDefsElement() {
    },
    SVGDescElement: function SVGDescElement() {
    },
    SVGMetadataElement: function SVGMetadataElement() {
    },
    SVGTitleElement: function SVGTitleElement() {
    },
    SVGSymbolElement: function SVGSymbolElement() {
    },
    SVGUseElement: function SVGUseElement() {
    },
    SVGUseElementShadowRoot: function SVGUseElementShadowRoot() {
    },
    SVGElementInstance: function SVGElementInstance() {
    },
    ShadowAnimation: function ShadowAnimation() {
    },
    SVGSwitchElement: function SVGSwitchElement() {
    },
    GetSVGDocument: function GetSVGDocument() {
    },
    SVGStyleElement: function SVGStyleElement() {
    },
    SVGTransform: function SVGTransform() {
    },
    SVGTransformList: function SVGTransformList() {
    },
    SVGAnimatedTransformList: function SVGAnimatedTransformList() {
    },
    SVGPreserveAspectRatio: function SVGPreserveAspectRatio() {
    },
    SVGAnimatedPreserveAspectRatio: function SVGAnimatedPreserveAspectRatio() {
    },
    SVGPathElement: function SVGPathElement() {
    },
    SVGRectElement: function SVGRectElement() {
    },
    SVGCircleElement: function SVGCircleElement() {
    },
    SVGEllipseElement: function SVGEllipseElement() {
    },
    SVGLineElement: function SVGLineElement() {
    },
    SVGAnimatedPoints: function SVGAnimatedPoints() {
    },
    SVGPointList: function SVGPointList() {
    },
    SVGPolylineElement: function SVGPolylineElement() {
    },
    SVGPolygonElement: function SVGPolygonElement() {
    },
    SVGTextContentElement: function SVGTextContentElement() {
    },
    SVGTextPositioningElement: function SVGTextPositioningElement() {
    },
    SVGTextElement: function SVGTextElement() {
    },
    SVGTSpanElement: function SVGTSpanElement() {
    },
    SVGTextPathElement: function SVGTextPathElement() {
    },
    SVGImageElement: function SVGImageElement() {
    },
    SVGForeignObjectElement: function SVGForeignObjectElement() {
    },
    SVGMarkerElement: function SVGMarkerElement() {
    },
    SVGGradientElement: function SVGGradientElement() {
    },
    SVGLinearGradientElement: function SVGLinearGradientElement() {
    },
    SVGRadialGradientElement: function SVGRadialGradientElement() {
    },
    SVGStopElement: function SVGStopElement() {
    },
    SVGPatternElement: function SVGPatternElement() {
    },
    SVGScriptElement: function SVGScriptElement() {
    },
    SVGAElement: function SVGAElement() {
    },
    SVGViewElement: function SVGViewElement() {
    },
    TimeEvent: function TimeEvent() {
    },
    SVGAnimationElement: function SVGAnimationElement() {
    },
    SVGAnimateElement: function SVGAnimateElement() {
    },
    SVGSetElement: function SVGSetElement() {
    },
    SVGAnimateMotionElement: function SVGAnimateMotionElement() {
    },
    SVGMPathElement: function SVGMPathElement() {
    },
    SVGAnimateTransformElement: function SVGAnimateTransformElement() {
    },
    SVGDiscardElement: function SVGDiscardElement() {
    },
    TestUtils: function TestUtils() {
    },
    TextDetector: function TextDetector() {
    },
    DetectedText: function DetectedText() {
    },
    TouchInit: function TouchInit() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TouchEventInit: function TouchEventInit() {
    },
    TouchEvent: function TouchEvent() {
    },
    TrustedHTML: function TrustedHTML() {
    },
    TrustedScript: function TrustedScript() {
    },
    TrustedScriptURL: function TrustedScriptURL() {
    },
    TrustedTypePolicyFactory: function TrustedTypePolicyFactory() {
    },
    TrustedTypePolicy: function TrustedTypePolicy() {
    },
    TrustedTypePolicyOptions: function TrustedTypePolicyOptions() {
    },
    NavigatorUABrandVersion: function NavigatorUABrandVersion() {
    },
    UADataValues: function UADataValues() {
    },
    UALowEntropyJSON: function UALowEntropyJSON() {
    },
    NavigatorUAData: function NavigatorUAData() {
    },
    NavigatorUA: function NavigatorUA() {
    },
    UIEvent: function UIEvent() {
    },
    UIEventInit: function UIEventInit() {
    },
    FocusEvent: function FocusEvent() {
    },
    FocusEventInit: function FocusEventInit() {
    },
    MouseEvent: function MouseEvent() {
    },
    MouseEventInit: function MouseEventInit() {
    },
    EventModifierInit: function EventModifierInit() {
    },
    WheelEvent: function WheelEvent() {
    },
    WheelEventInit: function WheelEventInit() {
    },
    InputEvent: function InputEvent() {
    },
    InputEventInit: function InputEventInit() {
    },
    KeyboardEvent: function KeyboardEvent() {
    },
    KeyboardEventInit: function KeyboardEventInit() {
    },
    CompositionEvent: function CompositionEvent() {
    },
    CompositionEventInit: function CompositionEventInit() {
    },
    MutationEvent: function MutationEvent() {
    },
    Url: function Url() {
    },
    URLSearchParams: function URLSearchParams() {
    },
    URLPattern: function URLPattern() {
    },
    URLPatternInit: function URLPatternInit() {
    },
    URLPatternOptions: function URLPatternOptions() {
    },
    URLPatternResult: function URLPatternResult() {
    },
    URLPatternComponentResult: function URLPatternComponentResult() {
    },
    PerformanceMarkOptions: function PerformanceMarkOptions() {
    },
    PerformanceMeasureOptions: function PerformanceMeasureOptions() {
    },
    PerformanceMark: function PerformanceMark() {
    },
    PerformanceMeasure: function PerformanceMeasure() {
    },
    VideoFrameCallbackMetadata: function VideoFrameCallbackMetadata() {
    },
    VirtualKeyboard: function VirtualKeyboard() {
    },
    ARIAMixin: function ARIAMixin() {
    },
    WebAssemblyInstantiatedSource: function WebAssemblyInstantiatedSource() {
    },
    WebAssembly: function WebAssembly() {
    },
    ModuleExportDescriptor: function ModuleExportDescriptor() {
    },
    ModuleImportDescriptor: function ModuleImportDescriptor() {
    },
    Module: function Module() {
    },
    Instance: function Instance() {
    },
    MemoryDescriptor: function MemoryDescriptor() {
    },
    Memory: function Memory() {
    },
    TableDescriptor: function TableDescriptor() {
    },
    Table: function Table() {
    },
    GlobalDescriptor: function GlobalDescriptor() {
    },
    Global: function Global() {
    },
    AnimationTimeline: function AnimationTimeline() {
    },
    DocumentTimelineOptions: function DocumentTimelineOptions() {
    },
    DocumentTimeline: function DocumentTimeline() {
    },
    Animation: function Animation() {
    },
    AnimationEffect: function AnimationEffect() {
    },
    EffectTiming: function EffectTiming() {
    },
    OptionalEffectTiming: function OptionalEffectTiming() {
    },
    ComputedEffectTiming: function ComputedEffectTiming() {
    },
    KeyframeEffect: function KeyframeEffect() {
    },
    BaseComputedKeyframe: function BaseComputedKeyframe() {
    },
    BasePropertyIndexedKeyframe: function BasePropertyIndexedKeyframe() {
    },
    BaseKeyframe: function BaseKeyframe() {
    },
    KeyframeEffectOptions: function KeyframeEffectOptions() {
    },
    Animatable: function Animatable() {
    },
    KeyframeAnimationOptions: function KeyframeAnimationOptions() {
    },
    GetAnimationsOptions: function GetAnimationsOptions() {
    },
    GroupEffect: function GroupEffect() {
    },
    AnimationNodeList: function AnimationNodeList() {
    },
    SequenceEffect: function SequenceEffect() {
    },
    AnimationPlaybackEvent: function AnimationPlaybackEvent() {
    },
    AnimationPlaybackEventInit: function AnimationPlaybackEventInit() {
    },
    LaunchParams: function LaunchParams() {
    },
    LaunchQueue: function LaunchQueue() {
    },
    BluetoothDataFilterInit: function BluetoothDataFilterInit() {
    },
    BluetoothManufacturerDataFilterInit: function BluetoothManufacturerDataFilterInit() {
    },
    BluetoothServiceDataFilterInit: function BluetoothServiceDataFilterInit() {
    },
    BluetoothLEScanFilterInit: function BluetoothLEScanFilterInit() {
    },
    RequestDeviceOptions: function RequestDeviceOptions() {
    },
    Bluetooth: function Bluetooth() {
    },
    BluetoothPermissionDescriptor: function BluetoothPermissionDescriptor() {
    },
    AllowedBluetoothDevice: function AllowedBluetoothDevice() {
    },
    BluetoothPermissionStorage: function BluetoothPermissionStorage() {
    },
    BluetoothPermissionResult: function BluetoothPermissionResult() {
    },
    ValueEvent: function ValueEvent() {
    },
    ValueEventInit: function ValueEventInit() {
    },
    BluetoothDevice: function BluetoothDevice() {
    },
    WatchAdvertisementsOptions: function WatchAdvertisementsOptions() {
    },
    BluetoothManufacturerDataMap: function BluetoothManufacturerDataMap() {
    },
    BluetoothServiceDataMap: function BluetoothServiceDataMap() {
    },
    BluetoothAdvertisingEvent: function BluetoothAdvertisingEvent() {
    },
    BluetoothAdvertisingEventInit: function BluetoothAdvertisingEventInit() {
    },
    BluetoothRemoteGATTServer: function BluetoothRemoteGATTServer() {
    },
    BluetoothRemoteGATTService: function BluetoothRemoteGATTService() {
    },
    BluetoothRemoteGATTCharacteristic: function BluetoothRemoteGATTCharacteristic() {
    },
    BluetoothCharacteristicProperties: function BluetoothCharacteristicProperties() {
    },
    BluetoothRemoteGATTDescriptor: function BluetoothRemoteGATTDescriptor() {
    },
    CharacteristicEventHandlers: function CharacteristicEventHandlers() {
    },
    BluetoothDeviceEventHandlers: function BluetoothDeviceEventHandlers() {
    },
    ServiceEventHandlers: function ServiceEventHandlers() {
    },
    BluetoothUUID: function BluetoothUUID() {
    },
    NavigatorLocks: function NavigatorLocks() {
    },
    LockManager: function LockManager() {
    },
    LockOptions: function LockOptions() {
    },
    LockManagerSnapshot: function LockManagerSnapshot() {
    },
    LockInfo: function LockInfo() {
    },
    Lock: function Lock() {
    },
    NDEFMessage: function NDEFMessage() {
    },
    NDEFMessageInit: function NDEFMessageInit() {
    },
    NDEFRecord: function NDEFRecord() {
    },
    NDEFRecordInit: function NDEFRecordInit() {
    },
    NDEFReader: function NDEFReader() {
    },
    NDEFReadingEvent: function NDEFReadingEvent() {
    },
    NDEFReadingEventInit: function NDEFReadingEventInit() {
    },
    NDEFWriteOptions: function NDEFWriteOptions() {
    },
    NDEFMakeReadOnlyOptions: function NDEFMakeReadOnlyOptions() {
    },
    NDEFScanOptions: function NDEFScanOptions() {
    },
    OTPCredential: function OTPCredential() {
    },
    OTPCredentialRequestOptions: function OTPCredentialRequestOptions() {
    },
    ShareData: function ShareData() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    AudioContext: function AudioContext() {
    },
    AudioContextOptions: function AudioContextOptions() {
    },
    AudioSinkOptions: function AudioSinkOptions() {
    },
    AudioSinkInfo: function AudioSinkInfo() {
    },
    AudioTimestamp: function AudioTimestamp() {
    },
    AudioRenderCapacity: function AudioRenderCapacity() {
    },
    AudioRenderCapacityOptions: function AudioRenderCapacityOptions() {
    },
    AudioRenderCapacityEvent: function AudioRenderCapacityEvent() {
    },
    AudioRenderCapacityEventInit: function AudioRenderCapacityEventInit() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    OfflineAudioContextOptions: function OfflineAudioContextOptions() {
    },
    OfflineAudioCompletionEvent: function OfflineAudioCompletionEvent() {
    },
    OfflineAudioCompletionEventInit: function OfflineAudioCompletionEventInit() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioBufferOptions: function AudioBufferOptions() {
    },
    AudioNode: function AudioNode() {
    },
    AudioNodeOptions: function AudioNodeOptions() {
    },
    AudioParam: function AudioParam() {
    },
    AudioScheduledSourceNode: function AudioScheduledSourceNode() {
    },
    AnalyserNode: function AnalyserNode() {
    },
    AnalyserOptions: function AnalyserOptions() {
    },
    AudioBufferSourceNode: function AudioBufferSourceNode() {
    },
    AudioBufferSourceOptions: function AudioBufferSourceOptions() {
    },
    AudioDestinationNode: function AudioDestinationNode() {
    },
    AudioListener: function AudioListener() {
    },
    AudioProcessingEvent: function AudioProcessingEvent() {
    },
    AudioProcessingEventInit: function AudioProcessingEventInit() {
    },
    BiquadFilterNode: function BiquadFilterNode() {
    },
    BiquadFilterOptions: function BiquadFilterOptions() {
    },
    ChannelMergerNode: function ChannelMergerNode() {
    },
    ChannelMergerOptions: function ChannelMergerOptions() {
    },
    ChannelSplitterNode: function ChannelSplitterNode() {
    },
    ChannelSplitterOptions: function ChannelSplitterOptions() {
    },
    ConstantSourceNode: function ConstantSourceNode() {
    },
    ConstantSourceOptions: function ConstantSourceOptions() {
    },
    ConvolverNode: function ConvolverNode() {
    },
    ConvolverOptions: function ConvolverOptions() {
    },
    DelayNode: function DelayNode() {
    },
    DelayOptions: function DelayOptions() {
    },
    DynamicsCompressorNode: function DynamicsCompressorNode() {
    },
    DynamicsCompressorOptions: function DynamicsCompressorOptions() {
    },
    GainNode: function GainNode() {
    },
    GainOptions: function GainOptions() {
    },
    IIRFilterNode: function IIRFilterNode() {
    },
    IIRFilterOptions: function IIRFilterOptions() {
    },
    MediaElementAudioSourceNode: function MediaElementAudioSourceNode() {
    },
    MediaElementAudioSourceOptions: function MediaElementAudioSourceOptions() {
    },
    MediaStreamAudioDestinationNode: function MediaStreamAudioDestinationNode() {
    },
    MediaStreamAudioSourceNode: function MediaStreamAudioSourceNode() {
    },
    MediaStreamAudioSourceOptions: function MediaStreamAudioSourceOptions() {
    },
    MediaStreamTrackAudioSourceNode: function MediaStreamTrackAudioSourceNode() {
    },
    MediaStreamTrackAudioSourceOptions: function MediaStreamTrackAudioSourceOptions() {
    },
    OscillatorNode: function OscillatorNode() {
    },
    OscillatorOptions: function OscillatorOptions() {
    },
    PannerNode: function PannerNode() {
    },
    PannerOptions: function PannerOptions() {
    },
    PeriodicWave: function PeriodicWave() {
    },
    PeriodicWaveConstraints: function PeriodicWaveConstraints() {
    },
    PeriodicWaveOptions: function PeriodicWaveOptions() {
    },
    ScriptProcessorNode: function ScriptProcessorNode() {
    },
    StereoPannerNode: function StereoPannerNode() {
    },
    StereoPannerOptions: function StereoPannerOptions() {
    },
    WaveShaperNode: function WaveShaperNode() {
    },
    WaveShaperOptions: function WaveShaperOptions() {
    },
    AudioWorklet: function AudioWorklet() {
    },
    AudioWorkletGlobalScope: function AudioWorkletGlobalScope() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioWorkletNode: function AudioWorkletNode() {
    },
    AudioWorkletNodeOptions: function AudioWorkletNodeOptions() {
    },
    AudioWorkletProcessor: function AudioWorkletProcessor() {
    },
    AudioParamDescriptor: function AudioParamDescriptor() {
    },
    PublicKeyCredential: function PublicKeyCredential() {
    },
    RegistrationResponseJSON: function RegistrationResponseJSON() {
    },
    AuthenticatorAttestationResponseJSON: function AuthenticatorAttestationResponseJSON() {
    },
    AuthenticationResponseJSON: function AuthenticationResponseJSON() {
    },
    AuthenticatorAssertionResponseJSON: function AuthenticatorAssertionResponseJSON() {
    },
    AuthenticationExtensionsClientOutputsJSON: function AuthenticationExtensionsClientOutputsJSON() {
    },
    PublicKeyCredentialCreationOptionsJSON: function PublicKeyCredentialCreationOptionsJSON() {
    },
    PublicKeyCredentialUserEntityJSON: function PublicKeyCredentialUserEntityJSON() {
    },
    PublicKeyCredentialDescriptorJSON: function PublicKeyCredentialDescriptorJSON() {
    },
    AuthenticationExtensionsClientInputsJSON: function AuthenticationExtensionsClientInputsJSON() {
    },
    PublicKeyCredentialRequestOptionsJSON: function PublicKeyCredentialRequestOptionsJSON() {
    },
    AuthenticatorResponse: function AuthenticatorResponse() {
    },
    AuthenticatorAttestationResponse: function AuthenticatorAttestationResponse() {
    },
    AuthenticatorAssertionResponse: function AuthenticatorAssertionResponse() {
    },
    PublicKeyCredentialParameters: function PublicKeyCredentialParameters() {
    },
    PublicKeyCredentialCreationOptions: function PublicKeyCredentialCreationOptions() {
    },
    PublicKeyCredentialEntity: function PublicKeyCredentialEntity() {
    },
    PublicKeyCredentialRpEntity: function PublicKeyCredentialRpEntity() {
    },
    PublicKeyCredentialUserEntity: function PublicKeyCredentialUserEntity() {
    },
    AuthenticatorSelectionCriteria: function AuthenticatorSelectionCriteria() {
    },
    PublicKeyCredentialRequestOptions: function PublicKeyCredentialRequestOptions() {
    },
    AuthenticationExtensionsClientInputs: function AuthenticationExtensionsClientInputs() {
    },
    AuthenticationExtensionsClientOutputs: function AuthenticationExtensionsClientOutputs() {
    },
    CollectedClientData: function CollectedClientData() {
    },
    TokenBinding: function TokenBinding() {
    },
    PublicKeyCredentialDescriptor: function PublicKeyCredentialDescriptor() {
    },
    CredentialPropertiesOutput: function CredentialPropertiesOutput() {
    },
    AuthenticationExtensionsPRFValues: function AuthenticationExtensionsPRFValues() {
    },
    AuthenticationExtensionsPRFInputs: function AuthenticationExtensionsPRFInputs() {
    },
    AuthenticationExtensionsPRFOutputs: function AuthenticationExtensionsPRFOutputs() {
    },
    AuthenticationExtensionsLargeBlobInputs: function AuthenticationExtensionsLargeBlobInputs() {
    },
    AuthenticationExtensionsLargeBlobOutputs: function AuthenticationExtensionsLargeBlobOutputs() {
    },
    AuthenticationExtensionsDevicePublicKeyInputs: function AuthenticationExtensionsDevicePublicKeyInputs() {
    },
    AuthenticationExtensionsDevicePublicKeyOutputs: function AuthenticationExtensionsDevicePublicKeyOutputs() {
    },
    AudioDecoder: function AudioDecoder() {
    },
    AudioDecoderInit: function AudioDecoderInit() {
    },
    VideoDecoder: function VideoDecoder() {
    },
    VideoDecoderInit: function VideoDecoderInit() {
    },
    AudioEncoder: function AudioEncoder() {
    },
    AudioEncoderInit: function AudioEncoderInit() {
    },
    EncodedAudioChunkMetadata: function EncodedAudioChunkMetadata() {
    },
    VideoEncoder: function VideoEncoder() {
    },
    VideoEncoderInit: function VideoEncoderInit() {
    },
    EncodedVideoChunkMetadata: function EncodedVideoChunkMetadata() {
    },
    SvcOutputMetadata: function SvcOutputMetadata() {
    },
    AudioDecoderSupport: function AudioDecoderSupport() {
    },
    VideoDecoderSupport: function VideoDecoderSupport() {
    },
    AudioEncoderSupport: function AudioEncoderSupport() {
    },
    VideoEncoderSupport: function VideoEncoderSupport() {
    },
    AudioDecoderConfig: function AudioDecoderConfig() {
    },
    VideoDecoderConfig: function VideoDecoderConfig() {
    },
    AudioEncoderConfig: function AudioEncoderConfig() {
    },
    VideoEncoderConfig: function VideoEncoderConfig() {
    },
    VideoEncoderEncodeOptions: function VideoEncoderEncodeOptions() {
    },
    EncodedAudioChunk: function EncodedAudioChunk() {
    },
    EncodedAudioChunkInit: function EncodedAudioChunkInit() {
    },
    EncodedVideoChunk: function EncodedVideoChunk() {
    },
    EncodedVideoChunkInit: function EncodedVideoChunkInit() {
    },
    AudioData: function AudioData() {
    },
    AudioDataInit: function AudioDataInit() {
    },
    AudioDataCopyToOptions: function AudioDataCopyToOptions() {
    },
    VideoFrame: function VideoFrame() {
    },
    VideoFrameInit: function VideoFrameInit() {
    },
    VideoFrameBufferInit: function VideoFrameBufferInit() {
    },
    VideoFrameMetadata: function VideoFrameMetadata() {
    },
    VideoFrameCopyToOptions: function VideoFrameCopyToOptions() {
    },
    PlaneLayout: function PlaneLayout() {
    },
    VideoColorSpace: function VideoColorSpace() {
    },
    VideoColorSpaceInit: function VideoColorSpaceInit() {
    },
    ImageDecoder: function ImageDecoder() {
    },
    ImageDecoderInit: function ImageDecoderInit() {
    },
    ImageDecodeOptions: function ImageDecodeOptions() {
    },
    ImageDecodeResult: function ImageDecodeResult() {
    },
    ImageTrackList: function ImageTrackList() {
    },
    ImageTrack: function ImageTrack() {
    },
    AacEncoderConfig: function AacEncoderConfig() {
    },
    AvcEncoderConfig: function AvcEncoderConfig() {
    },
    FlacEncoderConfig: function FlacEncoderConfig() {
    },
    HevcEncoderConfig: function HevcEncoderConfig() {
    },
    OpusEncoderConfig: function OpusEncoderConfig() {
    },
    Ed448Params: function Ed448Params() {
    },
    Crypto: function Crypto() {
    },
    Algorithm: function Algorithm() {
    },
    KeyAlgorithm: function KeyAlgorithm() {
    },
    CryptoKey: function CryptoKey() {
    },
    SubtleCrypto: function SubtleCrypto() {
    },
    RsaOtherPrimesInfo: function RsaOtherPrimesInfo() {
    },
    JsonWebKey: function JsonWebKey() {
    },
    CryptoKeyPair: function CryptoKeyPair() {
    },
    RsaKeyGenParams: function RsaKeyGenParams() {
    },
    RsaHashedKeyGenParams: function RsaHashedKeyGenParams() {
    },
    RsaKeyAlgorithm: function RsaKeyAlgorithm() {
    },
    RsaHashedKeyAlgorithm: function RsaHashedKeyAlgorithm() {
    },
    RsaHashedImportParams: function RsaHashedImportParams() {
    },
    RsaPssParams: function RsaPssParams() {
    },
    RsaOaepParams: function RsaOaepParams() {
    },
    EcdsaParams: function EcdsaParams() {
    },
    EcKeyGenParams: function EcKeyGenParams() {
    },
    EcKeyAlgorithm: function EcKeyAlgorithm() {
    },
    EcKeyImportParams: function EcKeyImportParams() {
    },
    EcdhKeyDeriveParams: function EcdhKeyDeriveParams() {
    },
    AesCtrParams: function AesCtrParams() {
    },
    AesKeyAlgorithm: function AesKeyAlgorithm() {
    },
    AesKeyGenParams: function AesKeyGenParams() {
    },
    AesDerivedKeyParams: function AesDerivedKeyParams() {
    },
    AesCbcParams: function AesCbcParams() {
    },
    AesGcmParams: function AesGcmParams() {
    },
    HmacImportParams: function HmacImportParams() {
    },
    HmacKeyAlgorithm: function HmacKeyAlgorithm() {
    },
    HmacKeyGenParams: function HmacKeyGenParams() {
    },
    HkdfParams: function HkdfParams() {
    },
    Pbkdf2Params: function Pbkdf2Params() {
    },
    NavigatorAutomationInformation: function NavigatorAutomationInformation() {
    },
    WebGLContextAttributes: function WebGLContextAttributes() {
    },
    WebGLObject: function WebGLObject() {
    },
    WebGLBuffer: function WebGLBuffer() {
    },
    WebGLFramebuffer: function WebGLFramebuffer() {
    },
    WebGLProgram: function WebGLProgram() {
    },
    WebGLRenderbuffer: function WebGLRenderbuffer() {
    },
    WebGLShader: function WebGLShader() {
    },
    WebGLTexture: function WebGLTexture() {
    },
    WebGLUniformLocation: function WebGLUniformLocation() {
    },
    WebGLActiveInfo: function WebGLActiveInfo() {
    },
    WebGLShaderPrecisionFormat: function WebGLShaderPrecisionFormat() {
    },
    WebGLRenderingContextBase: function WebGLRenderingContextBase() {
    },
    WebGLRenderingContextOverloads: function WebGLRenderingContextOverloads() {
    },
    WebGLRenderingContext: function WebGLRenderingContext() {
    },
    WebGLContextEvent: function WebGLContextEvent() {
    },
    WebGLContextEventInit: function WebGLContextEventInit() {
    },
    WebGLQuery: function WebGLQuery() {
    },
    WebGLSampler: function WebGLSampler() {
    },
    WebGLSync: function WebGLSync() {
    },
    WebGLTransformFeedback: function WebGLTransformFeedback() {
    },
    WebGLVertexArrayObject: function WebGLVertexArrayObject() {
    },
    WebGL2RenderingContextBase: function WebGL2RenderingContextBase() {
    },
    WebGL2RenderingContextOverloads: function WebGL2RenderingContextOverloads() {
    },
    WebGL2RenderingContext: function WebGL2RenderingContext() {
    },
    WEBGLBlendEquationAdvancedCoherent: function WEBGLBlendEquationAdvancedCoherent() {
    },
    WEBGLColorBufferFloat: function WEBGLColorBufferFloat() {
    },
    WEBGLCompressedTextureAstc: function WEBGLCompressedTextureAstc() {
    },
    WEBGLCompressedTextureEtc: function WEBGLCompressedTextureEtc() {
    },
    WEBGLCompressedTextureEtc1: function WEBGLCompressedTextureEtc1() {
    },
    WEBGLCompressedTexturePvrtc: function WEBGLCompressedTexturePvrtc() {
    },
    WEBGLCompressedTextureS3tc: function WEBGLCompressedTextureS3tc() {
    },
    WEBGLCompressedTextureS3tcSrgb: function WEBGLCompressedTextureS3tcSrgb() {
    },
    WEBGLDebugRendererInfo: function WEBGLDebugRendererInfo() {
    },
    WEBGLDebugShaders: function WEBGLDebugShaders() {
    },
    WEBGLDepthTexture: function WEBGLDepthTexture() {
    },
    WEBGLDrawBuffers: function WEBGLDrawBuffers() {
    },
    WEBGLDrawInstancedBaseVertexBaseInstance: function WEBGLDrawInstancedBaseVertexBaseInstance() {
    },
    WEBGLLoseContext: function WEBGLLoseContext() {
    },
    WEBGLMultiDraw: function WEBGLMultiDraw() {
    },
    WEBGLMultiDrawInstancedBaseVertexBaseInstance: function WEBGLMultiDrawInstancedBaseVertexBaseInstance() {
    },
    GPUObjectBase: function GPUObjectBase() {
    },
    GPUObjectDescriptorBase: function GPUObjectDescriptorBase() {
    },
    GPUSupportedLimits: function GPUSupportedLimits() {
    },
    GPUSupportedFeatures: function GPUSupportedFeatures() {
    },
    GPUAdapterInfo: function GPUAdapterInfo() {
    },
    NavigatorGPU: function NavigatorGPU() {
    },
    Gpu: function Gpu() {
    },
    GPURequestAdapterOptions: function GPURequestAdapterOptions() {
    },
    GPUAdapter: function GPUAdapter() {
    },
    GPUDeviceDescriptor: function GPUDeviceDescriptor() {
    },
    GPUDevice: function GPUDevice() {
    },
    GPUBuffer: function GPUBuffer() {
    },
    GPUBufferDescriptor: function GPUBufferDescriptor() {
    },
    GPUBufferUsage: function GPUBufferUsage() {
    },
    GPUMapMode: function GPUMapMode() {
    },
    GPUTexture: function GPUTexture() {
    },
    GPUTextureDescriptor: function GPUTextureDescriptor() {
    },
    GPUTextureUsage: function GPUTextureUsage() {
    },
    GPUTextureView: function GPUTextureView() {
    },
    GPUTextureViewDescriptor: function GPUTextureViewDescriptor() {
    },
    GPUExternalTexture: function GPUExternalTexture() {
    },
    GPUExternalTextureDescriptor: function GPUExternalTextureDescriptor() {
    },
    GPUSampler: function GPUSampler() {
    },
    GPUSamplerDescriptor: function GPUSamplerDescriptor() {
    },
    GPUBindGroupLayout: function GPUBindGroupLayout() {
    },
    GPUBindGroupLayoutDescriptor: function GPUBindGroupLayoutDescriptor() {
    },
    GPUBindGroupLayoutEntry: function GPUBindGroupLayoutEntry() {
    },
    GPUShaderStage: function GPUShaderStage() {
    },
    GPUBufferBindingLayout: function GPUBufferBindingLayout() {
    },
    GPUSamplerBindingLayout: function GPUSamplerBindingLayout() {
    },
    GPUTextureBindingLayout: function GPUTextureBindingLayout() {
    },
    GPUStorageTextureBindingLayout: function GPUStorageTextureBindingLayout() {
    },
    GPUExternalTextureBindingLayout: function GPUExternalTextureBindingLayout() {
    },
    GPUBindGroup: function GPUBindGroup() {
    },
    GPUBindGroupDescriptor: function GPUBindGroupDescriptor() {
    },
    GPUBindGroupEntry: function GPUBindGroupEntry() {
    },
    GPUBufferBinding: function GPUBufferBinding() {
    },
    GPUPipelineLayout: function GPUPipelineLayout() {
    },
    GPUPipelineLayoutDescriptor: function GPUPipelineLayoutDescriptor() {
    },
    GPUShaderModule: function GPUShaderModule() {
    },
    GPUShaderModuleDescriptor: function GPUShaderModuleDescriptor() {
    },
    GPUShaderModuleCompilationHint: function GPUShaderModuleCompilationHint() {
    },
    GPUCompilationMessage: function GPUCompilationMessage() {
    },
    GPUCompilationInfo: function GPUCompilationInfo() {
    },
    GPUPipelineError: function GPUPipelineError() {
    },
    GPUPipelineErrorInit: function GPUPipelineErrorInit() {
    },
    GPUPipelineDescriptorBase: function GPUPipelineDescriptorBase() {
    },
    GPUPipelineBase: function GPUPipelineBase() {
    },
    GPUProgrammableStage: function GPUProgrammableStage() {
    },
    GPUComputePipeline: function GPUComputePipeline() {
    },
    GPUComputePipelineDescriptor: function GPUComputePipelineDescriptor() {
    },
    GPURenderPipeline: function GPURenderPipeline() {
    },
    GPURenderPipelineDescriptor: function GPURenderPipelineDescriptor() {
    },
    GPUPrimitiveState: function GPUPrimitiveState() {
    },
    GPUMultisampleState: function GPUMultisampleState() {
    },
    GPUFragmentState: function GPUFragmentState() {
    },
    GPUColorTargetState: function GPUColorTargetState() {
    },
    GPUBlendState: function GPUBlendState() {
    },
    GPUColorWrite: function GPUColorWrite() {
    },
    GPUBlendComponent: function GPUBlendComponent() {
    },
    GPUDepthStencilState: function GPUDepthStencilState() {
    },
    GPUStencilFaceState: function GPUStencilFaceState() {
    },
    GPUVertexState: function GPUVertexState() {
    },
    GPUVertexBufferLayout: function GPUVertexBufferLayout() {
    },
    GPUVertexAttribute: function GPUVertexAttribute() {
    },
    GPUImageDataLayout: function GPUImageDataLayout() {
    },
    GPUImageCopyBuffer: function GPUImageCopyBuffer() {
    },
    GPUImageCopyTexture: function GPUImageCopyTexture() {
    },
    GPUImageCopyTextureTagged: function GPUImageCopyTextureTagged() {
    },
    GPUImageCopyExternalImage: function GPUImageCopyExternalImage() {
    },
    GPUCommandBuffer: function GPUCommandBuffer() {
    },
    GPUCommandBufferDescriptor: function GPUCommandBufferDescriptor() {
    },
    GPUCommandsMixin: function GPUCommandsMixin() {
    },
    GPUCommandEncoder: function GPUCommandEncoder() {
    },
    GPUCommandEncoderDescriptor: function GPUCommandEncoderDescriptor() {
    },
    GPUBindingCommandsMixin: function GPUBindingCommandsMixin() {
    },
    GPUDebugCommandsMixin: function GPUDebugCommandsMixin() {
    },
    GPUComputePassEncoder: function GPUComputePassEncoder() {
    },
    GPUComputePassTimestampWrite: function GPUComputePassTimestampWrite() {
    },
    GPUComputePassDescriptor: function GPUComputePassDescriptor() {
    },
    GPURenderPassEncoder: function GPURenderPassEncoder() {
    },
    GPURenderPassTimestampWrite: function GPURenderPassTimestampWrite() {
    },
    GPURenderPassDescriptor: function GPURenderPassDescriptor() {
    },
    GPURenderPassColorAttachment: function GPURenderPassColorAttachment() {
    },
    GPURenderPassDepthStencilAttachment: function GPURenderPassDepthStencilAttachment() {
    },
    GPURenderPassLayout: function GPURenderPassLayout() {
    },
    GPURenderCommandsMixin: function GPURenderCommandsMixin() {
    },
    GPURenderBundle: function GPURenderBundle() {
    },
    GPURenderBundleDescriptor: function GPURenderBundleDescriptor() {
    },
    GPURenderBundleEncoder: function GPURenderBundleEncoder() {
    },
    GPURenderBundleEncoderDescriptor: function GPURenderBundleEncoderDescriptor() {
    },
    GPUQueueDescriptor: function GPUQueueDescriptor() {
    },
    GPUQueue: function GPUQueue() {
    },
    GPUQuerySet: function GPUQuerySet() {
    },
    GPUQuerySetDescriptor: function GPUQuerySetDescriptor() {
    },
    GPUCanvasContext: function GPUCanvasContext() {
    },
    GPUCanvasConfiguration: function GPUCanvasConfiguration() {
    },
    GPUDeviceLostInfo: function GPUDeviceLostInfo() {
    },
    GPUError: function GPUError() {
    },
    GPUValidationError: function GPUValidationError() {
    },
    GPUOutOfMemoryError: function GPUOutOfMemoryError() {
    },
    GPUInternalError: function GPUInternalError() {
    },
    GPUUncapturedErrorEvent: function GPUUncapturedErrorEvent() {
    },
    GPUUncapturedErrorEventInit: function GPUUncapturedErrorEventInit() {
    },
    GPUColorDict: function GPUColorDict() {
    },
    GPUOrigin2DDict: function GPUOrigin2DDict() {
    },
    GPUOrigin3DDict: function GPUOrigin3DDict() {
    },
    GPUExtent3DDict: function GPUExtent3DDict() {
    },
    Hid: function Hid() {
    },
    HIDDeviceRequestOptions: function HIDDeviceRequestOptions() {
    },
    HIDDeviceFilter: function HIDDeviceFilter() {
    },
    HIDDevice: function HIDDevice() {
    },
    HIDConnectionEvent: function HIDConnectionEvent() {
    },
    HIDConnectionEventInit: function HIDConnectionEventInit() {
    },
    HIDInputReportEvent: function HIDInputReportEvent() {
    },
    HIDInputReportEventInit: function HIDInputReportEventInit() {
    },
    HIDCollectionInfo: function HIDCollectionInfo() {
    },
    HIDReportInfo: function HIDReportInfo() {
    },
    HIDReportItem: function HIDReportItem() {
    },
    DOMException: function DOMException() {
    },
    MidiPermissionDescriptor: function MidiPermissionDescriptor() {
    },
    MIDIOptions: function MIDIOptions() {
    },
    MIDIInputMap: function MIDIInputMap() {
    },
    MIDIOutputMap: function MIDIOutputMap() {
    },
    MIDIAccess: function MIDIAccess() {
    },
    MIDIPort: function MIDIPort() {
    },
    MIDIInput: function MIDIInput() {
    },
    MIDIOutput: function MIDIOutput() {
    },
    MIDIMessageEvent: function MIDIMessageEvent() {
    },
    MIDIMessageEventInit: function MIDIMessageEventInit() {
    },
    MIDIConnectionEvent: function MIDIConnectionEvent() {
    },
    MIDIConnectionEventInit: function MIDIConnectionEventInit() {
    },
    NavigatorML: function NavigatorML() {
    },
    MLContextOptions: function MLContextOptions() {
    },
    Ml: function Ml() {
    },
    MLContext: function MLContext() {
    },
    MLComputeResult: function MLComputeResult() {
    },
    MLOperandDescriptor: function MLOperandDescriptor() {
    },
    MLOperand: function MLOperand() {
    },
    MLActivation: function MLActivation() {
    },
    MLBufferResourceView: function MLBufferResourceView() {
    },
    MLGraphBuilder: function MLGraphBuilder() {
    },
    MLBatchNormalizationOptions: function MLBatchNormalizationOptions() {
    },
    MLClampOptions: function MLClampOptions() {
    },
    MLConv2dOptions: function MLConv2dOptions() {
    },
    MLConvTranspose2dOptions: function MLConvTranspose2dOptions() {
    },
    MLEluOptions: function MLEluOptions() {
    },
    MLGemmOptions: function MLGemmOptions() {
    },
    MLGruOptions: function MLGruOptions() {
    },
    MLGruCellOptions: function MLGruCellOptions() {
    },
    MLHardSigmoidOptions: function MLHardSigmoidOptions() {
    },
    MLInstanceNormalizationOptions: function MLInstanceNormalizationOptions() {
    },
    MLLeakyReluOptions: function MLLeakyReluOptions() {
    },
    MLLinearOptions: function MLLinearOptions() {
    },
    MLLstmOptions: function MLLstmOptions() {
    },
    MLLstmCellOptions: function MLLstmCellOptions() {
    },
    MLPadOptions: function MLPadOptions() {
    },
    MLPool2dOptions: function MLPool2dOptions() {
    },
    MLReduceOptions: function MLReduceOptions() {
    },
    MLResample2dOptions: function MLResample2dOptions() {
    },
    MLSliceOptions: function MLSliceOptions() {
    },
    MLSoftplusOptions: function MLSoftplusOptions() {
    },
    MLSplitOptions: function MLSplitOptions() {
    },
    MLSqueezeOptions: function MLSqueezeOptions() {
    },
    MLTransposeOptions: function MLTransposeOptions() {
    },
    MLGraph: function MLGraph() {
    },
    MLCommandEncoder: function MLCommandEncoder() {
    },
    RTCConfiguration: function RTCConfiguration() {
    },
    RTCIceServer: function RTCIceServer() {
    },
    RTCOfferAnswerOptions: function RTCOfferAnswerOptions() {
    },
    RTCOfferOptions: function RTCOfferOptions() {
    },
    RTCAnswerOptions: function RTCAnswerOptions() {
    },
    RTCPeerConnection: function RTCPeerConnection() {
    },
    RTCSessionDescription: function RTCSessionDescription() {
    },
    RTCSessionDescriptionInit: function RTCSessionDescriptionInit() {
    },
    RTCLocalSessionDescriptionInit: function RTCLocalSessionDescriptionInit() {
    },
    RTCIceCandidate: function RTCIceCandidate() {
    },
    RTCIceCandidateInit: function RTCIceCandidateInit() {
    },
    RTCPeerConnectionIceEvent: function RTCPeerConnectionIceEvent() {
    },
    RTCPeerConnectionIceEventInit: function RTCPeerConnectionIceEventInit() {
    },
    RTCPeerConnectionIceErrorEvent: function RTCPeerConnectionIceErrorEvent() {
    },
    RTCPeerConnectionIceErrorEventInit: function RTCPeerConnectionIceErrorEventInit() {
    },
    RTCCertificateExpiration: function RTCCertificateExpiration() {
    },
    RTCCertificate: function RTCCertificate() {
    },
    RTCRtpTransceiverInit: function RTCRtpTransceiverInit() {
    },
    RTCRtpSender: function RTCRtpSender() {
    },
    RTCRtpParameters: function RTCRtpParameters() {
    },
    RTCRtpSendParameters: function RTCRtpSendParameters() {
    },
    RTCRtpReceiveParameters: function RTCRtpReceiveParameters() {
    },
    RTCRtpCodingParameters: function RTCRtpCodingParameters() {
    },
    RTCRtpEncodingParameters: function RTCRtpEncodingParameters() {
    },
    RTCRtcpParameters: function RTCRtcpParameters() {
    },
    RTCRtpHeaderExtensionParameters: function RTCRtpHeaderExtensionParameters() {
    },
    RTCRtpCodecParameters: function RTCRtpCodecParameters() {
    },
    RTCRtpCapabilities: function RTCRtpCapabilities() {
    },
    RTCRtpCodecCapability: function RTCRtpCodecCapability() {
    },
    RTCRtpHeaderExtensionCapability: function RTCRtpHeaderExtensionCapability() {
    },
    RTCRtpReceiver: function RTCRtpReceiver() {
    },
    RTCRtpContributingSource: function RTCRtpContributingSource() {
    },
    RTCRtpSynchronizationSource: function RTCRtpSynchronizationSource() {
    },
    RTCRtpTransceiver: function RTCRtpTransceiver() {
    },
    RTCDtlsTransport: function RTCDtlsTransport() {
    },
    RTCDtlsFingerprint: function RTCDtlsFingerprint() {
    },
    RTCIceTransport: function RTCIceTransport() {
    },
    RTCIceParameters: function RTCIceParameters() {
    },
    RTCIceCandidatePair: function RTCIceCandidatePair() {
    },
    RTCTrackEvent: function RTCTrackEvent() {
    },
    RTCTrackEventInit: function RTCTrackEventInit() {
    },
    RTCSctpTransport: function RTCSctpTransport() {
    },
    RTCDataChannel: function RTCDataChannel() {
    },
    RTCDataChannelInit: function RTCDataChannelInit() {
    },
    RTCDataChannelEvent: function RTCDataChannelEvent() {
    },
    RTCDataChannelEventInit: function RTCDataChannelEventInit() {
    },
    RTCDTMFSender: function RTCDTMFSender() {
    },
    RTCDTMFToneChangeEvent: function RTCDTMFToneChangeEvent() {
    },
    RTCDTMFToneChangeEventInit: function RTCDTMFToneChangeEventInit() {
    },
    RTCStatsReport: function RTCStatsReport() {
    },
    RTCStats: function RTCStats() {
    },
    RTCError: function RTCError() {
    },
    RTCErrorInit: function RTCErrorInit() {
    },
    RTCErrorEvent: function RTCErrorEvent() {
    },
    RTCErrorEventInit: function RTCErrorEventInit() {
    },
    SFrameTransformOptions: function SFrameTransformOptions() {
    },
    SFrameTransform: function SFrameTransform() {
    },
    SFrameTransformErrorEvent: function SFrameTransformErrorEvent() {
    },
    SFrameTransformErrorEventInit: function SFrameTransformErrorEventInit() {
    },
    RTCEncodedVideoFrameMetadata: function RTCEncodedVideoFrameMetadata() {
    },
    RTCEncodedVideoFrame: function RTCEncodedVideoFrame() {
    },
    RTCEncodedAudioFrameMetadata: function RTCEncodedAudioFrameMetadata() {
    },
    RTCEncodedAudioFrame: function RTCEncodedAudioFrame() {
    },
    RTCTransformEvent: function RTCTransformEvent() {
    },
    RTCRtpScriptTransformer: function RTCRtpScriptTransformer() {
    },
    RTCRtpScriptTransform: function RTCRtpScriptTransform() {
    },
    RTCIceGatherOptions: function RTCIceGatherOptions() {
    },
    RTCIdentityProviderGlobalScope: function RTCIdentityProviderGlobalScope() {
    },
    RTCIdentityProviderRegistrar: function RTCIdentityProviderRegistrar() {
    },
    RTCIdentityProvider: function RTCIdentityProvider() {
    },
    RTCIdentityAssertionResult: function RTCIdentityAssertionResult() {
    },
    RTCIdentityProviderDetails: function RTCIdentityProviderDetails() {
    },
    RTCIdentityValidationResult: function RTCIdentityValidationResult() {
    },
    RTCIdentityProviderOptions: function RTCIdentityProviderOptions() {
    },
    RTCIdentityAssertion: function RTCIdentityAssertion() {
    },
    RTCRtpStreamStats: function RTCRtpStreamStats() {
    },
    RTCCodecStats: function RTCCodecStats() {
    },
    RTCReceivedRtpStreamStats: function RTCReceivedRtpStreamStats() {
    },
    RTCInboundRtpStreamStats: function RTCInboundRtpStreamStats() {
    },
    RTCRemoteInboundRtpStreamStats: function RTCRemoteInboundRtpStreamStats() {
    },
    RTCSentRtpStreamStats: function RTCSentRtpStreamStats() {
    },
    RTCOutboundRtpStreamStats: function RTCOutboundRtpStreamStats() {
    },
    RTCRemoteOutboundRtpStreamStats: function RTCRemoteOutboundRtpStreamStats() {
    },
    RTCMediaSourceStats: function RTCMediaSourceStats() {
    },
    RTCAudioSourceStats: function RTCAudioSourceStats() {
    },
    RTCVideoSourceStats: function RTCVideoSourceStats() {
    },
    RTCAudioPlayoutStats: function RTCAudioPlayoutStats() {
    },
    RTCPeerConnectionStats: function RTCPeerConnectionStats() {
    },
    RTCDataChannelStats: function RTCDataChannelStats() {
    },
    RTCTransportStats: function RTCTransportStats() {
    },
    RTCIceCandidateStats: function RTCIceCandidateStats() {
    },
    RTCIceCandidatePairStats: function RTCIceCandidatePairStats() {
    },
    RTCCertificateStats: function RTCCertificateStats() {
    },
    WebSocket: function WebSocket() {
    },
    CloseEvent: function CloseEvent() {
    },
    CloseEventInit: function CloseEventInit() {
    },
    WebTransportDatagramDuplexStream: function WebTransportDatagramDuplexStream() {
    },
    WebTransport: function WebTransport() {
    },
    WebTransportHash: function WebTransportHash() {
    },
    WebTransportOptions: function WebTransportOptions() {
    },
    WebTransportCloseInfo: function WebTransportCloseInfo() {
    },
    WebTransportSendStreamOptions: function WebTransportSendStreamOptions() {
    },
    WebTransportStats: function WebTransportStats() {
    },
    WebTransportDatagramStats: function WebTransportDatagramStats() {
    },
    WebTransportSendStream: function WebTransportSendStream() {
    },
    WebTransportSendStreamStats: function WebTransportSendStreamStats() {
    },
    WebTransportReceiveStream: function WebTransportReceiveStream() {
    },
    WebTransportReceiveStreamStats: function WebTransportReceiveStreamStats() {
    },
    WebTransportBidirectionalStream: function WebTransportBidirectionalStream() {
    },
    WebTransportError: function WebTransportError() {
    },
    WebTransportErrorInit: function WebTransportErrorInit() {
    },
    USBDeviceFilter: function USBDeviceFilter() {
    },
    USBDeviceRequestOptions: function USBDeviceRequestOptions() {
    },
    Usb: function Usb() {
    },
    USBConnectionEventInit: function USBConnectionEventInit() {
    },
    USBConnectionEvent: function USBConnectionEvent() {
    },
    USBInTransferResult: function USBInTransferResult() {
    },
    USBOutTransferResult: function USBOutTransferResult() {
    },
    USBIsochronousInTransferPacket: function USBIsochronousInTransferPacket() {
    },
    USBIsochronousInTransferResult: function USBIsochronousInTransferResult() {
    },
    USBIsochronousOutTransferPacket: function USBIsochronousOutTransferPacket() {
    },
    USBIsochronousOutTransferResult: function USBIsochronousOutTransferResult() {
    },
    USBDevice: function USBDevice() {
    },
    USBControlTransferParameters: function USBControlTransferParameters() {
    },
    USBConfiguration: function USBConfiguration() {
    },
    USBInterface: function USBInterface() {
    },
    USBAlternateInterface: function USBAlternateInterface() {
    },
    USBEndpoint: function USBEndpoint() {
    },
    USBPermissionDescriptor: function USBPermissionDescriptor() {
    },
    AllowedUSBDevice: function AllowedUSBDevice() {
    },
    USBPermissionStorage: function USBPermissionStorage() {
    },
    USBPermissionResult: function USBPermissionResult() {
    },
    VTTCue: function VTTCue() {
    },
    VTTRegion: function VTTRegion() {
    },
    XRSystem: function XRSystem() {
    },
    XRSessionInit: function XRSessionInit() {
    },
    XRSession: function XRSession() {
    },
    XRRenderStateInit: function XRRenderStateInit() {
    },
    XRRenderState: function XRRenderState() {
    },
    XRFrame: function XRFrame() {
    },
    XRSpace: function XRSpace() {
    },
    XRReferenceSpace: function XRReferenceSpace() {
    },
    XRBoundedReferenceSpace: function XRBoundedReferenceSpace() {
    },
    XRView: function XRView() {
    },
    XRViewport: function XRViewport() {
    },
    XRRigidTransform: function XRRigidTransform() {
    },
    XRPose: function XRPose() {
    },
    XRViewerPose: function XRViewerPose() {
    },
    XRInputSource: function XRInputSource() {
    },
    XRInputSourceArray: function XRInputSourceArray() {
    },
    XRLayer: function XRLayer() {
    },
    XRWebGLLayerInit: function XRWebGLLayerInit() {
    },
    XRWebGLLayer: function XRWebGLLayer() {
    },
    XRSessionEvent: function XRSessionEvent() {
    },
    XRSessionEventInit: function XRSessionEventInit() {
    },
    XRInputSourceEvent: function XRInputSourceEvent() {
    },
    XRInputSourceEventInit: function XRInputSourceEventInit() {
    },
    XRInputSourcesChangeEvent: function XRInputSourcesChangeEvent() {
    },
    XRInputSourcesChangeEventInit: function XRInputSourcesChangeEventInit() {
    },
    XRReferenceSpaceEvent: function XRReferenceSpaceEvent() {
    },
    XRReferenceSpaceEventInit: function XRReferenceSpaceEventInit() {
    },
    XRSessionSupportedPermissionDescriptor: function XRSessionSupportedPermissionDescriptor() {
    },
    XRPermissionDescriptor: function XRPermissionDescriptor() {
    },
    XRPermissionStatus: function XRPermissionStatus() {
    },
    XRDepthStateInit: function XRDepthStateInit() {
    },
    XRDepthInformation: function XRDepthInformation() {
    },
    XRCPUDepthInformation: function XRCPUDepthInformation() {
    },
    XRWebGLDepthInformation: function XRWebGLDepthInformation() {
    },
    XRDOMOverlayInit: function XRDOMOverlayInit() {
    },
    XRDOMOverlayState: function XRDOMOverlayState() {
    },
    XRHand: function XRHand() {
    },
    XRJointSpace: function XRJointSpace() {
    },
    XRJointPose: function XRJointPose() {
    },
    XRHitTestOptionsInit: function XRHitTestOptionsInit() {
    },
    XRTransientInputHitTestOptionsInit: function XRTransientInputHitTestOptionsInit() {
    },
    XRHitTestSource: function XRHitTestSource() {
    },
    XRTransientInputHitTestSource: function XRTransientInputHitTestSource() {
    },
    XRHitTestResult: function XRHitTestResult() {
    },
    XRTransientInputHitTestResult: function XRTransientInputHitTestResult() {
    },
    XRRayDirectionInit: function XRRayDirectionInit() {
    },
    XRRay: function XRRay() {
    },
    XRLightProbe: function XRLightProbe() {
    },
    XRLightEstimate: function XRLightEstimate() {
    },
    XRLightProbeInit: function XRLightProbeInit() {
    },
    XRCompositionLayer: function XRCompositionLayer() {
    },
    XRProjectionLayer: function XRProjectionLayer() {
    },
    XRQuadLayer: function XRQuadLayer() {
    },
    XRCylinderLayer: function XRCylinderLayer() {
    },
    XREquirectLayer: function XREquirectLayer() {
    },
    XRCubeLayer: function XRCubeLayer() {
    },
    XRSubImage: function XRSubImage() {
    },
    XRWebGLSubImage: function XRWebGLSubImage() {
    },
    XRProjectionLayerInit: function XRProjectionLayerInit() {
    },
    XRLayerInit: function XRLayerInit() {
    },
    XRQuadLayerInit: function XRQuadLayerInit() {
    },
    XRCylinderLayerInit: function XRCylinderLayerInit() {
    },
    XREquirectLayerInit: function XREquirectLayerInit() {
    },
    XRCubeLayerInit: function XRCubeLayerInit() {
    },
    XRWebGLBinding: function XRWebGLBinding() {
    },
    XRMediaLayerInit: function XRMediaLayerInit() {
    },
    XRMediaQuadLayerInit: function XRMediaQuadLayerInit() {
    },
    XRMediaCylinderLayerInit: function XRMediaCylinderLayerInit() {
    },
    XRMediaEquirectLayerInit: function XRMediaEquirectLayerInit() {
    },
    XRMediaBinding: function XRMediaBinding() {
    },
    XRLayerEvent: function XRLayerEvent() {
    },
    XRLayerEventInit: function XRLayerEventInit() {
    },
    WindowControlsOverlay: function WindowControlsOverlay() {
    },
    WindowControlsOverlayGeometryChangeEvent: function WindowControlsOverlayGeometryChangeEvent() {
    },
    WindowControlsOverlayGeometryChangeEventInit: function WindowControlsOverlayGeometryChangeEventInit() {
    },
    ScreenDetails: function ScreenDetails() {
    },
    ScreenDetailed: function ScreenDetailed() {
    },
    XMLHttpRequestEventTarget: function XMLHttpRequestEventTarget() {
    },
    XMLHttpRequestUpload: function XMLHttpRequestUpload() {
    },
    XMLHttpRequest: function XMLHttpRequest() {
    },
    FormData: function FormData() {
    },
    ProgressEvent: function ProgressEvent() {
    },
    ProgressEventInit: function ProgressEventInit() {
    },
    JsArray: function JsArray() {
    },
    JSObject: function JSObject() {
    },
    JsMap: function JsMap() {
    },
    IteratorItem: function IteratorItem() {
    },
    JsIterator: function JsIterator() {
    },
    Number: function Number() {
    },
    Reflect: function Reflect() {
    },
    futureToPromise(future, $T) {
      return new self.Promise(A.allowInterop(new A.futureToPromise_closure(future, $T), $T._eval$1("~(~(0),Function)")), $T);
    },
    Promise: function Promise() {
    },
    futureToPromise_closure: function futureToPromise_closure(t0, t1) {
      this.future = t0;
      this.T = t1;
    },
    JavaScriptObject0: function JavaScriptObject0() {
    },
    Request: function Request(t0) {
      this._request$_delegate = t0;
    },
    Response: function Response(t0) {
      this._delegate = t0;
    },
    VercelEdge$(fetch) {
      var t1 = new A.VercelEdge(fetch);
      t1.VercelEdge$1$fetch(fetch);
      return t1;
    },
    VercelEdge: function VercelEdge(t0) {
      this.fetch = t0;
    },
    VercelEdge_closure: function VercelEdge_closure(t0) {
      this.$this = t0;
    },
    VercelEdge__closure: function VercelEdge__closure(t0, t1) {
      this.$this = t0;
      this.request = t1;
    },
    main() {
      A.VercelEdge$(new A.main_closure());
    },
    main_closure: function main_closure() {
    },
    throwLateFieldADI(fieldName) {
      return A.throwExpression(new A.LateError("Field '" + fieldName + "' has been assigned during initialization."));
    },
    _convertDartFunctionFast(f) {
      var ret,
        existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(A._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast(callback, $arguments) {
      type$.List_dynamic._as($arguments);
      type$.Function._as(callback);
      return A.Primitives_applyFunction(callback, $arguments, null);
    },
    allowInterop(f, $F) {
      if (typeof f == "function")
        return f;
      else
        return $F._as(A._convertDartFunctionFast(f));
    },
    convertBody(body) {
      return body;
    }
  },
  J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_markFixedList(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    noSuchMethod$1$(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    then$1$1$z(receiver, a0, $T1) {
      return J.getInterceptor$z(receiver).then$1$1(receiver, a0, $T1);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    noSuchMethod$1(receiver, invocation) {
      type$.Invocation._as(invocation);
      throw A.wrapException(new A.NoSuchMethodError(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    },
    $isPromise: 1
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JSArray.prototype = {
    add$1(receiver, value) {
      A._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    addAll$1(receiver, collection) {
      var t1;
      A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var len, i;
      type$.JSArray_dynamic._as(array);
      len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    map$1$1(receiver, f, $T) {
      var t1 = A._arrayInstanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    elementAt$1(receiver, index) {
      if (!(index < receiver.length))
        return A.ioore(receiver, index);
      return receiver[index];
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t1[t2]);
      ++_this._index;
      return true;
    },
    set$_current(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  J.JSNumber.prototype = {
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSNumNotInt.prototype = {};
  J.JSString.prototype = {
    $add(receiver, other) {
      return receiver + other;
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isString: 1
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), _this.$ti._eval$1("ListIterator<ListIterable.E>"));
    },
    map$1$1(_, toElement, $T) {
      var t1 = this.$ti;
      return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.set$__internal$_current(null);
        return false;
      }
      _this.set$__internal$_current(t2.elementAt$1(t1, t3));
      ++_this.__internal$_index;
      return true;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      var t1 = this.__internal$_iterable,
        t2 = A._instanceType(this);
      return new A.MappedIterator(t1.get$iterator(t1), this._f, t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      var t1 = this.__internal$_iterable;
      return t1.get$length(t1);
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
        return true;
      }
      _this.set$__internal$_current(null);
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    set$__internal$_current(_current) {
      this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.FixedLengthListMixin.prototype = {};
  A.Symbol.prototype = {
    get$hashCode(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * J.get$hashCode$(this._name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0(_) {
      return 'Symbol("' + A.S(this._name) + '")';
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Symbol && this._name == other._name;
    },
    $isSymbol0: 1
  };
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._jsObject[A._asString(key)];
    },
    forEach$1(_, f) {
      var keys, t2, t3, i, t4,
        t1 = this.$ti;
      t1._eval$1("~(1,2)")._as(f);
      keys = this._keys;
      for (t2 = keys.length, t3 = this._jsObject, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        t4 = A._asString(keys[i]);
        f.call$2(t4, t1._as(t3[t4]));
      }
    },
    get$keys(_) {
      return new A._ConstantMapKeyIterable(this, this.$ti._eval$1("_ConstantMapKeyIterable<1>"));
    }
  };
  A._ConstantMapKeyIterable.prototype = {
    get$iterator(_) {
      var t1 = this._map._keys;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$length(_) {
      return this._map._keys.length;
    }
  };
  A.JSInvocationMirror.prototype = {
    get$memberName() {
      var t1 = this._memberName;
      return t1;
    },
    get$positionalArguments() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return B.List_empty;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return B.List_empty;
      list = [];
      for (index = 0; index < argumentCount; ++index) {
        if (!(index < t1.length))
          return A.ioore(t1, index);
        list.push(t1[index]);
      }
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    get$namedArguments() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return B.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return B.Map_empty;
      map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i) {
        if (!(i < t1.length))
          return A.ioore(t1, i);
        t3 = t1[i];
        t4 = namedArgumentsStartIndex + i;
        if (!(t4 >= 0 && t4 < t2.length))
          return A.ioore(t2, t4);
        map.$indexSet(0, new A.Symbol(t3), t2[t4]);
      }
      return new A.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    },
    $isInvocation: 1
  };
  A.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2($name, argument) {
      var t1;
      A._asString($name);
      t1 = this._box_0;
      t1.names = t1.names + "$" + $name;
      B.JSArray_methods.add$1(this.namedArgumentList, $name);
      B.JSArray_methods.add$1(this.$arguments, argument);
      ++t1.argumentCount;
    },
    $signature: 4
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    }
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._Required.prototype = {};
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$keys(_) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = A._instanceType(_this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    forEach$1(_, action) {
      var cell, modifications, _this = this;
      A._instanceType(_this)._eval$1("~(1,2)")._as(action);
      cell = _this._first;
      modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell,
        t1 = A._instanceType(this);
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _newLinkedCell$2(key, value) {
      var _this = this,
        t1 = A._instanceType(_this),
        cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
      if (_this._first == null)
        _this._first = _this._last = cell;
      else
        _this._last = _this._last._next = cell;
      ++_this.__js_helper$_length;
      _this._modifications = _this._modifications + 1 & 1073741823;
      return cell;
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 0x3fffffff;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.set$__js_helper$_current(null);
        return false;
      } else {
        _this.set$__js_helper$_current(cell.hashMapCellKey);
        _this._cell = cell._next;
        return true;
      }
    },
    set$__js_helper$_current(_current) {
      this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 5
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 6
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(A._asString(tag));
    },
    $signature: 7
  };
  A.NativeTypedData.prototype = {};
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
  A.NativeInt16List.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt32List.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeInt8List.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint16List.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint32List.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8ClampedList.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A.NativeUint8List.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 2
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = type$.void_Function._as(callback);
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 8
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 3
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 3
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    }
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {};
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 9
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, type$.StackTrace._as(stackTrace)));
    },
    $signature: 10
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(A._asInt(errorCode), result);
    },
    $signature: 11
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A.Future_Future_closure.prototype = {
    call$0() {
      var e, s, t1, t2, t3, listeners, exception, stackTrace;
      try {
        t1 = this.result;
        t2 = t1.$ti;
        t3 = t2._eval$1("1/")._as(this.computation.call$0());
        if (t2._eval$1("Future<1>")._is(t3))
          if (t2._is(t3))
            A._Future__chainCoreFuture(t3, t1);
          else
            t1._chainForeignFuture$1(t3);
        else {
          listeners = t1._removeListeners$0();
          t2._precomputed1._as(t3);
          t1._state = 8;
          t1._resultOrListeners = t3;
          A._Future__propagateToListeners(t1, listeners);
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = e;
        stackTrace = s;
        if (stackTrace == null)
          stackTrace = A.AsyncError_defaultStackTrace(t1);
        this.result._completeError$2(t1, stackTrace);
      }
    },
    $signature: 0
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2$2(type$.bool_Function_Object._as(this.callback), asyncError.error, type$.bool, type$.Object);
    },
    handleError$1(asyncError) {
      var exception, _this = this,
        errorCallback = _this.errorCallback,
        result = null,
        t1 = type$.dynamic,
        t2 = type$.Object,
        t3 = asyncError.error,
        t4 = _this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t4.runBinary$3$3(errorCallback, t3, asyncError.stackTrace, t1, t2, type$.StackTrace);
      else
        result = t4.runUnary$2$2(type$.dynamic_Function_Object._as(errorCallback), t3, t1, t2);
      try {
        t1 = _this.$ti._eval$1("2/")._as(result);
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((_this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    then$1$2$onError(_, f, onError, $R) {
      var currentZone, result, t2,
        t1 = this.$ti;
      t1._bind$1($R)._eval$1("1/(2)")._as(f);
      currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else {
        $R._eval$1("@<0/>")._bind$1(t1._precomputed1)._eval$1("1(2)")._as(f);
        if (onError != null)
          onError = A._registerErrorHandler(onError, currentZone);
      }
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t2 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t2, f, onError, t1._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1($receiver, f, $R) {
      return this.then$1$2$onError($receiver, f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result,
        t1 = this.$ti;
      t1._bind$1($E)._eval$1("1/(2)")._as(f);
      result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 3, f, onError, t1._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var source, _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(source);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__addListener_closure(_this, listener)));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, source, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = type$.nullable__FutureListener_dynamic_dynamic._as(_this._resultOrListeners);
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          source = type$._Future_dynamic._as(_this._resultOrListeners);
          if ((source._state & 24) === 0) {
            source._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(source);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__prependListeners_closure(_box_0, _this)));
      }
    },
    _removeListeners$0() {
      var current = type$.nullable__FutureListener_dynamic_dynamic._as(this._resultOrListeners);
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(0, new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _completeWithValue$1(value) {
      var listeners, _this = this;
      _this.$ti._precomputed1._as(value);
      listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners;
      type$.StackTrace._as(stackTrace);
      listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      var t1 = this.$ti;
      t1._eval$1("1/")._as(value);
      if (t1._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(t1._precomputed1._as(value));
    },
    _asyncCompleteWithValue$1(value) {
      var _this = this;
      _this.$ti._precomputed1._as(value);
      _this._state ^= 2;
      A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__asyncCompleteWithValue_closure(_this, value)));
    },
    _chainFuture$1(value) {
      var _this = this,
        t1 = _this.$ti;
      t1._eval$1("Future<1>")._as(value);
      if (t1._is(value)) {
        if ((value._state & 16) !== 0) {
          _this._state ^= 2;
          A._rootScheduleMicrotask(null, null, _this._zone, type$.void_Function._as(new A._Future__chainFuture_closure(_this, value)));
        } else
          A._Future__chainCoreFuture(value, _this);
        return;
      }
      _this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, type$.void_Function._as(new A._Future__asyncCompleteError_closure(this, error, stackTrace)));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 2
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(type$.Object._as(error), type$.StackTrace._as(stackTrace));
    },
    $signature: 12
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__chainFuture_closure.prototype = {
    call$0() {
      A._Future__chainCoreFuture(this.value, this.$this);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1$1(type$.dynamic_Function._as(t1.callback), type$.dynamic);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && type$.AsyncError._as(_this._box_1.source._resultOrListeners).error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = type$.AsyncError._as(completeResult._resultOrListeners);
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = J.then$1$1$z(completeResult, new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 13
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, t3, t4, t5, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t3 = t2.$ti;
        t4 = t3._precomputed1;
        t5 = t4._as(this.sourceResult);
        t1.listenerValueOrError = t2.result._zone.runUnary$2$2(t3._eval$1("2/(1)")._as(t2.callback), t5, t3._eval$1("2/"), t4);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = type$.AsyncError._as(_this._box_1.source._resultOrListeners);
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {$isZone: 1};
  A._rootHandleError_closure.prototype = {
    call$0() {
      var t1 = this.error,
        t2 = this.stackTrace;
      A.checkNotNullable(t1, "error", type$.Object);
      A.checkNotNullable(t2, "stackTrace", type$.StackTrace);
      A.Error__throw(t1, t2);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      type$.void_Function._as(f);
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f, type$.void);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(type$.Object._as(e), type$.StackTrace._as(s));
      }
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, type$.void_Function._as(f));
    },
    run$1$1(f, $R) {
      $R._eval$1("0()")._as(f);
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f, $R);
    },
    runUnary$2$2(f, arg, $R, $T) {
      $R._eval$1("@<0>")._bind$1($T)._eval$1("1(2)")._as(f);
      $T._as(arg);
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg, $R, $T);
    },
    runBinary$3$3(f, arg1, arg2, $R, T1, T2) {
      $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
      T1._as(arg1);
      T2._as(arg2);
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
    },
    registerBinaryCallback$3$1(f, $R, T1, T2) {
      return $R._eval$1("@<0>")._bind$1(T1)._bind$1(T2)._eval$1("1(2,3)")._as(f);
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$keys(_) {
      return new A._HashMapKeyIterable(this, this.$ti._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var rest, hash, bucket, index, _this = this,
        t1 = _this.$ti;
      t1._precomputed1._as(key);
      t1._rest[1]._as(value);
      rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = A.objectHashCode(key) & 1073741823;
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._collection$_keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        }
      }
    },
    forEach$1(_, action) {
      var keys, $length, t2, i, key, t3, _this = this,
        t1 = _this.$ti;
      t1._eval$1("~(1,2)")._as(action);
      keys = _this._computeKeys$0();
      for ($length = keys.length, t2 = t1._precomputed1, t1 = t1._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2._as(key);
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
        if (keys !== _this._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _getBucket$2(table, key) {
      return table[A.objectHashCode(key) & 1073741823];
    }
  };
  A._IdentityHashMap.prototype = {
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this.set$_collection$_current(null);
        return false;
      } else {
        _this.set$_collection$_current(keys[offset]);
        _this._offset = offset + 1;
        return true;
      }
    },
    set$_collection$_current(_current) {
      this._collection$_current = this.$ti._eval$1("1?")._as(_current);
    },
    $isIterator: 1
  };
  A.ListMixin.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    map$1$1(receiver, f, $T) {
      var t1 = A.instanceType(receiver);
      return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    toString$0(receiver) {
      return A.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  A.MapBase.prototype = {};
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 14
  };
  A.MapMixin.prototype = {
    forEach$1(_, action) {
      var t2, key, t3, _this = this,
        t1 = A._instanceType(_this);
      t1._eval$1("~(1,2)")._as(action);
      for (t2 = _this.get$keys(_this), t2 = t2.get$iterator(t2), t1 = t1._rest[1]; t2.moveNext$0();) {
        key = t2.get$current();
        t3 = _this.$index(0, key);
        action.call$2(key, t3 == null ? t1._as(t3) : t3);
      }
    },
    get$length(_) {
      var t1 = this.get$keys(this);
      return t1.get$length(t1);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A._UnmodifiableMapMixin.prototype = {};
  A.MapView.prototype = {
    $index(_, key) {
      return this._collection$_map.$index(0, key);
    },
    forEach$1(_, action) {
      this._collection$_map.forEach$1(0, this.$ti._eval$1("~(1,2)")._as(action));
    },
    get$length(_) {
      return this._collection$_map.__js_helper$_length;
    },
    get$keys(_) {
      var t1 = this._collection$_map;
      return new A.LinkedHashMapKeyIterable(t1, t1.$ti._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this._collection$_map);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {};
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A.NoSuchMethodError_toString_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3;
      type$.Symbol._as(key);
      t1 = this.sb;
      t2 = this._box_0;
      t3 = t1._contents += t2.comma;
      t3 += key._name;
      t1._contents = t3;
      t1._contents = t3 + ": ";
      t1._contents += A.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 15
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && true;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(0);
    },
    toString$0(_) {
      return "" + Math.abs(0) + ":00:00." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(0), 6, "0");
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.NullThrownError.prototype = {
    toString$0(_) {
      return "Throw of null.";
    },
    $isTypeError: 1
  };
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + message,
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue(_this));
    },
    get$invalidValue(receiver) {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue(_) {
      return A._asNumQ(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue(_) {
      return A._asInt(this.invalidValue);
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (A._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.NoSuchMethodError.prototype = {
    toString$0(_) {
      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new A.StringBuffer("");
      _box_0.comma = "";
      $arguments = _this._core$_arguments;
      for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
        argument = $arguments[_i];
        sb._contents = t2 + t3;
        t2 = sb._contents += A.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new A.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = A.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      return "NoSuchMethodError: method not found: '" + _this._core$_memberName._name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      return "UnimplementedError: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    }
  };
  A.Iterable.prototype = {
    map$1$1(_, toElement, $T) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    toString$0(_) {
      return A.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  A.Iterator.prototype = {};
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    noSuchMethod$1(_, invocation) {
      type$.Invocation._as(invocation);
      throw A.wrapException(A.NoSuchMethodError$_(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._convertDataTree__convert.prototype = {
    call$1(o) {
      var convertedMap, key, convertedList,
        t1 = this._convertedObjects;
      if (t1.containsKey$1(o))
        return t1.$index(0, o);
      if (type$.Map_dynamic_dynamic._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = o.get$keys(o), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          key = t1.get$current();
          convertedMap[key] = this.call$1(o.$index(0, key));
        }
        return convertedMap;
      } else if (type$.Iterable_dynamic._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 16
  };
  A.Accelerometer.prototype = {};
  A.AccelerometerSensorOptions.prototype = {};
  A.LinearAccelerationSensor.prototype = {};
  A.GravitySensor.prototype = {};
  A.AccelerometerReadingValues.prototype = {};
  A.LinearAccelerationReadingValues.prototype = {};
  A.GravityReadingValues.prototype = {};
  A.AmbientLightSensor.prototype = {};
  A.AmbientLightReadingValues.prototype = {};
  A.XRAnchor.prototype = {};
  A.XRAnchorSet.prototype = {};
  A.ANGLEInstancedArrays.prototype = {};
  A.HTMLAttributionSrcElementUtils.prototype = {};
  A.AudioOutputOptions.prototype = {};
  A.BackgroundFetchManager.prototype = {};
  A.BackgroundFetchUIOptions.prototype = {};
  A.BackgroundFetchOptions.prototype = {};
  A.BackgroundFetchRegistration.prototype = {};
  A.BackgroundFetchRecord.prototype = {};
  A.BackgroundFetchEvent.prototype = {};
  A.BackgroundFetchEventInit.prototype = {};
  A.BackgroundFetchUpdateUIEvent.prototype = {};
  A.SyncManager.prototype = {};
  A.SyncEvent.prototype = {};
  A.SyncEventInit.prototype = {};
  A.NavigatorBadge.prototype = {};
  A.BatteryManager.prototype = {};
  A.CaptureHandleConfig.prototype = {};
  A.CaptureHandle.prototype = {};
  A.ClipboardEventInit.prototype = {};
  A.ClipboardEvent.prototype = {};
  A.ClipboardItem.prototype = {};
  A.ClipboardItemOptions.prototype = {};
  A.Clipboard.prototype = {};
  A.ClipboardPermissionDescriptor.prototype = {};
  A.CloseWatcher.prototype = {};
  A.CloseWatcherOptions.prototype = {};
  A.CompressionStream.prototype = {};
  A.DecompressionStream.prototype = {};
  A.PressureObserver.prototype = {};
  A.PressureRecord.prototype = {};
  A.PressureObserverOptions.prototype = {};
  A.Console.prototype = {};
  A.ContactAddress.prototype = {};
  A.ContactInfo.prototype = {};
  A.ContactsSelectOptions.prototype = {};
  A.ContactsManager.prototype = {};
  A.ContentDescription.prototype = {};
  A.ContentIndex.prototype = {};
  A.ContentIndexEventInit.prototype = {};
  A.ContentIndexEvent.prototype = {};
  A.CookieStore.prototype = {};
  A.CookieStoreGetOptions.prototype = {};
  A.CookieInit.prototype = {};
  A.CookieStoreDeleteOptions.prototype = {};
  A.CookieListItem.prototype = {};
  A.CookieStoreManager.prototype = {};
  A.CookieChangeEvent.prototype = {};
  A.CookieChangeEventInit.prototype = {};
  A.ExtendableCookieChangeEvent.prototype = {};
  A.ExtendableCookieChangeEventInit.prototype = {};
  A.CrashReportBody.prototype = {};
  A.Credential.prototype = {};
  A.CredentialUserData.prototype = {};
  A.CredentialsContainer.prototype = {};
  A.CredentialData.prototype = {};
  A.CredentialRequestOptions.prototype = {};
  A.CredentialCreationOptions.prototype = {};
  A.PasswordCredential.prototype = {};
  A.PasswordCredentialData.prototype = {};
  A.FederatedCredential.prototype = {};
  A.FederatedCredentialRequestOptions.prototype = {};
  A.FederatedCredentialInit.prototype = {};
  A.CSPViolationReportBody.prototype = {};
  A.SecurityPolicyViolationEvent.prototype = {};
  A.SecurityPolicyViolationEventInit.prototype = {};
  A.ScriptingPolicyReportBody.prototype = {};
  A.AnimationWorkletGlobalScope.prototype = {};
  A.WorkletAnimationEffect.prototype = {};
  A.WorkletAnimation.prototype = {};
  A.WorkletGroupEffect.prototype = {};
  A.AnimationEvent.prototype = {};
  A.AnimationEventInit.prototype = {};
  A.CSSKeyframeRule.prototype = {};
  A.CSSKeyframesRule.prototype = {};
  A.CSSAnimation.prototype = {};
  A.CSSLayerBlockRule.prototype = {};
  A.CSSLayerStatementRule.prototype = {};
  A.CSSColorProfileRule.prototype = {};
  A.CSSConditionRule.prototype = {};
  A.CSSMediaRule.prototype = {};
  A.CSSSupportsRule.prototype = {};
  A.ContentVisibilityAutoStateChangedEvent.prototype = {};
  A.ContentVisibilityAutoStateChangedEventInit.prototype = {};
  A.CSSContainerRule.prototype = {};
  A.CSSCounterStyleRule.prototype = {};
  A.FontFaceDescriptors.prototype = {};
  A.FontFace.prototype = {};
  A.FontFaceFeatures.prototype = {};
  A.FontFaceVariationAxis.prototype = {};
  A.FontFaceVariations.prototype = {};
  A.FontFacePalette.prototype = {};
  A.FontFacePalettes.prototype = {};
  A.FontFaceSetLoadEventInit.prototype = {};
  A.FontFaceSetLoadEvent.prototype = {};
  A.FontFaceSet.prototype = {};
  A.FontFaceSource.prototype = {};
  A.CSSFontFaceRule.prototype = {};
  A.CSSFontFeatureValuesRule.prototype = {};
  A.CSSFontFeatureValuesMap.prototype = {};
  A.CSSFontPaletteValuesRule.prototype = {};
  A.Highlight.prototype = {};
  A.HighlightRegistry.prototype = {};
  A.LayoutWorkletGlobalScope.prototype = {};
  A.LayoutOptions.prototype = {};
  A.LayoutChild.prototype = {};
  A.LayoutFragment.prototype = {};
  A.IntrinsicSizes.prototype = {};
  A.LayoutConstraints.prototype = {};
  A.LayoutConstraintsOptions.prototype = {};
  A.ChildBreakToken.prototype = {};
  A.BreakToken.prototype = {};
  A.BreakTokenOptions.prototype = {};
  A.LayoutEdges.prototype = {};
  A.FragmentResultOptions.prototype = {};
  A.FragmentResult.prototype = {};
  A.IntrinsicSizesResultOptions.prototype = {};
  A.SVGClipPathElement.prototype = {};
  A.SVGMaskElement.prototype = {};
  A.FocusableAreasOption.prototype = {};
  A.SpatialNavigationSearchOptions.prototype = {};
  A.NavigationEvent.prototype = {};
  A.NavigationEventInit.prototype = {};
  A.PaintWorkletGlobalScope.prototype = {};
  A.PaintRenderingContext2DSettings.prototype = {};
  A.PaintRenderingContext2D.prototype = {};
  A.PaintSize.prototype = {};
  A.CSSParserOptions.prototype = {};
  A.CSSParserRule.prototype = {};
  A.CSSParserAtRule.prototype = {};
  A.CSSParserQualifiedRule.prototype = {};
  A.CSSParserDeclaration.prototype = {};
  A.CSSParserValue.prototype = {};
  A.CSSParserBlock.prototype = {};
  A.CSSParserFunction.prototype = {};
  A.PropertyDefinition.prototype = {};
  A.CSSPropertyRule.prototype = {};
  A.CSSPseudoElement.prototype = {};
  A.NamedFlowMap.prototype = {};
  A.NamedFlow.prototype = {};
  A.Region.prototype = {};
  A.TransitionEvent.prototype = {};
  A.TransitionEventInit.prototype = {};
  A.CSSTransition.prototype = {};
  A.CSSStyleValue.prototype = {};
  A.StylePropertyMapReadOnly.prototype = {};
  A.StylePropertyMap.prototype = {};
  A.CSSUnparsedValue.prototype = {};
  A.CSSVariableReferenceValue.prototype = {};
  A.CSSKeywordValue.prototype = {};
  A.CSSNumericType.prototype = {};
  A.CSSNumericValue.prototype = {};
  A.CSSUnitValue.prototype = {};
  A.CSSMathValue.prototype = {};
  A.CSSMathSum.prototype = {};
  A.CSSMathProduct.prototype = {};
  A.CSSMathNegate.prototype = {};
  A.CSSMathInvert.prototype = {};
  A.CSSMathMin.prototype = {};
  A.CSSMathMax.prototype = {};
  A.CSSMathClamp.prototype = {};
  A.CSSNumericArray.prototype = {};
  A.CSSTransformValue.prototype = {};
  A.CSSTransformComponent.prototype = {};
  A.CSSTranslate.prototype = {};
  A.CSSRotate.prototype = {};
  A.CSSScale.prototype = {};
  A.CSSSkew.prototype = {};
  A.CSSSkewX.prototype = {};
  A.CSSSkewY.prototype = {};
  A.CSSPerspective.prototype = {};
  A.CSSMatrixComponent.prototype = {};
  A.CSSMatrixComponentOptions.prototype = {};
  A.CSSImageValue.prototype = {};
  A.CSSColorValue.prototype = {};
  A.Cssrgb.prototype = {};
  A.Csshsl.prototype = {};
  A.Csshwb.prototype = {};
  A.CSSLab.prototype = {};
  A.Csslch.prototype = {};
  A.CSSOKLab.prototype = {};
  A.Cssoklch.prototype = {};
  A.CSSColor.prototype = {};
  A.ViewTransition.prototype = {};
  A.MediaList.prototype = {};
  A.StyleSheet.prototype = {};
  A.CSSStyleSheet.prototype = {};
  A.CSSStyleSheetInit.prototype = {};
  A.StyleSheetList.prototype = {};
  A.LinkStyle.prototype = {};
  A.CSSRuleList.prototype = {};
  A.CSSRule.prototype = {};
  A.CSSStyleRule.prototype = {};
  A.CSSImportRule.prototype = {};
  A.CSSGroupingRule.prototype = {};
  A.CSSPageRule.prototype = {};
  A.CSSMarginRule.prototype = {};
  A.CSSNamespaceRule.prototype = {};
  A.CSSStyleDeclaration.prototype = {};
  A.ElementCSSInlineStyle.prototype = {};
  A.Css.prototype = {};
  A.ScrollOptions.prototype = {};
  A.ScrollToOptions.prototype = {};
  A.MediaQueryList.prototype = {};
  A.MediaQueryListEvent.prototype = {};
  A.MediaQueryListEventInit.prototype = {};
  A.Screen.prototype = {};
  A.CaretPosition.prototype = {};
  A.ScrollIntoViewOptions.prototype = {};
  A.CheckVisibilityOptions.prototype = {};
  A.BoxQuadOptions.prototype = {};
  A.ConvertCoordinateOptions.prototype = {};
  A.GeometryUtils.prototype = {};
  A.VisualViewport.prototype = {};
  A.CustomStateSet.prototype = {};
  A.DataCue.prototype = {};
  A.DeprecationReportBody.prototype = {};
  A.NavigatorDeviceMemory.prototype = {};
  A.DevicePosture.prototype = {};
  A.DigitalGoodsService.prototype = {};
  A.ItemDetails.prototype = {};
  A.PurchaseDetails.prototype = {};
  A.Event.prototype = {};
  A.EventInit.prototype = {};
  A.CustomEvent.prototype = {};
  A.CustomEventInit.prototype = {};
  A.EventTarget.prototype = {};
  A.EventListenerOptions.prototype = {};
  A.AddEventListenerOptions.prototype = {};
  A.AbortController.prototype = {};
  A.AbortSignal.prototype = {};
  A.NonElementParentNode.prototype = {};
  A.DocumentOrShadowRoot.prototype = {};
  A.ParentNode.prototype = {};
  A.NonDocumentTypeChildNode.prototype = {};
  A.ChildNode.prototype = {};
  A.Slottable.prototype = {};
  A.NodeList.prototype = {};
  A.HTMLCollection.prototype = {};
  A.MutationObserver.prototype = {};
  A.MutationObserverInit.prototype = {};
  A.MutationRecord.prototype = {};
  A.Node.prototype = {};
  A.GetRootNodeOptions.prototype = {};
  A.Document.prototype = {};
  A.XMLDocument.prototype = {};
  A.ElementCreationOptions.prototype = {};
  A.DOMImplementation.prototype = {};
  A.DocumentType.prototype = {};
  A.DocumentFragment.prototype = {};
  A.ShadowRoot.prototype = {};
  A.Element.prototype = {};
  A.ShadowRootInit.prototype = {};
  A.NamedNodeMap.prototype = {};
  A.Attr.prototype = {};
  A.CharacterData.prototype = {};
  A.Text.prototype = {};
  A.CDATASection.prototype = {};
  A.ProcessingInstruction.prototype = {};
  A.Comment.prototype = {};
  A.AbstractRange.prototype = {};
  A.StaticRangeInit.prototype = {};
  A.StaticRange.prototype = {};
  A.Range.prototype = {};
  A.NodeIterator.prototype = {};
  A.TreeWalker.prototype = {};
  A.NodeFilter.prototype = {};
  A.DOMTokenList.prototype = {};
  A.XPathResult.prototype = {};
  A.XPathExpression.prototype = {};
  A.XPathNSResolver.prototype = {};
  A.XPathEvaluatorBase.prototype = {};
  A.XPathEvaluator.prototype = {};
  A.XSLTProcessor.prototype = {};
  A.XMLSerializer.prototype = {};
  A.InnerHTML.prototype = {};
  A.EditContextInit.prototype = {};
  A.EditContext.prototype = {};
  A.TextUpdateEventInit.prototype = {};
  A.TextUpdateEvent.prototype = {};
  A.TextFormatInit.prototype = {};
  A.TextFormat.prototype = {};
  A.TextFormatUpdateEventInit.prototype = {};
  A.TextFormatUpdateEvent.prototype = {};
  A.CharacterBoundsUpdateEventInit.prototype = {};
  A.CharacterBoundsUpdateEvent.prototype = {};
  A.PerformanceElementTiming.prototype = {};
  A.TextDecoderCommon.prototype = {};
  A.TextDecoderOptions.prototype = {};
  A.TextDecodeOptions.prototype = {};
  A.TextDecoder.prototype = {};
  A.TextEncoderCommon.prototype = {};
  A.TextEncoderEncodeIntoResult.prototype = {};
  A.TextEncoder.prototype = {};
  A.TextDecoderStream.prototype = {};
  A.TextEncoderStream.prototype = {};
  A.MediaKeySystemConfiguration.prototype = {};
  A.MediaKeySystemMediaCapability.prototype = {};
  A.MediaKeySystemAccess.prototype = {};
  A.MediaKeys.prototype = {};
  A.MediaKeySession.prototype = {};
  A.MediaKeyStatusMap.prototype = {};
  A.MediaKeyMessageEvent.prototype = {};
  A.MediaKeyMessageEventInit.prototype = {};
  A.MediaEncryptedEvent.prototype = {};
  A.MediaEncryptedEventInit.prototype = {};
  A.FileSystemEntry.prototype = {};
  A.FileSystemDirectoryEntry.prototype = {};
  A.FileSystemFlags.prototype = {};
  A.FileSystemDirectoryReader.prototype = {};
  A.FileSystemFileEntry.prototype = {};
  A.FileSystem.prototype = {};
  A.EpubReadingSystem.prototype = {};
  A.PerformanceEventTiming.prototype = {};
  A.EventCounts.prototype = {};
  A.EXTBlendMinmax.prototype = {};
  A.EXTClipCullDistance.prototype = {};
  A.EXTColorBufferFloat.prototype = {};
  A.EXTColorBufferHalfFloat.prototype = {};
  A.WebGLTimerQueryEXT.prototype = {};
  A.EXTDisjointTimerQuery.prototype = {};
  A.EXTDisjointTimerQueryWebgl2.prototype = {};
  A.EXTFloatBlend.prototype = {};
  A.EXTFragDepth.prototype = {};
  A.EXTShaderTextureLod.prototype = {};
  A.EXTSRGB.prototype = {};
  A.EXTTextureCompressionBptc.prototype = {};
  A.EXTTextureCompressionRgtc.prototype = {};
  A.EXTTextureFilterAnisotropic.prototype = {};
  A.EXTTextureNorm16.prototype = {};
  A.ColorSelectionResult.prototype = {};
  A.ColorSelectionOptions.prototype = {};
  A.EyeDropper.prototype = {};
  A.IdentityProviderWellKnown.prototype = {};
  A.IdentityProviderIcon.prototype = {};
  A.IdentityProviderBranding.prototype = {};
  A.IdentityProviderAPIConfig.prototype = {};
  A.IdentityProviderAccount.prototype = {};
  A.IdentityProviderAccountList.prototype = {};
  A.IdentityProviderClientMetadata.prototype = {};
  A.IdentityProviderToken.prototype = {};
  A.IdentityCredential.prototype = {};
  A.IdentityCredentialRequestOptions.prototype = {};
  A.IdentityProviderConfig.prototype = {};
  A.IdentityCredentialLogoutRPsRequest.prototype = {};
  A.IdentityProvider.prototype = {};
  A.Headers.prototype = {};
  A.Body.prototype = {};
  A.Request0.prototype = {};
  A.RequestInit.prototype = {};
  A.Response0.prototype = {};
  A.ResponseInit.prototype = {};
  A.HMACGetSecretInput.prototype = {};
  A.HMACGetSecretOutput.prototype = {};
  A.FileSystemPermissionDescriptor.prototype = {};
  A.FileSystemHandlePermissionDescriptor.prototype = {};
  A.FilePickerAcceptType.prototype = {};
  A.FilePickerOptions.prototype = {};
  A.OpenFilePickerOptions.prototype = {};
  A.SaveFilePickerOptions.prototype = {};
  A.DirectoryPickerOptions.prototype = {};
  A.Blob.prototype = {};
  A.BlobPropertyBag.prototype = {};
  A.File.prototype = {};
  A.FilePropertyBag.prototype = {};
  A.FileList.prototype = {};
  A.FileReader.prototype = {};
  A.FileReaderSync.prototype = {};
  A.SVGFilterElement.prototype = {};
  A.SVGFilterPrimitiveStandardAttributes.prototype = {};
  A.SVGFEBlendElement.prototype = {};
  A.SVGFEColorMatrixElement.prototype = {};
  A.SVGFEComponentTransferElement.prototype = {};
  A.SVGComponentTransferFunctionElement.prototype = {};
  A.SVGFEFuncRElement.prototype = {};
  A.SVGFEFuncGElement.prototype = {};
  A.SVGFEFuncBElement.prototype = {};
  A.SVGFEFuncAElement.prototype = {};
  A.SVGFECompositeElement.prototype = {};
  A.SVGFEConvolveMatrixElement.prototype = {};
  A.SVGFEDiffuseLightingElement.prototype = {};
  A.SVGFEDistantLightElement.prototype = {};
  A.SVGFEPointLightElement.prototype = {};
  A.SVGFESpotLightElement.prototype = {};
  A.SVGFEDisplacementMapElement.prototype = {};
  A.SVGFEDropShadowElement.prototype = {};
  A.SVGFEFloodElement.prototype = {};
  A.SVGFEGaussianBlurElement.prototype = {};
  A.SVGFEImageElement.prototype = {};
  A.SVGFEMergeElement.prototype = {};
  A.SVGFEMergeNodeElement.prototype = {};
  A.SVGFEMorphologyElement.prototype = {};
  A.SVGFEOffsetElement.prototype = {};
  A.SVGFESpecularLightingElement.prototype = {};
  A.SVGFETileElement.prototype = {};
  A.SVGFETurbulenceElement.prototype = {};
  A.FontMetrics.prototype = {};
  A.Baseline.prototype = {};
  A.Font.prototype = {};
  A.FileSystemHandle.prototype = {};
  A.FileSystemCreateWritableOptions.prototype = {};
  A.FileSystemFileHandle.prototype = {};
  A.FileSystemGetFileOptions.prototype = {};
  A.FileSystemGetDirectoryOptions.prototype = {};
  A.FileSystemRemoveOptions.prototype = {};
  A.FileSystemDirectoryHandle.prototype = {};
  A.WriteParams.prototype = {};
  A.FileSystemWritableFileStream.prototype = {};
  A.FileSystemReadWriteOptions.prototype = {};
  A.FileSystemSyncAccessHandle.prototype = {};
  A.FullscreenOptions.prototype = {};
  A.Gamepad.prototype = {};
  A.GamepadButton.prototype = {};
  A.GamepadEvent.prototype = {};
  A.GamepadEventInit.prototype = {};
  A.GamepadHapticActuator.prototype = {};
  A.GamepadEffectParameters.prototype = {};
  A.GamepadPose.prototype = {};
  A.GamepadTouch.prototype = {};
  A.Sensor.prototype = {};
  A.SensorOptions.prototype = {};
  A.SensorErrorEvent.prototype = {};
  A.SensorErrorEventInit.prototype = {};
  A.MockSensorConfiguration.prototype = {};
  A.MockSensor.prototype = {};
  A.MockSensorReadingValues.prototype = {};
  A.Geolocation.prototype = {};
  A.PositionOptions.prototype = {};
  A.GeolocationPosition.prototype = {};
  A.GeolocationCoordinates.prototype = {};
  A.GeolocationPositionError.prototype = {};
  A.GeolocationSensor.prototype = {};
  A.GeolocationSensorOptions.prototype = {};
  A.ReadOptions.prototype = {};
  A.GeolocationSensorReading.prototype = {};
  A.GeolocationReadingValues.prototype = {};
  A.DOMPointReadOnly.prototype = {};
  A.DOMPoint.prototype = {};
  A.DOMPointInit.prototype = {};
  A.DOMRectReadOnly.prototype = {};
  A.DOMRect.prototype = {};
  A.DOMRectInit.prototype = {};
  A.DOMRectList.prototype = {};
  A.DOMQuad.prototype = {};
  A.DOMQuadInit.prototype = {};
  A.DOMMatrixReadOnly.prototype = {};
  A.DOMMatrix.prototype = {};
  A.DOMMatrix2DInit.prototype = {};
  A.DOMMatrixInit.prototype = {};
  A.RelatedApplication.prototype = {};
  A.Gyroscope.prototype = {};
  A.GyroscopeSensorOptions.prototype = {};
  A.GyroscopeReadingValues.prototype = {};
  A.Performance.prototype = {};
  A.HTMLAllCollection.prototype = {};
  A.HTMLFormControlsCollection.prototype = {};
  A.RadioNodeList.prototype = {};
  A.HTMLOptionsCollection.prototype = {};
  A.DOMStringList.prototype = {};
  A.HTMLElement.prototype = {};
  A.HTMLUnknownElement.prototype = {};
  A.HTMLOrSVGElement.prototype = {};
  A.DOMStringMap.prototype = {};
  A.HTMLHtmlElement.prototype = {};
  A.HTMLHeadElement.prototype = {};
  A.HTMLTitleElement.prototype = {};
  A.HTMLBaseElement.prototype = {};
  A.HTMLLinkElement.prototype = {};
  A.HTMLMetaElement.prototype = {};
  A.HTMLStyleElement.prototype = {};
  A.HTMLBodyElement.prototype = {};
  A.HTMLHeadingElement.prototype = {};
  A.HTMLParagraphElement.prototype = {};
  A.HTMLHRElement.prototype = {};
  A.HTMLPreElement.prototype = {};
  A.HTMLQuoteElement.prototype = {};
  A.HTMLOListElement.prototype = {};
  A.HTMLUListElement.prototype = {};
  A.HTMLMenuElement.prototype = {};
  A.HTMLLIElement.prototype = {};
  A.HTMLDListElement.prototype = {};
  A.HTMLDivElement.prototype = {};
  A.HTMLAnchorElement.prototype = {};
  A.HTMLDataElement.prototype = {};
  A.HTMLTimeElement.prototype = {};
  A.HTMLSpanElement.prototype = {};
  A.HTMLBRElement.prototype = {};
  A.HTMLHyperlinkElementUtils.prototype = {};
  A.HTMLModElement.prototype = {};
  A.HTMLPictureElement.prototype = {};
  A.HTMLSourceElement.prototype = {};
  A.HTMLImageElement.prototype = {};
  A.HTMLIFrameElement.prototype = {};
  A.HTMLEmbedElement.prototype = {};
  A.HTMLObjectElement.prototype = {};
  A.HTMLVideoElement.prototype = {};
  A.HTMLAudioElement.prototype = {};
  A.HTMLTrackElement.prototype = {};
  A.HTMLMediaElement.prototype = {};
  A.MediaError.prototype = {};
  A.AudioTrackList.prototype = {};
  A.AudioTrack.prototype = {};
  A.VideoTrackList.prototype = {};
  A.VideoTrack.prototype = {};
  A.TextTrackList.prototype = {};
  A.TextTrack.prototype = {};
  A.TextTrackCueList.prototype = {};
  A.TextTrackCue.prototype = {};
  A.TimeRanges.prototype = {};
  A.TrackEvent.prototype = {};
  A.TrackEventInit.prototype = {};
  A.HTMLMapElement.prototype = {};
  A.HTMLAreaElement.prototype = {};
  A.HTMLTableElement.prototype = {};
  A.HTMLTableCaptionElement.prototype = {};
  A.HTMLTableColElement.prototype = {};
  A.HTMLTableSectionElement.prototype = {};
  A.HTMLTableRowElement.prototype = {};
  A.HTMLTableCellElement.prototype = {};
  A.HTMLFormElement.prototype = {};
  A.HTMLLabelElement.prototype = {};
  A.HTMLInputElement.prototype = {};
  A.HTMLButtonElement.prototype = {};
  A.HTMLSelectElement.prototype = {};
  A.HTMLDataListElement.prototype = {};
  A.HTMLOptGroupElement.prototype = {};
  A.HTMLOptionElement.prototype = {};
  A.HTMLTextAreaElement.prototype = {};
  A.HTMLOutputElement.prototype = {};
  A.HTMLProgressElement.prototype = {};
  A.HTMLMeterElement.prototype = {};
  A.HTMLFieldSetElement.prototype = {};
  A.HTMLLegendElement.prototype = {};
  A.ValidityState.prototype = {};
  A.SubmitEvent.prototype = {};
  A.SubmitEventInit.prototype = {};
  A.FormDataEvent.prototype = {};
  A.FormDataEventInit.prototype = {};
  A.HTMLDetailsElement.prototype = {};
  A.HTMLDialogElement.prototype = {};
  A.HTMLScriptElement.prototype = {};
  A.HTMLTemplateElement.prototype = {};
  A.HTMLSlotElement.prototype = {};
  A.AssignedNodesOptions.prototype = {};
  A.HTMLCanvasElement.prototype = {};
  A.CanvasRenderingContext2DSettings.prototype = {};
  A.CanvasRenderingContext2D.prototype = {};
  A.CanvasState.prototype = {};
  A.CanvasTransform.prototype = {};
  A.CanvasCompositing.prototype = {};
  A.CanvasImageSmoothing.prototype = {};
  A.CanvasFillStrokeStyles.prototype = {};
  A.CanvasShadowStyles.prototype = {};
  A.CanvasFilters.prototype = {};
  A.CanvasRect.prototype = {};
  A.CanvasDrawPath.prototype = {};
  A.CanvasUserInterface.prototype = {};
  A.CanvasText.prototype = {};
  A.CanvasDrawImage.prototype = {};
  A.CanvasImageData.prototype = {};
  A.CanvasPathDrawingStyles.prototype = {};
  A.CanvasTextDrawingStyles.prototype = {};
  A.CanvasPath.prototype = {};
  A.CanvasGradient.prototype = {};
  A.CanvasPattern.prototype = {};
  A.TextMetrics.prototype = {};
  A.ImageDataSettings.prototype = {};
  A.ImageData.prototype = {};
  A.Path2D.prototype = {};
  A.ImageBitmapRenderingContext.prototype = {};
  A.ImageBitmapRenderingContextSettings.prototype = {};
  A.ImageEncodeOptions.prototype = {};
  A.OffscreenCanvas.prototype = {};
  A.OffscreenCanvasRenderingContext2D.prototype = {};
  A.CustomElementRegistry.prototype = {};
  A.ElementDefinitionOptions.prototype = {};
  A.ElementInternals.prototype = {};
  A.ValidityStateFlags.prototype = {};
  A.UserActivation.prototype = {};
  A.FocusOptions.prototype = {};
  A.ElementContentEditable.prototype = {};
  A.DataTransfer.prototype = {};
  A.DataTransferItemList.prototype = {};
  A.DataTransferItem.prototype = {};
  A.DragEvent.prototype = {};
  A.DragEventInit.prototype = {};
  A.Window.prototype = {};
  A.WindowPostMessageOptions.prototype = {};
  A.BarProp.prototype = {};
  A.Location.prototype = {};
  A.History.prototype = {};
  A.PopStateEvent.prototype = {};
  A.PopStateEventInit.prototype = {};
  A.HashChangeEvent.prototype = {};
  A.HashChangeEventInit.prototype = {};
  A.PageTransitionEvent.prototype = {};
  A.PageTransitionEventInit.prototype = {};
  A.BeforeUnloadEvent.prototype = {};
  A.ErrorEvent.prototype = {};
  A.ErrorEventInit.prototype = {};
  A.PromiseRejectionEvent.prototype = {};
  A.PromiseRejectionEventInit.prototype = {};
  A.GlobalEventHandlers.prototype = {};
  A.WindowEventHandlers.prototype = {};
  A.WindowOrWorkerGlobalScope.prototype = {};
  A.DOMParser.prototype = {};
  A.Navigator.prototype = {};
  A.NavigatorID.prototype = {};
  A.NavigatorLanguage.prototype = {};
  A.NavigatorOnLine.prototype = {};
  A.NavigatorContentUtils.prototype = {};
  A.NavigatorCookies.prototype = {};
  A.NavigatorPlugins.prototype = {};
  A.PluginArray.prototype = {};
  A.MimeTypeArray.prototype = {};
  A.Plugin.prototype = {};
  A.MimeType.prototype = {};
  A.ImageBitmap.prototype = {};
  A.ImageBitmapOptions.prototype = {};
  A.AnimationFrameProvider.prototype = {};
  A.MessageEvent.prototype = {};
  A.MessageEventInit.prototype = {};
  A.EventSource.prototype = {};
  A.EventSourceInit.prototype = {};
  A.MessageChannel.prototype = {};
  A.MessagePort.prototype = {};
  A.StructuredSerializeOptions.prototype = {};
  A.BroadcastChannel.prototype = {};
  A.WorkerGlobalScope.prototype = {};
  A.DedicatedWorkerGlobalScope.prototype = {};
  A.SharedWorkerGlobalScope.prototype = {};
  A.AbstractWorker.prototype = {};
  A.Worker.prototype = {};
  A.WorkerOptions.prototype = {};
  A.SharedWorker.prototype = {};
  A.NavigatorConcurrentHardware.prototype = {};
  A.WorkerNavigator.prototype = {};
  A.WorkerLocation.prototype = {};
  A.WorkletGlobalScope.prototype = {};
  A.Worklet.prototype = {};
  A.WorkletOptions.prototype = {};
  A.Storage.prototype = {};
  A.WindowSessionStorage.prototype = {};
  A.WindowLocalStorage.prototype = {};
  A.StorageEvent.prototype = {};
  A.StorageEventInit.prototype = {};
  A.HTMLMarqueeElement.prototype = {};
  A.HTMLFrameSetElement.prototype = {};
  A.HTMLFrameElement.prototype = {};
  A.HTMLDirectoryElement.prototype = {};
  A.HTMLFontElement.prototype = {};
  A.HTMLParamElement.prototype = {};
  A.External.prototype = {};
  A.IdleOptions.prototype = {};
  A.IdleDetector.prototype = {};
  A.ImageCapture.prototype = {};
  A.PhotoCapabilities.prototype = {};
  A.PhotoSettings.prototype = {};
  A.MediaSettingsRange.prototype = {};
  A.ConstrainPoint2DParameters.prototype = {};
  A.Point2D.prototype = {};
  A.ImageResource.prototype = {};
  A.IDBRequest.prototype = {};
  A.IDBOpenDBRequest.prototype = {};
  A.IDBVersionChangeEvent.prototype = {};
  A.IDBVersionChangeEventInit.prototype = {};
  A.IDBFactory.prototype = {};
  A.IDBDatabaseInfo.prototype = {};
  A.IDBDatabase.prototype = {};
  A.IDBTransactionOptions.prototype = {};
  A.IDBObjectStoreParameters.prototype = {};
  A.IDBObjectStore.prototype = {};
  A.IDBIndexParameters.prototype = {};
  A.IDBIndex.prototype = {};
  A.IDBKeyRange.prototype = {};
  A.IDBCursor.prototype = {};
  A.IDBCursorWithValue.prototype = {};
  A.IDBTransaction.prototype = {};
  A.Ink.prototype = {};
  A.InkPresenterParam.prototype = {};
  A.InkPresenter.prototype = {};
  A.InkTrailStyle.prototype = {};
  A.InputDeviceCapabilities.prototype = {};
  A.InputDeviceCapabilitiesInit.prototype = {};
  A.IntersectionObserver.prototype = {};
  A.IntersectionObserverEntry.prototype = {};
  A.IntersectionObserverEntryInit.prototype = {};
  A.IntersectionObserverInit.prototype = {};
  A.InterventionReportBody.prototype = {};
  A.IsInputPendingOptions.prototype = {};
  A.Scheduling.prototype = {};
  A.Profiler.prototype = {};
  A.ProfilerTrace.prototype = {};
  A.ProfilerSample.prototype = {};
  A.ProfilerStack.prototype = {};
  A.ProfilerFrame.prototype = {};
  A.ProfilerInitOptions.prototype = {};
  A.JsonLd.prototype = {};
  A.JsonLdProcessor.prototype = {};
  A.RdfDataset.prototype = {};
  A.RdfGraph.prototype = {};
  A.RdfTriple.prototype = {};
  A.RdfLiteral.prototype = {};
  A.JsonLdOptions.prototype = {};
  A.LoadDocumentOptions.prototype = {};
  A.RemoteDocument.prototype = {};
  A.JsonLdError.prototype = {};
  A.JsonLdFramingError.prototype = {};
  A.Keyboard.prototype = {};
  A.KeyboardLayoutMap.prototype = {};
  A.KHRParallelShaderCompile.prototype = {};
  A.LargestContentfulPaint.prototype = {};
  A.LayoutShift.prototype = {};
  A.LayoutShiftAttribution.prototype = {};
  A.QueryOptions.prototype = {};
  A.FontData.prototype = {};
  A.PerformanceLongTaskTiming.prototype = {};
  A.TaskAttributionTiming.prototype = {};
  A.Magnetometer.prototype = {};
  A.MagnetometerSensorOptions.prototype = {};
  A.UncalibratedMagnetometer.prototype = {};
  A.MagnetometerReadingValues.prototype = {};
  A.UncalibratedMagnetometerReadingValues.prototype = {};
  A.BeforeInstallPromptEvent.prototype = {};
  A.PromptResponseObject.prototype = {};
  A.MathMLElement.prototype = {};
  A.MediaConfiguration.prototype = {};
  A.MediaDecodingConfiguration.prototype = {};
  A.MediaEncodingConfiguration.prototype = {};
  A.VideoConfiguration.prototype = {};
  A.AudioConfiguration.prototype = {};
  A.MediaCapabilitiesKeySystemConfiguration.prototype = {};
  A.KeySystemTrackConfiguration.prototype = {};
  A.MediaCapabilitiesInfo.prototype = {};
  A.MediaCapabilitiesDecodingInfo.prototype = {};
  A.MediaCapabilitiesEncodingInfo.prototype = {};
  A.MediaCapabilities.prototype = {};
  A.VideoPlaybackQuality.prototype = {};
  A.MediaSource.prototype = {};
  A.MediaSourceHandle.prototype = {};
  A.SourceBuffer.prototype = {};
  A.SourceBufferList.prototype = {};
  A.MockCapturePromptResultConfiguration.prototype = {};
  A.MockCaptureDeviceConfiguration.prototype = {};
  A.MockCameraConfiguration.prototype = {};
  A.MockMicrophoneConfiguration.prototype = {};
  A.CanvasCaptureMediaStreamTrack.prototype = {};
  A.CaptureActionEvent.prototype = {};
  A.CaptureActionEventInit.prototype = {};
  A.CropTarget.prototype = {};
  A.BrowserCaptureMediaStreamTrack.prototype = {};
  A.MediaStream.prototype = {};
  A.MediaStreamTrack.prototype = {};
  A.MediaTrackSupportedConstraints.prototype = {};
  A.MediaTrackCapabilities.prototype = {};
  A.MediaTrackConstraints.prototype = {};
  A.MediaTrackConstraintSet.prototype = {};
  A.MediaTrackSettings.prototype = {};
  A.MediaStreamTrackEvent.prototype = {};
  A.MediaStreamTrackEventInit.prototype = {};
  A.OverconstrainedError.prototype = {};
  A.MediaDevices.prototype = {};
  A.MediaDeviceInfo.prototype = {};
  A.InputDeviceInfo.prototype = {};
  A.MediaStreamConstraints.prototype = {};
  A.DoubleRange.prototype = {};
  A.ConstrainDoubleRange.prototype = {};
  A.ULongRange.prototype = {};
  A.ConstrainULongRange.prototype = {};
  A.ConstrainBooleanParameters.prototype = {};
  A.ConstrainDOMStringParameters.prototype = {};
  A.DevicePermissionDescriptor.prototype = {};
  A.CameraDevicePermissionDescriptor.prototype = {};
  A.MediaStreamTrackProcessor.prototype = {};
  A.MediaStreamTrackProcessorInit.prototype = {};
  A.VideoTrackGenerator.prototype = {};
  A.ViewportMediaStreamConstraints.prototype = {};
  A.MediaSession.prototype = {};
  A.MediaMetadata.prototype = {};
  A.MediaMetadataInit.prototype = {};
  A.MediaImage.prototype = {};
  A.MediaPositionState.prototype = {};
  A.MediaSessionActionDetails.prototype = {};
  A.MediaRecorder.prototype = {};
  A.MediaRecorderOptions.prototype = {};
  A.BlobEvent.prototype = {};
  A.BlobEventInit.prototype = {};
  A.HTMLModelElement.prototype = {};
  A.Navigation.prototype = {};
  A.NavigationUpdateCurrentEntryOptions.prototype = {};
  A.NavigationOptions.prototype = {};
  A.NavigationNavigateOptions.prototype = {};
  A.NavigationReloadOptions.prototype = {};
  A.NavigationResult.prototype = {};
  A.NavigationCurrentEntryChangeEvent.prototype = {};
  A.NavigationCurrentEntryChangeEventInit.prototype = {};
  A.NavigationTransition.prototype = {};
  A.NavigateEvent.prototype = {};
  A.NavigateEventInit.prototype = {};
  A.NavigationInterceptOptions.prototype = {};
  A.NavigationDestination.prototype = {};
  A.NavigationHistoryEntry.prototype = {};
  A.PerformanceNavigationTiming.prototype = {};
  A.PerformanceTiming.prototype = {};
  A.PerformanceNavigation.prototype = {};
  A.NavigatorNetworkInformation.prototype = {};
  A.NetworkInformation.prototype = {};
  A.Notification.prototype = {};
  A.NotificationOptions.prototype = {};
  A.NotificationAction.prototype = {};
  A.GetNotificationOptions.prototype = {};
  A.NotificationEvent.prototype = {};
  A.NotificationEventInit.prototype = {};
  A.OESDrawBuffersIndexed.prototype = {};
  A.OESElementIndexUint.prototype = {};
  A.OESFboRenderMipmap.prototype = {};
  A.OESStandardDerivatives.prototype = {};
  A.OESTextureFloat.prototype = {};
  A.OESTextureFloatLinear.prototype = {};
  A.OESTextureHalfFloat.prototype = {};
  A.OESTextureHalfFloatLinear.prototype = {};
  A.WebGLVertexArrayObjectOES.prototype = {};
  A.OESVertexArrayObject.prototype = {};
  A.DeviceOrientationEvent.prototype = {};
  A.DeviceOrientationEventInit.prototype = {};
  A.DeviceMotionEventAcceleration.prototype = {};
  A.DeviceMotionEventRotationRate.prototype = {};
  A.DeviceMotionEvent.prototype = {};
  A.DeviceMotionEventAccelerationInit.prototype = {};
  A.DeviceMotionEventRotationRateInit.prototype = {};
  A.DeviceMotionEventInit.prototype = {};
  A.OrientationSensor.prototype = {};
  A.OrientationSensorOptions.prototype = {};
  A.AbsoluteOrientationSensor.prototype = {};
  A.RelativeOrientationSensor.prototype = {};
  A.AbsoluteOrientationReadingValues.prototype = {};
  A.RelativeOrientationReadingValues.prototype = {};
  A.OVRMultiview2.prototype = {};
  A.PerformancePaintTiming.prototype = {};
  A.PaymentManager.prototype = {};
  A.PaymentInstruments.prototype = {};
  A.PaymentInstrument.prototype = {};
  A.ImageObject.prototype = {};
  A.CanMakePaymentEvent.prototype = {};
  A.PaymentRequestDetailsUpdate.prototype = {};
  A.PaymentRequestEvent.prototype = {};
  A.PaymentRequestEventInit.prototype = {};
  A.PaymentHandlerResponse.prototype = {};
  A.AddressInit.prototype = {};
  A.PaymentOptions.prototype = {};
  A.PaymentShippingOption.prototype = {};
  A.AddressErrors.prototype = {};
  A.PaymentRequest.prototype = {};
  A.PaymentMethodData.prototype = {};
  A.PaymentCurrencyAmount.prototype = {};
  A.PaymentDetailsBase.prototype = {};
  A.PaymentDetailsInit.prototype = {};
  A.PaymentDetailsUpdate.prototype = {};
  A.PaymentDetailsModifier.prototype = {};
  A.PaymentItem.prototype = {};
  A.PaymentCompleteDetails.prototype = {};
  A.PaymentResponse.prototype = {};
  A.PaymentValidationErrors.prototype = {};
  A.PaymentMethodChangeEvent.prototype = {};
  A.PaymentMethodChangeEventInit.prototype = {};
  A.PaymentRequestUpdateEvent.prototype = {};
  A.PaymentRequestUpdateEventInit.prototype = {};
  A.MemoryMeasurement.prototype = {};
  A.MemoryBreakdownEntry.prototype = {};
  A.MemoryAttribution.prototype = {};
  A.MemoryAttributionContainer.prototype = {};
  A.PerformanceEntry.prototype = {};
  A.PerformanceObserver.prototype = {};
  A.PerformanceObserverCallbackOptions.prototype = {};
  A.PerformanceObserverInit.prototype = {};
  A.PerformanceObserverEntryList.prototype = {};
  A.PeriodicSyncManager.prototype = {};
  A.BackgroundSyncOptions.prototype = {};
  A.PeriodicSyncEventInit.prototype = {};
  A.PeriodicSyncEvent.prototype = {};
  A.Permissions.prototype = {};
  A.PermissionDescriptor.prototype = {};
  A.PermissionStatus.prototype = {};
  A.PermissionSetParameters.prototype = {};
  A.PermissionsPolicy.prototype = {};
  A.PermissionsPolicyViolationReportBody.prototype = {};
  A.PictureInPictureWindow.prototype = {};
  A.PictureInPictureEvent.prototype = {};
  A.PictureInPictureEventInit.prototype = {};
  A.PointerEventInit.prototype = {};
  A.PointerEvent.prototype = {};
  A.HTMLPortalElement.prototype = {};
  A.PortalActivateOptions.prototype = {};
  A.PortalHost.prototype = {};
  A.PortalActivateEvent.prototype = {};
  A.PortalActivateEventInit.prototype = {};
  A.Presentation.prototype = {};
  A.PresentationRequest.prototype = {};
  A.PresentationAvailability.prototype = {};
  A.PresentationConnectionAvailableEvent.prototype = {};
  A.PresentationConnectionAvailableEventInit.prototype = {};
  A.PresentationConnection.prototype = {};
  A.PresentationConnectionCloseEvent.prototype = {};
  A.PresentationConnectionCloseEventInit.prototype = {};
  A.PresentationReceiver.prototype = {};
  A.PresentationConnectionList.prototype = {};
  A.ProximitySensor.prototype = {};
  A.ProximityReadingValues.prototype = {};
  A.PushPermissionDescriptor.prototype = {};
  A.PushManager.prototype = {};
  A.PushSubscriptionOptions.prototype = {};
  A.PushSubscriptionOptionsInit.prototype = {};
  A.PushSubscription.prototype = {};
  A.PushSubscriptionJSON.prototype = {};
  A.PushMessageData.prototype = {};
  A.PushEvent.prototype = {};
  A.PushEventInit.prototype = {};
  A.PushSubscriptionChangeEvent.prototype = {};
  A.PushSubscriptionChangeEventInit.prototype = {};
  A.XRCamera.prototype = {};
  A.RemotePlayback.prototype = {};
  A.ReportBody.prototype = {};
  A.Report.prototype = {};
  A.ReportingObserver.prototype = {};
  A.ReportingObserverOptions.prototype = {};
  A.GenerateTestReportParameters.prototype = {};
  A.IdleRequestOptions.prototype = {};
  A.IdleDeadline.prototype = {};
  A.ResizeObserverOptions.prototype = {};
  A.ResizeObserver.prototype = {};
  A.ResizeObserverEntry.prototype = {};
  A.ResizeObserverSize.prototype = {};
  A.PerformanceResourceTiming.prototype = {};
  A.Sanitizer.prototype = {};
  A.SetHTMLOptions.prototype = {};
  A.SanitizerConfig.prototype = {};
  A.NetworkInformationSaveData.prototype = {};
  A.SchedulerPostTaskOptions.prototype = {};
  A.Scheduler.prototype = {};
  A.TaskPriorityChangeEvent.prototype = {};
  A.TaskPriorityChangeEventInit.prototype = {};
  A.TaskControllerInit.prototype = {};
  A.TaskController.prototype = {};
  A.TaskSignal.prototype = {};
  A.CaptureController.prototype = {};
  A.DisplayMediaStreamOptions.prototype = {};
  A.ScreenOrientation.prototype = {};
  A.WakeLock.prototype = {};
  A.WakeLockSentinel.prototype = {};
  A.ScrollTimelineOptions.prototype = {};
  A.ScrollTimeline.prototype = {};
  A.ViewTimelineOptions.prototype = {};
  A.ViewTimeline.prototype = {};
  A.FragmentDirective.prototype = {};
  A.SecurePaymentConfirmationRequest.prototype = {};
  A.AuthenticationExtensionsPaymentInputs.prototype = {};
  A.CollectedClientPaymentData.prototype = {};
  A.CollectedClientAdditionalPaymentData.prototype = {};
  A.PaymentCredentialInstrument.prototype = {};
  A.Selection.prototype = {};
  A.Serial.prototype = {};
  A.SerialPortRequestOptions.prototype = {};
  A.SerialPortFilter.prototype = {};
  A.SerialPort.prototype = {};
  A.SerialPortInfo.prototype = {};
  A.SerialOptions.prototype = {};
  A.SerialOutputSignals.prototype = {};
  A.SerialInputSignals.prototype = {};
  A.PerformanceServerTiming.prototype = {};
  A.ServiceWorker.prototype = {};
  A.ServiceWorkerRegistration.prototype = {};
  A.ServiceWorkerContainer.prototype = {};
  A.RegistrationOptions.prototype = {};
  A.NavigationPreloadManager.prototype = {};
  A.NavigationPreloadState.prototype = {};
  A.ServiceWorkerGlobalScope.prototype = {};
  A.Client.prototype = {};
  A.WindowClient.prototype = {};
  A.Clients.prototype = {};
  A.ClientQueryOptions.prototype = {};
  A.ExtendableEvent.prototype = {};
  A.ExtendableEventInit.prototype = {};
  A.FetchEvent.prototype = {};
  A.FetchEventInit.prototype = {};
  A.ExtendableMessageEvent.prototype = {};
  A.ExtendableMessageEventInit.prototype = {};
  A.Cache.prototype = {};
  A.CacheQueryOptions.prototype = {};
  A.CacheStorage.prototype = {};
  A.MultiCacheQueryOptions.prototype = {};
  A.FaceDetector.prototype = {};
  A.FaceDetectorOptions.prototype = {};
  A.DetectedFace.prototype = {};
  A.Landmark.prototype = {};
  A.BarcodeDetector.prototype = {};
  A.BarcodeDetectorOptions.prototype = {};
  A.DetectedBarcode.prototype = {};
  A.SpeechRecognition.prototype = {};
  A.SpeechRecognitionErrorEvent.prototype = {};
  A.SpeechRecognitionErrorEventInit.prototype = {};
  A.SpeechRecognitionAlternative.prototype = {};
  A.SpeechRecognitionResult.prototype = {};
  A.SpeechRecognitionResultList.prototype = {};
  A.SpeechRecognitionEvent.prototype = {};
  A.SpeechRecognitionEventInit.prototype = {};
  A.SpeechGrammar.prototype = {};
  A.SpeechGrammarList.prototype = {};
  A.SpeechSynthesis.prototype = {};
  A.SpeechSynthesisUtterance.prototype = {};
  A.SpeechSynthesisEvent.prototype = {};
  A.SpeechSynthesisEventInit.prototype = {};
  A.SpeechSynthesisErrorEvent.prototype = {};
  A.SpeechSynthesisErrorEventInit.prototype = {};
  A.SpeechSynthesisVoice.prototype = {};
  A.NavigatorStorage.prototype = {};
  A.StorageManager.prototype = {};
  A.StorageEstimate.prototype = {};
  A.ReadableStream.prototype = {};
  A.ReadableStreamGetReaderOptions.prototype = {};
  A.ReadableStreamIteratorOptions.prototype = {};
  A.ReadableWritablePair.prototype = {};
  A.StreamPipeOptions.prototype = {};
  A.UnderlyingSource.prototype = {};
  A.ReadableStreamGenericReader.prototype = {};
  A.ReadableStreamDefaultReader.prototype = {};
  A.ReadableStreamReadResult.prototype = {};
  A.ReadableStreamBYOBReader.prototype = {};
  A.ReadableStreamDefaultController.prototype = {};
  A.ReadableByteStreamController.prototype = {};
  A.ReadableStreamBYOBRequest.prototype = {};
  A.WritableStream.prototype = {};
  A.UnderlyingSink.prototype = {};
  A.WritableStreamDefaultWriter.prototype = {};
  A.WritableStreamDefaultController.prototype = {};
  A.TransformStream.prototype = {};
  A.Transformer.prototype = {};
  A.TransformStreamDefaultController.prototype = {};
  A.QueuingStrategy.prototype = {};
  A.QueuingStrategyInit.prototype = {};
  A.ByteLengthQueuingStrategy.prototype = {};
  A.CountQueuingStrategy.prototype = {};
  A.GenericTransformStream.prototype = {};
  A.SVGElement.prototype = {};
  A.SVGBoundingBoxOptions.prototype = {};
  A.SVGGraphicsElement.prototype = {};
  A.SVGGeometryElement.prototype = {};
  A.SVGNumber.prototype = {};
  A.SVGLength.prototype = {};
  A.SVGAngle.prototype = {};
  A.SVGNumberList.prototype = {};
  A.SVGLengthList.prototype = {};
  A.SVGStringList.prototype = {};
  A.SVGAnimatedBoolean.prototype = {};
  A.SVGAnimatedEnumeration.prototype = {};
  A.SVGAnimatedInteger.prototype = {};
  A.SVGAnimatedNumber.prototype = {};
  A.SVGAnimatedLength.prototype = {};
  A.SVGAnimatedAngle.prototype = {};
  A.SVGAnimatedString.prototype = {};
  A.SVGAnimatedRect.prototype = {};
  A.SVGAnimatedNumberList.prototype = {};
  A.SVGAnimatedLengthList.prototype = {};
  A.SVGUnitTypes.prototype = {};
  A.SVGTests.prototype = {};
  A.SVGFitToViewBox.prototype = {};
  A.SVGURIReference.prototype = {};
  A.SVGSVGElement.prototype = {};
  A.SVGGElement.prototype = {};
  A.SVGDefsElement.prototype = {};
  A.SVGDescElement.prototype = {};
  A.SVGMetadataElement.prototype = {};
  A.SVGTitleElement.prototype = {};
  A.SVGSymbolElement.prototype = {};
  A.SVGUseElement.prototype = {};
  A.SVGUseElementShadowRoot.prototype = {};
  A.SVGElementInstance.prototype = {};
  A.ShadowAnimation.prototype = {};
  A.SVGSwitchElement.prototype = {};
  A.GetSVGDocument.prototype = {};
  A.SVGStyleElement.prototype = {};
  A.SVGTransform.prototype = {};
  A.SVGTransformList.prototype = {};
  A.SVGAnimatedTransformList.prototype = {};
  A.SVGPreserveAspectRatio.prototype = {};
  A.SVGAnimatedPreserveAspectRatio.prototype = {};
  A.SVGPathElement.prototype = {};
  A.SVGRectElement.prototype = {};
  A.SVGCircleElement.prototype = {};
  A.SVGEllipseElement.prototype = {};
  A.SVGLineElement.prototype = {};
  A.SVGAnimatedPoints.prototype = {};
  A.SVGPointList.prototype = {};
  A.SVGPolylineElement.prototype = {};
  A.SVGPolygonElement.prototype = {};
  A.SVGTextContentElement.prototype = {};
  A.SVGTextPositioningElement.prototype = {};
  A.SVGTextElement.prototype = {};
  A.SVGTSpanElement.prototype = {};
  A.SVGTextPathElement.prototype = {};
  A.SVGImageElement.prototype = {};
  A.SVGForeignObjectElement.prototype = {};
  A.SVGMarkerElement.prototype = {};
  A.SVGGradientElement.prototype = {};
  A.SVGLinearGradientElement.prototype = {};
  A.SVGRadialGradientElement.prototype = {};
  A.SVGStopElement.prototype = {};
  A.SVGPatternElement.prototype = {};
  A.SVGScriptElement.prototype = {};
  A.SVGAElement.prototype = {};
  A.SVGViewElement.prototype = {};
  A.TimeEvent.prototype = {};
  A.SVGAnimationElement.prototype = {};
  A.SVGAnimateElement.prototype = {};
  A.SVGSetElement.prototype = {};
  A.SVGAnimateMotionElement.prototype = {};
  A.SVGMPathElement.prototype = {};
  A.SVGAnimateTransformElement.prototype = {};
  A.SVGDiscardElement.prototype = {};
  A.TestUtils.prototype = {};
  A.TextDetector.prototype = {};
  A.DetectedText.prototype = {};
  A.TouchInit.prototype = {};
  A.Touch.prototype = {};
  A.TouchList.prototype = {};
  A.TouchEventInit.prototype = {};
  A.TouchEvent.prototype = {};
  A.TrustedHTML.prototype = {};
  A.TrustedScript.prototype = {};
  A.TrustedScriptURL.prototype = {};
  A.TrustedTypePolicyFactory.prototype = {};
  A.TrustedTypePolicy.prototype = {};
  A.TrustedTypePolicyOptions.prototype = {};
  A.NavigatorUABrandVersion.prototype = {};
  A.UADataValues.prototype = {};
  A.UALowEntropyJSON.prototype = {};
  A.NavigatorUAData.prototype = {};
  A.NavigatorUA.prototype = {};
  A.UIEvent.prototype = {};
  A.UIEventInit.prototype = {};
  A.FocusEvent.prototype = {};
  A.FocusEventInit.prototype = {};
  A.MouseEvent.prototype = {};
  A.MouseEventInit.prototype = {};
  A.EventModifierInit.prototype = {};
  A.WheelEvent.prototype = {};
  A.WheelEventInit.prototype = {};
  A.InputEvent.prototype = {};
  A.InputEventInit.prototype = {};
  A.KeyboardEvent.prototype = {};
  A.KeyboardEventInit.prototype = {};
  A.CompositionEvent.prototype = {};
  A.CompositionEventInit.prototype = {};
  A.MutationEvent.prototype = {};
  A.Url.prototype = {};
  A.URLSearchParams.prototype = {};
  A.URLPattern.prototype = {};
  A.URLPatternInit.prototype = {};
  A.URLPatternOptions.prototype = {};
  A.URLPatternResult.prototype = {};
  A.URLPatternComponentResult.prototype = {};
  A.PerformanceMarkOptions.prototype = {};
  A.PerformanceMeasureOptions.prototype = {};
  A.PerformanceMark.prototype = {};
  A.PerformanceMeasure.prototype = {};
  A.VideoFrameCallbackMetadata.prototype = {};
  A.VirtualKeyboard.prototype = {};
  A.ARIAMixin.prototype = {};
  A.WebAssemblyInstantiatedSource.prototype = {};
  A.WebAssembly.prototype = {};
  A.ModuleExportDescriptor.prototype = {};
  A.ModuleImportDescriptor.prototype = {};
  A.Module.prototype = {};
  A.Instance.prototype = {};
  A.MemoryDescriptor.prototype = {};
  A.Memory.prototype = {};
  A.TableDescriptor.prototype = {};
  A.Table.prototype = {};
  A.GlobalDescriptor.prototype = {};
  A.Global.prototype = {};
  A.AnimationTimeline.prototype = {};
  A.DocumentTimelineOptions.prototype = {};
  A.DocumentTimeline.prototype = {};
  A.Animation.prototype = {};
  A.AnimationEffect.prototype = {};
  A.EffectTiming.prototype = {};
  A.OptionalEffectTiming.prototype = {};
  A.ComputedEffectTiming.prototype = {};
  A.KeyframeEffect.prototype = {};
  A.BaseComputedKeyframe.prototype = {};
  A.BasePropertyIndexedKeyframe.prototype = {};
  A.BaseKeyframe.prototype = {};
  A.KeyframeEffectOptions.prototype = {};
  A.Animatable.prototype = {};
  A.KeyframeAnimationOptions.prototype = {};
  A.GetAnimationsOptions.prototype = {};
  A.GroupEffect.prototype = {};
  A.AnimationNodeList.prototype = {};
  A.SequenceEffect.prototype = {};
  A.AnimationPlaybackEvent.prototype = {};
  A.AnimationPlaybackEventInit.prototype = {};
  A.LaunchParams.prototype = {};
  A.LaunchQueue.prototype = {};
  A.BluetoothDataFilterInit.prototype = {};
  A.BluetoothManufacturerDataFilterInit.prototype = {};
  A.BluetoothServiceDataFilterInit.prototype = {};
  A.BluetoothLEScanFilterInit.prototype = {};
  A.RequestDeviceOptions.prototype = {};
  A.Bluetooth.prototype = {};
  A.BluetoothPermissionDescriptor.prototype = {};
  A.AllowedBluetoothDevice.prototype = {};
  A.BluetoothPermissionStorage.prototype = {};
  A.BluetoothPermissionResult.prototype = {};
  A.ValueEvent.prototype = {};
  A.ValueEventInit.prototype = {};
  A.BluetoothDevice.prototype = {};
  A.WatchAdvertisementsOptions.prototype = {};
  A.BluetoothManufacturerDataMap.prototype = {};
  A.BluetoothServiceDataMap.prototype = {};
  A.BluetoothAdvertisingEvent.prototype = {};
  A.BluetoothAdvertisingEventInit.prototype = {};
  A.BluetoothRemoteGATTServer.prototype = {};
  A.BluetoothRemoteGATTService.prototype = {};
  A.BluetoothRemoteGATTCharacteristic.prototype = {};
  A.BluetoothCharacteristicProperties.prototype = {};
  A.BluetoothRemoteGATTDescriptor.prototype = {};
  A.CharacteristicEventHandlers.prototype = {};
  A.BluetoothDeviceEventHandlers.prototype = {};
  A.ServiceEventHandlers.prototype = {};
  A.BluetoothUUID.prototype = {};
  A.NavigatorLocks.prototype = {};
  A.LockManager.prototype = {};
  A.LockOptions.prototype = {};
  A.LockManagerSnapshot.prototype = {};
  A.LockInfo.prototype = {};
  A.Lock.prototype = {};
  A.NDEFMessage.prototype = {};
  A.NDEFMessageInit.prototype = {};
  A.NDEFRecord.prototype = {};
  A.NDEFRecordInit.prototype = {};
  A.NDEFReader.prototype = {};
  A.NDEFReadingEvent.prototype = {};
  A.NDEFReadingEventInit.prototype = {};
  A.NDEFWriteOptions.prototype = {};
  A.NDEFMakeReadOnlyOptions.prototype = {};
  A.NDEFScanOptions.prototype = {};
  A.OTPCredential.prototype = {};
  A.OTPCredentialRequestOptions.prototype = {};
  A.ShareData.prototype = {};
  A.BaseAudioContext.prototype = {};
  A.AudioContext.prototype = {};
  A.AudioContextOptions.prototype = {};
  A.AudioSinkOptions.prototype = {};
  A.AudioSinkInfo.prototype = {};
  A.AudioTimestamp.prototype = {};
  A.AudioRenderCapacity.prototype = {};
  A.AudioRenderCapacityOptions.prototype = {};
  A.AudioRenderCapacityEvent.prototype = {};
  A.AudioRenderCapacityEventInit.prototype = {};
  A.OfflineAudioContext.prototype = {};
  A.OfflineAudioContextOptions.prototype = {};
  A.OfflineAudioCompletionEvent.prototype = {};
  A.OfflineAudioCompletionEventInit.prototype = {};
  A.AudioBuffer.prototype = {};
  A.AudioBufferOptions.prototype = {};
  A.AudioNode.prototype = {};
  A.AudioNodeOptions.prototype = {};
  A.AudioParam.prototype = {};
  A.AudioScheduledSourceNode.prototype = {};
  A.AnalyserNode.prototype = {};
  A.AnalyserOptions.prototype = {};
  A.AudioBufferSourceNode.prototype = {};
  A.AudioBufferSourceOptions.prototype = {};
  A.AudioDestinationNode.prototype = {};
  A.AudioListener.prototype = {};
  A.AudioProcessingEvent.prototype = {};
  A.AudioProcessingEventInit.prototype = {};
  A.BiquadFilterNode.prototype = {};
  A.BiquadFilterOptions.prototype = {};
  A.ChannelMergerNode.prototype = {};
  A.ChannelMergerOptions.prototype = {};
  A.ChannelSplitterNode.prototype = {};
  A.ChannelSplitterOptions.prototype = {};
  A.ConstantSourceNode.prototype = {};
  A.ConstantSourceOptions.prototype = {};
  A.ConvolverNode.prototype = {};
  A.ConvolverOptions.prototype = {};
  A.DelayNode.prototype = {};
  A.DelayOptions.prototype = {};
  A.DynamicsCompressorNode.prototype = {};
  A.DynamicsCompressorOptions.prototype = {};
  A.GainNode.prototype = {};
  A.GainOptions.prototype = {};
  A.IIRFilterNode.prototype = {};
  A.IIRFilterOptions.prototype = {};
  A.MediaElementAudioSourceNode.prototype = {};
  A.MediaElementAudioSourceOptions.prototype = {};
  A.MediaStreamAudioDestinationNode.prototype = {};
  A.MediaStreamAudioSourceNode.prototype = {};
  A.MediaStreamAudioSourceOptions.prototype = {};
  A.MediaStreamTrackAudioSourceNode.prototype = {};
  A.MediaStreamTrackAudioSourceOptions.prototype = {};
  A.OscillatorNode.prototype = {};
  A.OscillatorOptions.prototype = {};
  A.PannerNode.prototype = {};
  A.PannerOptions.prototype = {};
  A.PeriodicWave.prototype = {};
  A.PeriodicWaveConstraints.prototype = {};
  A.PeriodicWaveOptions.prototype = {};
  A.ScriptProcessorNode.prototype = {};
  A.StereoPannerNode.prototype = {};
  A.StereoPannerOptions.prototype = {};
  A.WaveShaperNode.prototype = {};
  A.WaveShaperOptions.prototype = {};
  A.AudioWorklet.prototype = {};
  A.AudioWorkletGlobalScope.prototype = {};
  A.AudioParamMap.prototype = {};
  A.AudioWorkletNode.prototype = {};
  A.AudioWorkletNodeOptions.prototype = {};
  A.AudioWorkletProcessor.prototype = {};
  A.AudioParamDescriptor.prototype = {};
  A.PublicKeyCredential.prototype = {};
  A.RegistrationResponseJSON.prototype = {};
  A.AuthenticatorAttestationResponseJSON.prototype = {};
  A.AuthenticationResponseJSON.prototype = {};
  A.AuthenticatorAssertionResponseJSON.prototype = {};
  A.AuthenticationExtensionsClientOutputsJSON.prototype = {};
  A.PublicKeyCredentialCreationOptionsJSON.prototype = {};
  A.PublicKeyCredentialUserEntityJSON.prototype = {};
  A.PublicKeyCredentialDescriptorJSON.prototype = {};
  A.AuthenticationExtensionsClientInputsJSON.prototype = {};
  A.PublicKeyCredentialRequestOptionsJSON.prototype = {};
  A.AuthenticatorResponse.prototype = {};
  A.AuthenticatorAttestationResponse.prototype = {};
  A.AuthenticatorAssertionResponse.prototype = {};
  A.PublicKeyCredentialParameters.prototype = {};
  A.PublicKeyCredentialCreationOptions.prototype = {};
  A.PublicKeyCredentialEntity.prototype = {};
  A.PublicKeyCredentialRpEntity.prototype = {};
  A.PublicKeyCredentialUserEntity.prototype = {};
  A.AuthenticatorSelectionCriteria.prototype = {};
  A.PublicKeyCredentialRequestOptions.prototype = {};
  A.AuthenticationExtensionsClientInputs.prototype = {};
  A.AuthenticationExtensionsClientOutputs.prototype = {};
  A.CollectedClientData.prototype = {};
  A.TokenBinding.prototype = {};
  A.PublicKeyCredentialDescriptor.prototype = {};
  A.CredentialPropertiesOutput.prototype = {};
  A.AuthenticationExtensionsPRFValues.prototype = {};
  A.AuthenticationExtensionsPRFInputs.prototype = {};
  A.AuthenticationExtensionsPRFOutputs.prototype = {};
  A.AuthenticationExtensionsLargeBlobInputs.prototype = {};
  A.AuthenticationExtensionsLargeBlobOutputs.prototype = {};
  A.AuthenticationExtensionsDevicePublicKeyInputs.prototype = {};
  A.AuthenticationExtensionsDevicePublicKeyOutputs.prototype = {};
  A.AudioDecoder.prototype = {};
  A.AudioDecoderInit.prototype = {};
  A.VideoDecoder.prototype = {};
  A.VideoDecoderInit.prototype = {};
  A.AudioEncoder.prototype = {};
  A.AudioEncoderInit.prototype = {};
  A.EncodedAudioChunkMetadata.prototype = {};
  A.VideoEncoder.prototype = {};
  A.VideoEncoderInit.prototype = {};
  A.EncodedVideoChunkMetadata.prototype = {};
  A.SvcOutputMetadata.prototype = {};
  A.AudioDecoderSupport.prototype = {};
  A.VideoDecoderSupport.prototype = {};
  A.AudioEncoderSupport.prototype = {};
  A.VideoEncoderSupport.prototype = {};
  A.AudioDecoderConfig.prototype = {};
  A.VideoDecoderConfig.prototype = {};
  A.AudioEncoderConfig.prototype = {};
  A.VideoEncoderConfig.prototype = {};
  A.VideoEncoderEncodeOptions.prototype = {};
  A.EncodedAudioChunk.prototype = {};
  A.EncodedAudioChunkInit.prototype = {};
  A.EncodedVideoChunk.prototype = {};
  A.EncodedVideoChunkInit.prototype = {};
  A.AudioData.prototype = {};
  A.AudioDataInit.prototype = {};
  A.AudioDataCopyToOptions.prototype = {};
  A.VideoFrame.prototype = {};
  A.VideoFrameInit.prototype = {};
  A.VideoFrameBufferInit.prototype = {};
  A.VideoFrameMetadata.prototype = {};
  A.VideoFrameCopyToOptions.prototype = {};
  A.PlaneLayout.prototype = {};
  A.VideoColorSpace.prototype = {};
  A.VideoColorSpaceInit.prototype = {};
  A.ImageDecoder.prototype = {};
  A.ImageDecoderInit.prototype = {};
  A.ImageDecodeOptions.prototype = {};
  A.ImageDecodeResult.prototype = {};
  A.ImageTrackList.prototype = {};
  A.ImageTrack.prototype = {};
  A.AacEncoderConfig.prototype = {};
  A.AvcEncoderConfig.prototype = {};
  A.FlacEncoderConfig.prototype = {};
  A.HevcEncoderConfig.prototype = {};
  A.OpusEncoderConfig.prototype = {};
  A.Ed448Params.prototype = {};
  A.Crypto.prototype = {};
  A.Algorithm.prototype = {};
  A.KeyAlgorithm.prototype = {};
  A.CryptoKey.prototype = {};
  A.SubtleCrypto.prototype = {};
  A.RsaOtherPrimesInfo.prototype = {};
  A.JsonWebKey.prototype = {};
  A.CryptoKeyPair.prototype = {};
  A.RsaKeyGenParams.prototype = {};
  A.RsaHashedKeyGenParams.prototype = {};
  A.RsaKeyAlgorithm.prototype = {};
  A.RsaHashedKeyAlgorithm.prototype = {};
  A.RsaHashedImportParams.prototype = {};
  A.RsaPssParams.prototype = {};
  A.RsaOaepParams.prototype = {};
  A.EcdsaParams.prototype = {};
  A.EcKeyGenParams.prototype = {};
  A.EcKeyAlgorithm.prototype = {};
  A.EcKeyImportParams.prototype = {};
  A.EcdhKeyDeriveParams.prototype = {};
  A.AesCtrParams.prototype = {};
  A.AesKeyAlgorithm.prototype = {};
  A.AesKeyGenParams.prototype = {};
  A.AesDerivedKeyParams.prototype = {};
  A.AesCbcParams.prototype = {};
  A.AesGcmParams.prototype = {};
  A.HmacImportParams.prototype = {};
  A.HmacKeyAlgorithm.prototype = {};
  A.HmacKeyGenParams.prototype = {};
  A.HkdfParams.prototype = {};
  A.Pbkdf2Params.prototype = {};
  A.NavigatorAutomationInformation.prototype = {};
  A.WebGLContextAttributes.prototype = {};
  A.WebGLObject.prototype = {};
  A.WebGLBuffer.prototype = {};
  A.WebGLFramebuffer.prototype = {};
  A.WebGLProgram.prototype = {};
  A.WebGLRenderbuffer.prototype = {};
  A.WebGLShader.prototype = {};
  A.WebGLTexture.prototype = {};
  A.WebGLUniformLocation.prototype = {};
  A.WebGLActiveInfo.prototype = {};
  A.WebGLShaderPrecisionFormat.prototype = {};
  A.WebGLRenderingContextBase.prototype = {};
  A.WebGLRenderingContextOverloads.prototype = {};
  A.WebGLRenderingContext.prototype = {};
  A.WebGLContextEvent.prototype = {};
  A.WebGLContextEventInit.prototype = {};
  A.WebGLQuery.prototype = {};
  A.WebGLSampler.prototype = {};
  A.WebGLSync.prototype = {};
  A.WebGLTransformFeedback.prototype = {};
  A.WebGLVertexArrayObject.prototype = {};
  A.WebGL2RenderingContextBase.prototype = {};
  A.WebGL2RenderingContextOverloads.prototype = {};
  A.WebGL2RenderingContext.prototype = {};
  A.WEBGLBlendEquationAdvancedCoherent.prototype = {};
  A.WEBGLColorBufferFloat.prototype = {};
  A.WEBGLCompressedTextureAstc.prototype = {};
  A.WEBGLCompressedTextureEtc.prototype = {};
  A.WEBGLCompressedTextureEtc1.prototype = {};
  A.WEBGLCompressedTexturePvrtc.prototype = {};
  A.WEBGLCompressedTextureS3tc.prototype = {};
  A.WEBGLCompressedTextureS3tcSrgb.prototype = {};
  A.WEBGLDebugRendererInfo.prototype = {};
  A.WEBGLDebugShaders.prototype = {};
  A.WEBGLDepthTexture.prototype = {};
  A.WEBGLDrawBuffers.prototype = {};
  A.WEBGLDrawInstancedBaseVertexBaseInstance.prototype = {};
  A.WEBGLLoseContext.prototype = {};
  A.WEBGLMultiDraw.prototype = {};
  A.WEBGLMultiDrawInstancedBaseVertexBaseInstance.prototype = {};
  A.GPUObjectBase.prototype = {};
  A.GPUObjectDescriptorBase.prototype = {};
  A.GPUSupportedLimits.prototype = {};
  A.GPUSupportedFeatures.prototype = {};
  A.GPUAdapterInfo.prototype = {};
  A.NavigatorGPU.prototype = {};
  A.Gpu.prototype = {};
  A.GPURequestAdapterOptions.prototype = {};
  A.GPUAdapter.prototype = {};
  A.GPUDeviceDescriptor.prototype = {};
  A.GPUDevice.prototype = {};
  A.GPUBuffer.prototype = {};
  A.GPUBufferDescriptor.prototype = {};
  A.GPUBufferUsage.prototype = {};
  A.GPUMapMode.prototype = {};
  A.GPUTexture.prototype = {};
  A.GPUTextureDescriptor.prototype = {};
  A.GPUTextureUsage.prototype = {};
  A.GPUTextureView.prototype = {};
  A.GPUTextureViewDescriptor.prototype = {};
  A.GPUExternalTexture.prototype = {};
  A.GPUExternalTextureDescriptor.prototype = {};
  A.GPUSampler.prototype = {};
  A.GPUSamplerDescriptor.prototype = {};
  A.GPUBindGroupLayout.prototype = {};
  A.GPUBindGroupLayoutDescriptor.prototype = {};
  A.GPUBindGroupLayoutEntry.prototype = {};
  A.GPUShaderStage.prototype = {};
  A.GPUBufferBindingLayout.prototype = {};
  A.GPUSamplerBindingLayout.prototype = {};
  A.GPUTextureBindingLayout.prototype = {};
  A.GPUStorageTextureBindingLayout.prototype = {};
  A.GPUExternalTextureBindingLayout.prototype = {};
  A.GPUBindGroup.prototype = {};
  A.GPUBindGroupDescriptor.prototype = {};
  A.GPUBindGroupEntry.prototype = {};
  A.GPUBufferBinding.prototype = {};
  A.GPUPipelineLayout.prototype = {};
  A.GPUPipelineLayoutDescriptor.prototype = {};
  A.GPUShaderModule.prototype = {};
  A.GPUShaderModuleDescriptor.prototype = {};
  A.GPUShaderModuleCompilationHint.prototype = {};
  A.GPUCompilationMessage.prototype = {};
  A.GPUCompilationInfo.prototype = {};
  A.GPUPipelineError.prototype = {};
  A.GPUPipelineErrorInit.prototype = {};
  A.GPUPipelineDescriptorBase.prototype = {};
  A.GPUPipelineBase.prototype = {};
  A.GPUProgrammableStage.prototype = {};
  A.GPUComputePipeline.prototype = {};
  A.GPUComputePipelineDescriptor.prototype = {};
  A.GPURenderPipeline.prototype = {};
  A.GPURenderPipelineDescriptor.prototype = {};
  A.GPUPrimitiveState.prototype = {};
  A.GPUMultisampleState.prototype = {};
  A.GPUFragmentState.prototype = {};
  A.GPUColorTargetState.prototype = {};
  A.GPUBlendState.prototype = {};
  A.GPUColorWrite.prototype = {};
  A.GPUBlendComponent.prototype = {};
  A.GPUDepthStencilState.prototype = {};
  A.GPUStencilFaceState.prototype = {};
  A.GPUVertexState.prototype = {};
  A.GPUVertexBufferLayout.prototype = {};
  A.GPUVertexAttribute.prototype = {};
  A.GPUImageDataLayout.prototype = {};
  A.GPUImageCopyBuffer.prototype = {};
  A.GPUImageCopyTexture.prototype = {};
  A.GPUImageCopyTextureTagged.prototype = {};
  A.GPUImageCopyExternalImage.prototype = {};
  A.GPUCommandBuffer.prototype = {};
  A.GPUCommandBufferDescriptor.prototype = {};
  A.GPUCommandsMixin.prototype = {};
  A.GPUCommandEncoder.prototype = {};
  A.GPUCommandEncoderDescriptor.prototype = {};
  A.GPUBindingCommandsMixin.prototype = {};
  A.GPUDebugCommandsMixin.prototype = {};
  A.GPUComputePassEncoder.prototype = {};
  A.GPUComputePassTimestampWrite.prototype = {};
  A.GPUComputePassDescriptor.prototype = {};
  A.GPURenderPassEncoder.prototype = {};
  A.GPURenderPassTimestampWrite.prototype = {};
  A.GPURenderPassDescriptor.prototype = {};
  A.GPURenderPassColorAttachment.prototype = {};
  A.GPURenderPassDepthStencilAttachment.prototype = {};
  A.GPURenderPassLayout.prototype = {};
  A.GPURenderCommandsMixin.prototype = {};
  A.GPURenderBundle.prototype = {};
  A.GPURenderBundleDescriptor.prototype = {};
  A.GPURenderBundleEncoder.prototype = {};
  A.GPURenderBundleEncoderDescriptor.prototype = {};
  A.GPUQueueDescriptor.prototype = {};
  A.GPUQueue.prototype = {};
  A.GPUQuerySet.prototype = {};
  A.GPUQuerySetDescriptor.prototype = {};
  A.GPUCanvasContext.prototype = {};
  A.GPUCanvasConfiguration.prototype = {};
  A.GPUDeviceLostInfo.prototype = {};
  A.GPUError.prototype = {};
  A.GPUValidationError.prototype = {};
  A.GPUOutOfMemoryError.prototype = {};
  A.GPUInternalError.prototype = {};
  A.GPUUncapturedErrorEvent.prototype = {};
  A.GPUUncapturedErrorEventInit.prototype = {};
  A.GPUColorDict.prototype = {};
  A.GPUOrigin2DDict.prototype = {};
  A.GPUOrigin3DDict.prototype = {};
  A.GPUExtent3DDict.prototype = {};
  A.Hid.prototype = {};
  A.HIDDeviceRequestOptions.prototype = {};
  A.HIDDeviceFilter.prototype = {};
  A.HIDDevice.prototype = {};
  A.HIDConnectionEvent.prototype = {};
  A.HIDConnectionEventInit.prototype = {};
  A.HIDInputReportEvent.prototype = {};
  A.HIDInputReportEventInit.prototype = {};
  A.HIDCollectionInfo.prototype = {};
  A.HIDReportInfo.prototype = {};
  A.HIDReportItem.prototype = {};
  A.DOMException.prototype = {};
  A.MidiPermissionDescriptor.prototype = {};
  A.MIDIOptions.prototype = {};
  A.MIDIInputMap.prototype = {};
  A.MIDIOutputMap.prototype = {};
  A.MIDIAccess.prototype = {};
  A.MIDIPort.prototype = {};
  A.MIDIInput.prototype = {};
  A.MIDIOutput.prototype = {};
  A.MIDIMessageEvent.prototype = {};
  A.MIDIMessageEventInit.prototype = {};
  A.MIDIConnectionEvent.prototype = {};
  A.MIDIConnectionEventInit.prototype = {};
  A.NavigatorML.prototype = {};
  A.MLContextOptions.prototype = {};
  A.Ml.prototype = {};
  A.MLContext.prototype = {};
  A.MLComputeResult.prototype = {};
  A.MLOperandDescriptor.prototype = {};
  A.MLOperand.prototype = {};
  A.MLActivation.prototype = {};
  A.MLBufferResourceView.prototype = {};
  A.MLGraphBuilder.prototype = {};
  A.MLBatchNormalizationOptions.prototype = {};
  A.MLClampOptions.prototype = {};
  A.MLConv2dOptions.prototype = {};
  A.MLConvTranspose2dOptions.prototype = {};
  A.MLEluOptions.prototype = {};
  A.MLGemmOptions.prototype = {};
  A.MLGruOptions.prototype = {};
  A.MLGruCellOptions.prototype = {};
  A.MLHardSigmoidOptions.prototype = {};
  A.MLInstanceNormalizationOptions.prototype = {};
  A.MLLeakyReluOptions.prototype = {};
  A.MLLinearOptions.prototype = {};
  A.MLLstmOptions.prototype = {};
  A.MLLstmCellOptions.prototype = {};
  A.MLPadOptions.prototype = {};
  A.MLPool2dOptions.prototype = {};
  A.MLReduceOptions.prototype = {};
  A.MLResample2dOptions.prototype = {};
  A.MLSliceOptions.prototype = {};
  A.MLSoftplusOptions.prototype = {};
  A.MLSplitOptions.prototype = {};
  A.MLSqueezeOptions.prototype = {};
  A.MLTransposeOptions.prototype = {};
  A.MLGraph.prototype = {};
  A.MLCommandEncoder.prototype = {};
  A.RTCConfiguration.prototype = {};
  A.RTCIceServer.prototype = {};
  A.RTCOfferAnswerOptions.prototype = {};
  A.RTCOfferOptions.prototype = {};
  A.RTCAnswerOptions.prototype = {};
  A.RTCPeerConnection.prototype = {};
  A.RTCSessionDescription.prototype = {};
  A.RTCSessionDescriptionInit.prototype = {};
  A.RTCLocalSessionDescriptionInit.prototype = {};
  A.RTCIceCandidate.prototype = {};
  A.RTCIceCandidateInit.prototype = {};
  A.RTCPeerConnectionIceEvent.prototype = {};
  A.RTCPeerConnectionIceEventInit.prototype = {};
  A.RTCPeerConnectionIceErrorEvent.prototype = {};
  A.RTCPeerConnectionIceErrorEventInit.prototype = {};
  A.RTCCertificateExpiration.prototype = {};
  A.RTCCertificate.prototype = {};
  A.RTCRtpTransceiverInit.prototype = {};
  A.RTCRtpSender.prototype = {};
  A.RTCRtpParameters.prototype = {};
  A.RTCRtpSendParameters.prototype = {};
  A.RTCRtpReceiveParameters.prototype = {};
  A.RTCRtpCodingParameters.prototype = {};
  A.RTCRtpEncodingParameters.prototype = {};
  A.RTCRtcpParameters.prototype = {};
  A.RTCRtpHeaderExtensionParameters.prototype = {};
  A.RTCRtpCodecParameters.prototype = {};
  A.RTCRtpCapabilities.prototype = {};
  A.RTCRtpCodecCapability.prototype = {};
  A.RTCRtpHeaderExtensionCapability.prototype = {};
  A.RTCRtpReceiver.prototype = {};
  A.RTCRtpContributingSource.prototype = {};
  A.RTCRtpSynchronizationSource.prototype = {};
  A.RTCRtpTransceiver.prototype = {};
  A.RTCDtlsTransport.prototype = {};
  A.RTCDtlsFingerprint.prototype = {};
  A.RTCIceTransport.prototype = {};
  A.RTCIceParameters.prototype = {};
  A.RTCIceCandidatePair.prototype = {};
  A.RTCTrackEvent.prototype = {};
  A.RTCTrackEventInit.prototype = {};
  A.RTCSctpTransport.prototype = {};
  A.RTCDataChannel.prototype = {};
  A.RTCDataChannelInit.prototype = {};
  A.RTCDataChannelEvent.prototype = {};
  A.RTCDataChannelEventInit.prototype = {};
  A.RTCDTMFSender.prototype = {};
  A.RTCDTMFToneChangeEvent.prototype = {};
  A.RTCDTMFToneChangeEventInit.prototype = {};
  A.RTCStatsReport.prototype = {};
  A.RTCStats.prototype = {};
  A.RTCError.prototype = {};
  A.RTCErrorInit.prototype = {};
  A.RTCErrorEvent.prototype = {};
  A.RTCErrorEventInit.prototype = {};
  A.SFrameTransformOptions.prototype = {};
  A.SFrameTransform.prototype = {};
  A.SFrameTransformErrorEvent.prototype = {};
  A.SFrameTransformErrorEventInit.prototype = {};
  A.RTCEncodedVideoFrameMetadata.prototype = {};
  A.RTCEncodedVideoFrame.prototype = {};
  A.RTCEncodedAudioFrameMetadata.prototype = {};
  A.RTCEncodedAudioFrame.prototype = {};
  A.RTCTransformEvent.prototype = {};
  A.RTCRtpScriptTransformer.prototype = {};
  A.RTCRtpScriptTransform.prototype = {};
  A.RTCIceGatherOptions.prototype = {};
  A.RTCIdentityProviderGlobalScope.prototype = {};
  A.RTCIdentityProviderRegistrar.prototype = {};
  A.RTCIdentityProvider.prototype = {};
  A.RTCIdentityAssertionResult.prototype = {};
  A.RTCIdentityProviderDetails.prototype = {};
  A.RTCIdentityValidationResult.prototype = {};
  A.RTCIdentityProviderOptions.prototype = {};
  A.RTCIdentityAssertion.prototype = {};
  A.RTCRtpStreamStats.prototype = {};
  A.RTCCodecStats.prototype = {};
  A.RTCReceivedRtpStreamStats.prototype = {};
  A.RTCInboundRtpStreamStats.prototype = {};
  A.RTCRemoteInboundRtpStreamStats.prototype = {};
  A.RTCSentRtpStreamStats.prototype = {};
  A.RTCOutboundRtpStreamStats.prototype = {};
  A.RTCRemoteOutboundRtpStreamStats.prototype = {};
  A.RTCMediaSourceStats.prototype = {};
  A.RTCAudioSourceStats.prototype = {};
  A.RTCVideoSourceStats.prototype = {};
  A.RTCAudioPlayoutStats.prototype = {};
  A.RTCPeerConnectionStats.prototype = {};
  A.RTCDataChannelStats.prototype = {};
  A.RTCTransportStats.prototype = {};
  A.RTCIceCandidateStats.prototype = {};
  A.RTCIceCandidatePairStats.prototype = {};
  A.RTCCertificateStats.prototype = {};
  A.WebSocket.prototype = {};
  A.CloseEvent.prototype = {};
  A.CloseEventInit.prototype = {};
  A.WebTransportDatagramDuplexStream.prototype = {};
  A.WebTransport.prototype = {};
  A.WebTransportHash.prototype = {};
  A.WebTransportOptions.prototype = {};
  A.WebTransportCloseInfo.prototype = {};
  A.WebTransportSendStreamOptions.prototype = {};
  A.WebTransportStats.prototype = {};
  A.WebTransportDatagramStats.prototype = {};
  A.WebTransportSendStream.prototype = {};
  A.WebTransportSendStreamStats.prototype = {};
  A.WebTransportReceiveStream.prototype = {};
  A.WebTransportReceiveStreamStats.prototype = {};
  A.WebTransportBidirectionalStream.prototype = {};
  A.WebTransportError.prototype = {};
  A.WebTransportErrorInit.prototype = {};
  A.USBDeviceFilter.prototype = {};
  A.USBDeviceRequestOptions.prototype = {};
  A.Usb.prototype = {};
  A.USBConnectionEventInit.prototype = {};
  A.USBConnectionEvent.prototype = {};
  A.USBInTransferResult.prototype = {};
  A.USBOutTransferResult.prototype = {};
  A.USBIsochronousInTransferPacket.prototype = {};
  A.USBIsochronousInTransferResult.prototype = {};
  A.USBIsochronousOutTransferPacket.prototype = {};
  A.USBIsochronousOutTransferResult.prototype = {};
  A.USBDevice.prototype = {};
  A.USBControlTransferParameters.prototype = {};
  A.USBConfiguration.prototype = {};
  A.USBInterface.prototype = {};
  A.USBAlternateInterface.prototype = {};
  A.USBEndpoint.prototype = {};
  A.USBPermissionDescriptor.prototype = {};
  A.AllowedUSBDevice.prototype = {};
  A.USBPermissionStorage.prototype = {};
  A.USBPermissionResult.prototype = {};
  A.VTTCue.prototype = {};
  A.VTTRegion.prototype = {};
  A.XRSystem.prototype = {};
  A.XRSessionInit.prototype = {};
  A.XRSession.prototype = {};
  A.XRRenderStateInit.prototype = {};
  A.XRRenderState.prototype = {};
  A.XRFrame.prototype = {};
  A.XRSpace.prototype = {};
  A.XRReferenceSpace.prototype = {};
  A.XRBoundedReferenceSpace.prototype = {};
  A.XRView.prototype = {};
  A.XRViewport.prototype = {};
  A.XRRigidTransform.prototype = {};
  A.XRPose.prototype = {};
  A.XRViewerPose.prototype = {};
  A.XRInputSource.prototype = {};
  A.XRInputSourceArray.prototype = {};
  A.XRLayer.prototype = {};
  A.XRWebGLLayerInit.prototype = {};
  A.XRWebGLLayer.prototype = {};
  A.XRSessionEvent.prototype = {};
  A.XRSessionEventInit.prototype = {};
  A.XRInputSourceEvent.prototype = {};
  A.XRInputSourceEventInit.prototype = {};
  A.XRInputSourcesChangeEvent.prototype = {};
  A.XRInputSourcesChangeEventInit.prototype = {};
  A.XRReferenceSpaceEvent.prototype = {};
  A.XRReferenceSpaceEventInit.prototype = {};
  A.XRSessionSupportedPermissionDescriptor.prototype = {};
  A.XRPermissionDescriptor.prototype = {};
  A.XRPermissionStatus.prototype = {};
  A.XRDepthStateInit.prototype = {};
  A.XRDepthInformation.prototype = {};
  A.XRCPUDepthInformation.prototype = {};
  A.XRWebGLDepthInformation.prototype = {};
  A.XRDOMOverlayInit.prototype = {};
  A.XRDOMOverlayState.prototype = {};
  A.XRHand.prototype = {};
  A.XRJointSpace.prototype = {};
  A.XRJointPose.prototype = {};
  A.XRHitTestOptionsInit.prototype = {};
  A.XRTransientInputHitTestOptionsInit.prototype = {};
  A.XRHitTestSource.prototype = {};
  A.XRTransientInputHitTestSource.prototype = {};
  A.XRHitTestResult.prototype = {};
  A.XRTransientInputHitTestResult.prototype = {};
  A.XRRayDirectionInit.prototype = {};
  A.XRRay.prototype = {};
  A.XRLightProbe.prototype = {};
  A.XRLightEstimate.prototype = {};
  A.XRLightProbeInit.prototype = {};
  A.XRCompositionLayer.prototype = {};
  A.XRProjectionLayer.prototype = {};
  A.XRQuadLayer.prototype = {};
  A.XRCylinderLayer.prototype = {};
  A.XREquirectLayer.prototype = {};
  A.XRCubeLayer.prototype = {};
  A.XRSubImage.prototype = {};
  A.XRWebGLSubImage.prototype = {};
  A.XRProjectionLayerInit.prototype = {};
  A.XRLayerInit.prototype = {};
  A.XRQuadLayerInit.prototype = {};
  A.XRCylinderLayerInit.prototype = {};
  A.XREquirectLayerInit.prototype = {};
  A.XRCubeLayerInit.prototype = {};
  A.XRWebGLBinding.prototype = {};
  A.XRMediaLayerInit.prototype = {};
  A.XRMediaQuadLayerInit.prototype = {};
  A.XRMediaCylinderLayerInit.prototype = {};
  A.XRMediaEquirectLayerInit.prototype = {};
  A.XRMediaBinding.prototype = {};
  A.XRLayerEvent.prototype = {};
  A.XRLayerEventInit.prototype = {};
  A.WindowControlsOverlay.prototype = {};
  A.WindowControlsOverlayGeometryChangeEvent.prototype = {};
  A.WindowControlsOverlayGeometryChangeEventInit.prototype = {};
  A.ScreenDetails.prototype = {};
  A.ScreenDetailed.prototype = {};
  A.XMLHttpRequestEventTarget.prototype = {};
  A.XMLHttpRequestUpload.prototype = {};
  A.XMLHttpRequest.prototype = {};
  A.FormData.prototype = {};
  A.ProgressEvent.prototype = {};
  A.ProgressEventInit.prototype = {};
  A.JsArray.prototype = {};
  A.JSObject.prototype = {};
  A.JsMap.prototype = {};
  A.IteratorItem.prototype = {};
  A.JsIterator.prototype = {};
  A.Number.prototype = {};
  A.Reflect.prototype = {};
  A.Promise.prototype = {};
  A.futureToPromise_closure.prototype = {
    call$2(resolve, reject) {
      this.future.then$1$2$onError(0, this.T._eval$1("~(0)")._as(resolve), type$.Function._as(reject), type$.void);
    },
    $signature() {
      return this.T._eval$1("~(~(0),Function)");
    }
  };
  A.JavaScriptObject0.prototype = {};
  A.Request.prototype = {};
  A.Response.prototype = {};
  A.VercelEdge.prototype = {
    VercelEdge$1$fetch(fetch) {
      self.__dartFetchHandler = A.allowInterop(new A.VercelEdge_closure(this), type$.Promise_JavaScriptObject_Function_JavaScriptObject);
    }
  };
  A.VercelEdge_closure.prototype = {
    call$1(request) {
      var t1 = type$.JavaScriptObject;
      return A.futureToPromise(A.Future_Future(new A.VercelEdge__closure(this.$this, t1._as(request)), t1), t1);
    },
    $signature: 17
  };
  A.VercelEdge__closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.$this.fetch.call$1(new A.Request($async$self.request)), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result._delegate;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 18
  };
  A.main_closure.prototype = {
    call$1(request) {
      var t1 = type$.JavaScriptObject,
        t2 = A.convertBody("Hello, you're visiting!!! from " + A.S(A._asStringQ(t1._as(request._request$_delegate.headers).get("x-vercel-ip-city")))),
        t3 = type$.dynamic;
      return new A.Response(t1._as(new self.Response(t2, type$.nullable_JavaScriptObject._as(A._convertDataTree(A.LinkedHashMap_LinkedHashMap$_empty(t3, t3))))));
    },
    $signature: 19
  };
  (function aliases() {
    var _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
  })();
  (function installTearOffs() {
    var _static_1 = hunkHelpers._static_1,
      _static_0 = hunkHelpers._static_0;
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 1);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 1);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 1);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Error, A.Iterable, A.ListIterator, A.Iterator, A.FixedLengthListMixin, A.Symbol, A.MapView, A.ConstantMap, A.JSInvocationMirror, A.Closure, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A._Required, A.MapMixin, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.Rti, A._FunctionParameters, A._TimerImpl, A._AsyncAwaitCompleter, A.AsyncError, A._FutureListener, A._Future, A._AsyncCallbackEntry, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A.ListMixin, A._UnmodifiableMapMixin, A.Duration, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.Null, A._StringStackTrace, A.StringBuffer, A.Request, A.Response, A.VercelEdge]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeTypedData]);
    _inherit(J.LegacyJavaScriptObject, J.JavaScriptObject);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction, A.Accelerometer, A.AccelerometerSensorOptions, A.LinearAccelerationSensor, A.GravitySensor, A.AccelerometerReadingValues, A.LinearAccelerationReadingValues, A.GravityReadingValues, A.AmbientLightSensor, A.AmbientLightReadingValues, A.XRAnchor, A.JsArray, A.ANGLEInstancedArrays, A.HTMLAttributionSrcElementUtils, A.AudioOutputOptions, A.BackgroundFetchManager, A.BackgroundFetchUIOptions, A.BackgroundFetchOptions, A.BackgroundFetchRegistration, A.BackgroundFetchRecord, A.BackgroundFetchEvent, A.BackgroundFetchEventInit, A.BackgroundFetchUpdateUIEvent, A.SyncManager, A.SyncEvent, A.SyncEventInit, A.NavigatorBadge, A.BatteryManager, A.CaptureHandleConfig, A.CaptureHandle, A.ClipboardEventInit, A.ClipboardEvent, A.ClipboardItem, A.ClipboardItemOptions, A.Clipboard, A.ClipboardPermissionDescriptor, A.CloseWatcher, A.CloseWatcherOptions, A.CompressionStream, A.DecompressionStream, A.PressureObserver, A.PressureRecord, A.PressureObserverOptions, A.Console, A.ContactAddress, A.ContactInfo, A.ContactsSelectOptions, A.ContactsManager, A.ContentDescription, A.ContentIndex, A.ContentIndexEventInit, A.ContentIndexEvent, A.CookieStore, A.CookieStoreGetOptions, A.CookieInit, A.CookieStoreDeleteOptions, A.CookieListItem, A.CookieStoreManager, A.CookieChangeEvent, A.CookieChangeEventInit, A.ExtendableCookieChangeEvent, A.ExtendableCookieChangeEventInit, A.CrashReportBody, A.Credential, A.CredentialUserData, A.CredentialsContainer, A.CredentialData, A.CredentialRequestOptions, A.CredentialCreationOptions, A.PasswordCredential, A.PasswordCredentialData, A.FederatedCredential, A.FederatedCredentialRequestOptions, A.FederatedCredentialInit, A.CSPViolationReportBody, A.SecurityPolicyViolationEvent, A.SecurityPolicyViolationEventInit, A.ScriptingPolicyReportBody, A.AnimationWorkletGlobalScope, A.WorkletAnimationEffect, A.WorkletAnimation, A.WorkletGroupEffect, A.AnimationEvent, A.AnimationEventInit, A.CSSKeyframeRule, A.CSSKeyframesRule, A.CSSAnimation, A.CSSLayerBlockRule, A.CSSLayerStatementRule, A.CSSColorProfileRule, A.CSSConditionRule, A.CSSMediaRule, A.CSSSupportsRule, A.ContentVisibilityAutoStateChangedEvent, A.ContentVisibilityAutoStateChangedEventInit, A.CSSContainerRule, A.CSSCounterStyleRule, A.FontFaceDescriptors, A.FontFace, A.FontFaceFeatures, A.FontFaceVariationAxis, A.FontFaceSetLoadEventInit, A.FontFaceSetLoadEvent, A.FontFaceSet, A.FontFaceSource, A.CSSFontFaceRule, A.CSSFontFeatureValuesRule, A.JsMap, A.CSSFontPaletteValuesRule, A.Highlight, A.LayoutWorkletGlobalScope, A.LayoutOptions, A.LayoutChild, A.LayoutFragment, A.IntrinsicSizes, A.LayoutConstraints, A.LayoutConstraintsOptions, A.ChildBreakToken, A.BreakToken, A.BreakTokenOptions, A.LayoutEdges, A.FragmentResultOptions, A.FragmentResult, A.IntrinsicSizesResultOptions, A.SVGClipPathElement, A.SVGMaskElement, A.FocusableAreasOption, A.SpatialNavigationSearchOptions, A.NavigationEvent, A.NavigationEventInit, A.PaintWorkletGlobalScope, A.PaintRenderingContext2DSettings, A.PaintRenderingContext2D, A.PaintSize, A.CSSParserOptions, A.CSSParserRule, A.CSSParserAtRule, A.CSSParserQualifiedRule, A.CSSParserDeclaration, A.CSSParserValue, A.CSSParserBlock, A.CSSParserFunction, A.PropertyDefinition, A.CSSPropertyRule, A.CSSPseudoElement, A.NamedFlow, A.Region, A.TransitionEvent, A.TransitionEventInit, A.CSSTransition, A.CSSStyleValue, A.StylePropertyMap, A.CSSUnparsedValue, A.CSSVariableReferenceValue, A.CSSKeywordValue, A.CSSNumericType, A.CSSNumericValue, A.CSSUnitValue, A.CSSMathValue, A.CSSMathSum, A.CSSMathProduct, A.CSSMathNegate, A.CSSMathInvert, A.CSSMathMin, A.CSSMathMax, A.CSSMathClamp, A.CSSTransformValue, A.CSSTransformComponent, A.CSSTranslate, A.CSSRotate, A.CSSScale, A.CSSSkew, A.CSSSkewX, A.CSSSkewY, A.CSSPerspective, A.CSSMatrixComponent, A.CSSMatrixComponentOptions, A.CSSImageValue, A.CSSColorValue, A.Cssrgb, A.Csshsl, A.Csshwb, A.CSSLab, A.Csslch, A.CSSOKLab, A.Cssoklch, A.CSSColor, A.ViewTransition, A.MediaList, A.StyleSheet, A.CSSStyleSheet, A.CSSStyleSheetInit, A.StyleSheetList, A.LinkStyle, A.CSSRuleList, A.CSSRule, A.CSSStyleRule, A.CSSImportRule, A.CSSGroupingRule, A.CSSPageRule, A.CSSMarginRule, A.CSSNamespaceRule, A.CSSStyleDeclaration, A.ElementCSSInlineStyle, A.Css, A.ScrollOptions, A.ScrollToOptions, A.MediaQueryList, A.MediaQueryListEvent, A.MediaQueryListEventInit, A.Screen, A.CaretPosition, A.ScrollIntoViewOptions, A.CheckVisibilityOptions, A.BoxQuadOptions, A.ConvertCoordinateOptions, A.GeometryUtils, A.VisualViewport, A.DataCue, A.DeprecationReportBody, A.NavigatorDeviceMemory, A.DevicePosture, A.DigitalGoodsService, A.ItemDetails, A.PurchaseDetails, A.Event, A.EventInit, A.CustomEvent, A.CustomEventInit, A.EventTarget, A.EventListenerOptions, A.AddEventListenerOptions, A.AbortController, A.AbortSignal, A.NonElementParentNode, A.DocumentOrShadowRoot, A.ParentNode, A.NonDocumentTypeChildNode, A.ChildNode, A.Slottable, A.HTMLCollection, A.MutationObserver, A.MutationObserverInit, A.MutationRecord, A.Node, A.GetRootNodeOptions, A.Document, A.XMLDocument, A.ElementCreationOptions, A.DOMImplementation, A.DocumentType, A.DocumentFragment, A.ShadowRoot, A.Element, A.ShadowRootInit, A.NamedNodeMap, A.Attr, A.CharacterData, A.Text, A.CDATASection, A.ProcessingInstruction, A.Comment, A.AbstractRange, A.StaticRangeInit, A.StaticRange, A.Range, A.NodeIterator, A.TreeWalker, A.NodeFilter, A.XPathResult, A.XPathExpression, A.XPathNSResolver, A.XPathEvaluatorBase, A.XPathEvaluator, A.XSLTProcessor, A.XMLSerializer, A.InnerHTML, A.EditContextInit, A.EditContext, A.TextUpdateEventInit, A.TextUpdateEvent, A.TextFormatInit, A.TextFormat, A.TextFormatUpdateEventInit, A.TextFormatUpdateEvent, A.CharacterBoundsUpdateEventInit, A.CharacterBoundsUpdateEvent, A.PerformanceElementTiming, A.TextDecoderCommon, A.TextDecoderOptions, A.TextDecodeOptions, A.TextDecoder, A.TextEncoderCommon, A.TextEncoderEncodeIntoResult, A.TextEncoder, A.TextDecoderStream, A.TextEncoderStream, A.MediaKeySystemConfiguration, A.MediaKeySystemMediaCapability, A.MediaKeySystemAccess, A.MediaKeys, A.MediaKeySession, A.MediaKeyMessageEvent, A.MediaKeyMessageEventInit, A.MediaEncryptedEvent, A.MediaEncryptedEventInit, A.FileSystemEntry, A.FileSystemDirectoryEntry, A.FileSystemFlags, A.FileSystemDirectoryReader, A.FileSystemFileEntry, A.FileSystem, A.EpubReadingSystem, A.PerformanceEventTiming, A.EXTBlendMinmax, A.EXTClipCullDistance, A.EXTColorBufferFloat, A.EXTColorBufferHalfFloat, A.WebGLTimerQueryEXT, A.EXTDisjointTimerQuery, A.EXTDisjointTimerQueryWebgl2, A.EXTFloatBlend, A.EXTFragDepth, A.EXTShaderTextureLod, A.EXTSRGB, A.EXTTextureCompressionBptc, A.EXTTextureCompressionRgtc, A.EXTTextureFilterAnisotropic, A.EXTTextureNorm16, A.ColorSelectionResult, A.ColorSelectionOptions, A.EyeDropper, A.IdentityProviderWellKnown, A.IdentityProviderIcon, A.IdentityProviderBranding, A.IdentityProviderAPIConfig, A.IdentityProviderAccount, A.IdentityProviderAccountList, A.IdentityProviderClientMetadata, A.IdentityProviderToken, A.IdentityCredential, A.IdentityCredentialRequestOptions, A.IdentityProviderConfig, A.IdentityCredentialLogoutRPsRequest, A.IdentityProvider, A.Headers, A.Body, A.Request0, A.RequestInit, A.Response0, A.ResponseInit, A.HMACGetSecretInput, A.HMACGetSecretOutput, A.FileSystemPermissionDescriptor, A.FileSystemHandlePermissionDescriptor, A.FilePickerAcceptType, A.FilePickerOptions, A.OpenFilePickerOptions, A.SaveFilePickerOptions, A.DirectoryPickerOptions, A.Blob, A.BlobPropertyBag, A.File, A.FilePropertyBag, A.FileList, A.FileReader, A.FileReaderSync, A.SVGFilterElement, A.SVGFilterPrimitiveStandardAttributes, A.SVGFEBlendElement, A.SVGFEColorMatrixElement, A.SVGFEComponentTransferElement, A.SVGComponentTransferFunctionElement, A.SVGFEFuncRElement, A.SVGFEFuncGElement, A.SVGFEFuncBElement, A.SVGFEFuncAElement, A.SVGFECompositeElement, A.SVGFEConvolveMatrixElement, A.SVGFEDiffuseLightingElement, A.SVGFEDistantLightElement, A.SVGFEPointLightElement, A.SVGFESpotLightElement, A.SVGFEDisplacementMapElement, A.SVGFEDropShadowElement, A.SVGFEFloodElement, A.SVGFEGaussianBlurElement, A.SVGFEImageElement, A.SVGFEMergeElement, A.SVGFEMergeNodeElement, A.SVGFEMorphologyElement, A.SVGFEOffsetElement, A.SVGFESpecularLightingElement, A.SVGFETileElement, A.SVGFETurbulenceElement, A.FontMetrics, A.Baseline, A.Font, A.FileSystemHandle, A.FileSystemCreateWritableOptions, A.FileSystemFileHandle, A.FileSystemGetFileOptions, A.FileSystemGetDirectoryOptions, A.FileSystemRemoveOptions, A.FileSystemDirectoryHandle, A.WriteParams, A.FileSystemWritableFileStream, A.FileSystemReadWriteOptions, A.FileSystemSyncAccessHandle, A.FullscreenOptions, A.Gamepad, A.GamepadButton, A.GamepadEvent, A.GamepadEventInit, A.GamepadHapticActuator, A.GamepadEffectParameters, A.GamepadPose, A.GamepadTouch, A.Sensor, A.SensorOptions, A.SensorErrorEvent, A.SensorErrorEventInit, A.MockSensorConfiguration, A.MockSensor, A.MockSensorReadingValues, A.Geolocation, A.PositionOptions, A.GeolocationPosition, A.GeolocationCoordinates, A.GeolocationPositionError, A.GeolocationSensor, A.GeolocationSensorOptions, A.ReadOptions, A.GeolocationSensorReading, A.GeolocationReadingValues, A.DOMPointReadOnly, A.DOMPoint, A.DOMPointInit, A.DOMRectReadOnly, A.DOMRect, A.DOMRectInit, A.DOMRectList, A.DOMQuad, A.DOMQuadInit, A.DOMMatrixReadOnly, A.DOMMatrix, A.DOMMatrix2DInit, A.DOMMatrixInit, A.RelatedApplication, A.Gyroscope, A.GyroscopeSensorOptions, A.GyroscopeReadingValues, A.Performance, A.HTMLAllCollection, A.HTMLFormControlsCollection, A.RadioNodeList, A.HTMLOptionsCollection, A.DOMStringList, A.HTMLElement, A.HTMLUnknownElement, A.HTMLOrSVGElement, A.DOMStringMap, A.HTMLHtmlElement, A.HTMLHeadElement, A.HTMLTitleElement, A.HTMLBaseElement, A.HTMLLinkElement, A.HTMLMetaElement, A.HTMLStyleElement, A.HTMLBodyElement, A.HTMLHeadingElement, A.HTMLParagraphElement, A.HTMLHRElement, A.HTMLPreElement, A.HTMLQuoteElement, A.HTMLOListElement, A.HTMLUListElement, A.HTMLMenuElement, A.HTMLLIElement, A.HTMLDListElement, A.HTMLDivElement, A.HTMLAnchorElement, A.HTMLDataElement, A.HTMLTimeElement, A.HTMLSpanElement, A.HTMLBRElement, A.HTMLHyperlinkElementUtils, A.HTMLModElement, A.HTMLPictureElement, A.HTMLSourceElement, A.HTMLImageElement, A.HTMLIFrameElement, A.HTMLEmbedElement, A.HTMLObjectElement, A.HTMLVideoElement, A.HTMLAudioElement, A.HTMLTrackElement, A.HTMLMediaElement, A.MediaError, A.AudioTrackList, A.AudioTrack, A.VideoTrackList, A.VideoTrack, A.TextTrackList, A.TextTrack, A.TextTrackCueList, A.TextTrackCue, A.TimeRanges, A.TrackEvent, A.TrackEventInit, A.HTMLMapElement, A.HTMLAreaElement, A.HTMLTableElement, A.HTMLTableCaptionElement, A.HTMLTableColElement, A.HTMLTableSectionElement, A.HTMLTableRowElement, A.HTMLTableCellElement, A.HTMLFormElement, A.HTMLLabelElement, A.HTMLInputElement, A.HTMLButtonElement, A.HTMLSelectElement, A.HTMLDataListElement, A.HTMLOptGroupElement, A.HTMLOptionElement, A.HTMLTextAreaElement, A.HTMLOutputElement, A.HTMLProgressElement, A.HTMLMeterElement, A.HTMLFieldSetElement, A.HTMLLegendElement, A.ValidityState, A.SubmitEvent, A.SubmitEventInit, A.FormDataEvent, A.FormDataEventInit, A.HTMLDetailsElement, A.HTMLDialogElement, A.HTMLScriptElement, A.HTMLTemplateElement, A.HTMLSlotElement, A.AssignedNodesOptions, A.HTMLCanvasElement, A.CanvasRenderingContext2DSettings, A.CanvasRenderingContext2D, A.CanvasState, A.CanvasTransform, A.CanvasCompositing, A.CanvasImageSmoothing, A.CanvasFillStrokeStyles, A.CanvasShadowStyles, A.CanvasFilters, A.CanvasRect, A.CanvasDrawPath, A.CanvasUserInterface, A.CanvasText, A.CanvasDrawImage, A.CanvasImageData, A.CanvasPathDrawingStyles, A.CanvasTextDrawingStyles, A.CanvasPath, A.CanvasGradient, A.CanvasPattern, A.TextMetrics, A.ImageDataSettings, A.ImageData, A.Path2D, A.ImageBitmapRenderingContext, A.ImageBitmapRenderingContextSettings, A.ImageEncodeOptions, A.OffscreenCanvas, A.OffscreenCanvasRenderingContext2D, A.CustomElementRegistry, A.ElementDefinitionOptions, A.ElementInternals, A.ValidityStateFlags, A.UserActivation, A.FocusOptions, A.ElementContentEditable, A.DataTransfer, A.DataTransferItemList, A.DataTransferItem, A.DragEvent, A.DragEventInit, A.Window, A.WindowPostMessageOptions, A.BarProp, A.Location, A.History, A.PopStateEvent, A.PopStateEventInit, A.HashChangeEvent, A.HashChangeEventInit, A.PageTransitionEvent, A.PageTransitionEventInit, A.BeforeUnloadEvent, A.ErrorEvent, A.ErrorEventInit, A.PromiseRejectionEvent, A.PromiseRejectionEventInit, A.GlobalEventHandlers, A.WindowEventHandlers, A.WindowOrWorkerGlobalScope, A.DOMParser, A.Navigator, A.NavigatorID, A.NavigatorLanguage, A.NavigatorOnLine, A.NavigatorContentUtils, A.NavigatorCookies, A.NavigatorPlugins, A.PluginArray, A.MimeTypeArray, A.Plugin, A.MimeType, A.ImageBitmap, A.ImageBitmapOptions, A.AnimationFrameProvider, A.MessageEvent, A.MessageEventInit, A.EventSource, A.EventSourceInit, A.MessageChannel, A.MessagePort, A.StructuredSerializeOptions, A.BroadcastChannel, A.WorkerGlobalScope, A.DedicatedWorkerGlobalScope, A.SharedWorkerGlobalScope, A.AbstractWorker, A.Worker, A.WorkerOptions, A.SharedWorker, A.NavigatorConcurrentHardware, A.WorkerNavigator, A.WorkerLocation, A.WorkletGlobalScope, A.Worklet, A.WorkletOptions, A.Storage, A.WindowSessionStorage, A.WindowLocalStorage, A.StorageEvent, A.StorageEventInit, A.HTMLMarqueeElement, A.HTMLFrameSetElement, A.HTMLFrameElement, A.HTMLDirectoryElement, A.HTMLFontElement, A.HTMLParamElement, A.External, A.IdleOptions, A.IdleDetector, A.ImageCapture, A.PhotoCapabilities, A.PhotoSettings, A.MediaSettingsRange, A.ConstrainPoint2DParameters, A.Point2D, A.ImageResource, A.IDBRequest, A.IDBOpenDBRequest, A.IDBVersionChangeEvent, A.IDBVersionChangeEventInit, A.IDBFactory, A.IDBDatabaseInfo, A.IDBDatabase, A.IDBTransactionOptions, A.IDBObjectStoreParameters, A.IDBObjectStore, A.IDBIndexParameters, A.IDBIndex, A.IDBKeyRange, A.IDBCursor, A.IDBCursorWithValue, A.IDBTransaction, A.Ink, A.InkPresenterParam, A.InkPresenter, A.InkTrailStyle, A.InputDeviceCapabilities, A.InputDeviceCapabilitiesInit, A.IntersectionObserver, A.IntersectionObserverEntry, A.IntersectionObserverEntryInit, A.IntersectionObserverInit, A.InterventionReportBody, A.IsInputPendingOptions, A.Scheduling, A.Profiler, A.ProfilerTrace, A.ProfilerSample, A.ProfilerStack, A.ProfilerFrame, A.ProfilerInitOptions, A.JsonLd, A.JsonLdProcessor, A.RdfDataset, A.RdfGraph, A.RdfTriple, A.RdfLiteral, A.JsonLdOptions, A.LoadDocumentOptions, A.RemoteDocument, A.JsonLdError, A.JsonLdFramingError, A.Keyboard, A.KHRParallelShaderCompile, A.LargestContentfulPaint, A.LayoutShift, A.LayoutShiftAttribution, A.QueryOptions, A.FontData, A.PerformanceLongTaskTiming, A.TaskAttributionTiming, A.Magnetometer, A.MagnetometerSensorOptions, A.UncalibratedMagnetometer, A.MagnetometerReadingValues, A.UncalibratedMagnetometerReadingValues, A.BeforeInstallPromptEvent, A.PromptResponseObject, A.MathMLElement, A.MediaConfiguration, A.MediaDecodingConfiguration, A.MediaEncodingConfiguration, A.VideoConfiguration, A.AudioConfiguration, A.MediaCapabilitiesKeySystemConfiguration, A.KeySystemTrackConfiguration, A.MediaCapabilitiesInfo, A.MediaCapabilitiesDecodingInfo, A.MediaCapabilitiesEncodingInfo, A.MediaCapabilities, A.VideoPlaybackQuality, A.MediaSource, A.MediaSourceHandle, A.SourceBuffer, A.SourceBufferList, A.MockCapturePromptResultConfiguration, A.MockCaptureDeviceConfiguration, A.MockCameraConfiguration, A.MockMicrophoneConfiguration, A.CanvasCaptureMediaStreamTrack, A.CaptureActionEvent, A.CaptureActionEventInit, A.CropTarget, A.BrowserCaptureMediaStreamTrack, A.MediaStream, A.MediaStreamTrack, A.MediaTrackSupportedConstraints, A.MediaTrackCapabilities, A.MediaTrackConstraints, A.MediaTrackConstraintSet, A.MediaTrackSettings, A.MediaStreamTrackEvent, A.MediaStreamTrackEventInit, A.OverconstrainedError, A.MediaDevices, A.MediaDeviceInfo, A.InputDeviceInfo, A.MediaStreamConstraints, A.DoubleRange, A.ConstrainDoubleRange, A.ULongRange, A.ConstrainULongRange, A.ConstrainBooleanParameters, A.ConstrainDOMStringParameters, A.DevicePermissionDescriptor, A.CameraDevicePermissionDescriptor, A.MediaStreamTrackProcessor, A.MediaStreamTrackProcessorInit, A.VideoTrackGenerator, A.ViewportMediaStreamConstraints, A.MediaSession, A.MediaMetadata, A.MediaMetadataInit, A.MediaImage, A.MediaPositionState, A.MediaSessionActionDetails, A.MediaRecorder, A.MediaRecorderOptions, A.BlobEvent, A.BlobEventInit, A.HTMLModelElement, A.Navigation, A.NavigationUpdateCurrentEntryOptions, A.NavigationOptions, A.NavigationNavigateOptions, A.NavigationReloadOptions, A.NavigationResult, A.NavigationCurrentEntryChangeEvent, A.NavigationCurrentEntryChangeEventInit, A.NavigationTransition, A.NavigateEvent, A.NavigateEventInit, A.NavigationInterceptOptions, A.NavigationDestination, A.NavigationHistoryEntry, A.PerformanceNavigationTiming, A.PerformanceTiming, A.PerformanceNavigation, A.NavigatorNetworkInformation, A.NetworkInformation, A.Notification, A.NotificationOptions, A.NotificationAction, A.GetNotificationOptions, A.NotificationEvent, A.NotificationEventInit, A.OESDrawBuffersIndexed, A.OESElementIndexUint, A.OESFboRenderMipmap, A.OESStandardDerivatives, A.OESTextureFloat, A.OESTextureFloatLinear, A.OESTextureHalfFloat, A.OESTextureHalfFloatLinear, A.WebGLVertexArrayObjectOES, A.OESVertexArrayObject, A.DeviceOrientationEvent, A.DeviceOrientationEventInit, A.DeviceMotionEventAcceleration, A.DeviceMotionEventRotationRate, A.DeviceMotionEvent, A.DeviceMotionEventAccelerationInit, A.DeviceMotionEventRotationRateInit, A.DeviceMotionEventInit, A.OrientationSensor, A.OrientationSensorOptions, A.AbsoluteOrientationSensor, A.RelativeOrientationSensor, A.AbsoluteOrientationReadingValues, A.RelativeOrientationReadingValues, A.OVRMultiview2, A.PerformancePaintTiming, A.PaymentManager, A.PaymentInstruments, A.PaymentInstrument, A.ImageObject, A.CanMakePaymentEvent, A.PaymentRequestDetailsUpdate, A.PaymentRequestEvent, A.PaymentRequestEventInit, A.PaymentHandlerResponse, A.AddressInit, A.PaymentOptions, A.PaymentShippingOption, A.AddressErrors, A.PaymentRequest, A.PaymentMethodData, A.PaymentCurrencyAmount, A.PaymentDetailsBase, A.PaymentDetailsInit, A.PaymentDetailsUpdate, A.PaymentDetailsModifier, A.PaymentItem, A.PaymentCompleteDetails, A.PaymentResponse, A.PaymentValidationErrors, A.PaymentMethodChangeEvent, A.PaymentMethodChangeEventInit, A.PaymentRequestUpdateEvent, A.PaymentRequestUpdateEventInit, A.MemoryMeasurement, A.MemoryBreakdownEntry, A.MemoryAttribution, A.MemoryAttributionContainer, A.PerformanceEntry, A.PerformanceObserver, A.PerformanceObserverCallbackOptions, A.PerformanceObserverInit, A.PerformanceObserverEntryList, A.PeriodicSyncManager, A.BackgroundSyncOptions, A.PeriodicSyncEventInit, A.PeriodicSyncEvent, A.Permissions, A.PermissionDescriptor, A.PermissionStatus, A.PermissionSetParameters, A.PermissionsPolicy, A.PermissionsPolicyViolationReportBody, A.PictureInPictureWindow, A.PictureInPictureEvent, A.PictureInPictureEventInit, A.PointerEventInit, A.PointerEvent, A.HTMLPortalElement, A.PortalActivateOptions, A.PortalHost, A.PortalActivateEvent, A.PortalActivateEventInit, A.Presentation, A.PresentationRequest, A.PresentationAvailability, A.PresentationConnectionAvailableEvent, A.PresentationConnectionAvailableEventInit, A.PresentationConnection, A.PresentationConnectionCloseEvent, A.PresentationConnectionCloseEventInit, A.PresentationReceiver, A.PresentationConnectionList, A.ProximitySensor, A.ProximityReadingValues, A.PushPermissionDescriptor, A.PushManager, A.PushSubscriptionOptions, A.PushSubscriptionOptionsInit, A.PushSubscription, A.PushSubscriptionJSON, A.PushMessageData, A.PushEvent, A.PushEventInit, A.PushSubscriptionChangeEvent, A.PushSubscriptionChangeEventInit, A.XRCamera, A.RemotePlayback, A.ReportBody, A.Report, A.ReportingObserver, A.ReportingObserverOptions, A.GenerateTestReportParameters, A.IdleRequestOptions, A.IdleDeadline, A.ResizeObserverOptions, A.ResizeObserver, A.ResizeObserverEntry, A.ResizeObserverSize, A.PerformanceResourceTiming, A.Sanitizer, A.SetHTMLOptions, A.SanitizerConfig, A.NetworkInformationSaveData, A.SchedulerPostTaskOptions, A.Scheduler, A.TaskPriorityChangeEvent, A.TaskPriorityChangeEventInit, A.TaskControllerInit, A.TaskController, A.TaskSignal, A.CaptureController, A.DisplayMediaStreamOptions, A.ScreenOrientation, A.WakeLock, A.WakeLockSentinel, A.ScrollTimelineOptions, A.ScrollTimeline, A.ViewTimelineOptions, A.ViewTimeline, A.FragmentDirective, A.SecurePaymentConfirmationRequest, A.AuthenticationExtensionsPaymentInputs, A.CollectedClientPaymentData, A.CollectedClientAdditionalPaymentData, A.PaymentCredentialInstrument, A.Selection, A.Serial, A.SerialPortRequestOptions, A.SerialPortFilter, A.SerialPort, A.SerialPortInfo, A.SerialOptions, A.SerialOutputSignals, A.SerialInputSignals, A.PerformanceServerTiming, A.ServiceWorker, A.ServiceWorkerRegistration, A.ServiceWorkerContainer, A.RegistrationOptions, A.NavigationPreloadManager, A.NavigationPreloadState, A.ServiceWorkerGlobalScope, A.Client, A.WindowClient, A.Clients, A.ClientQueryOptions, A.ExtendableEvent, A.ExtendableEventInit, A.FetchEvent, A.FetchEventInit, A.ExtendableMessageEvent, A.ExtendableMessageEventInit, A.Cache, A.CacheQueryOptions, A.CacheStorage, A.MultiCacheQueryOptions, A.FaceDetector, A.FaceDetectorOptions, A.DetectedFace, A.Landmark, A.BarcodeDetector, A.BarcodeDetectorOptions, A.DetectedBarcode, A.SpeechRecognition, A.SpeechRecognitionErrorEvent, A.SpeechRecognitionErrorEventInit, A.SpeechRecognitionAlternative, A.SpeechRecognitionResult, A.SpeechRecognitionResultList, A.SpeechRecognitionEvent, A.SpeechRecognitionEventInit, A.SpeechGrammar, A.SpeechGrammarList, A.SpeechSynthesis, A.SpeechSynthesisUtterance, A.SpeechSynthesisEvent, A.SpeechSynthesisEventInit, A.SpeechSynthesisErrorEvent, A.SpeechSynthesisErrorEventInit, A.SpeechSynthesisVoice, A.NavigatorStorage, A.StorageManager, A.StorageEstimate, A.ReadableStream, A.ReadableStreamGetReaderOptions, A.ReadableStreamIteratorOptions, A.ReadableWritablePair, A.StreamPipeOptions, A.UnderlyingSource, A.ReadableStreamGenericReader, A.ReadableStreamDefaultReader, A.ReadableStreamReadResult, A.ReadableStreamBYOBReader, A.ReadableStreamDefaultController, A.ReadableByteStreamController, A.ReadableStreamBYOBRequest, A.WritableStream, A.UnderlyingSink, A.WritableStreamDefaultWriter, A.WritableStreamDefaultController, A.TransformStream, A.Transformer, A.TransformStreamDefaultController, A.QueuingStrategy, A.QueuingStrategyInit, A.ByteLengthQueuingStrategy, A.CountQueuingStrategy, A.GenericTransformStream, A.SVGElement, A.SVGBoundingBoxOptions, A.SVGGraphicsElement, A.SVGGeometryElement, A.SVGNumber, A.SVGLength, A.SVGAngle, A.SVGNumberList, A.SVGLengthList, A.SVGStringList, A.SVGAnimatedBoolean, A.SVGAnimatedEnumeration, A.SVGAnimatedInteger, A.SVGAnimatedNumber, A.SVGAnimatedLength, A.SVGAnimatedAngle, A.SVGAnimatedString, A.SVGAnimatedRect, A.SVGAnimatedNumberList, A.SVGAnimatedLengthList, A.SVGUnitTypes, A.SVGTests, A.SVGFitToViewBox, A.SVGURIReference, A.SVGSVGElement, A.SVGGElement, A.SVGDefsElement, A.SVGDescElement, A.SVGMetadataElement, A.SVGTitleElement, A.SVGSymbolElement, A.SVGUseElement, A.SVGUseElementShadowRoot, A.SVGElementInstance, A.ShadowAnimation, A.SVGSwitchElement, A.GetSVGDocument, A.SVGStyleElement, A.SVGTransform, A.SVGTransformList, A.SVGAnimatedTransformList, A.SVGPreserveAspectRatio, A.SVGAnimatedPreserveAspectRatio, A.SVGPathElement, A.SVGRectElement, A.SVGCircleElement, A.SVGEllipseElement, A.SVGLineElement, A.SVGAnimatedPoints, A.SVGPointList, A.SVGPolylineElement, A.SVGPolygonElement, A.SVGTextContentElement, A.SVGTextPositioningElement, A.SVGTextElement, A.SVGTSpanElement, A.SVGTextPathElement, A.SVGImageElement, A.SVGForeignObjectElement, A.SVGMarkerElement, A.SVGGradientElement, A.SVGLinearGradientElement, A.SVGRadialGradientElement, A.SVGStopElement, A.SVGPatternElement, A.SVGScriptElement, A.SVGAElement, A.SVGViewElement, A.TimeEvent, A.SVGAnimationElement, A.SVGAnimateElement, A.SVGSetElement, A.SVGAnimateMotionElement, A.SVGMPathElement, A.SVGAnimateTransformElement, A.SVGDiscardElement, A.TestUtils, A.TextDetector, A.DetectedText, A.TouchInit, A.Touch, A.TouchList, A.TouchEventInit, A.TouchEvent, A.TrustedHTML, A.TrustedScript, A.TrustedScriptURL, A.TrustedTypePolicyFactory, A.TrustedTypePolicy, A.TrustedTypePolicyOptions, A.NavigatorUABrandVersion, A.UADataValues, A.UALowEntropyJSON, A.NavigatorUAData, A.NavigatorUA, A.UIEvent, A.UIEventInit, A.FocusEvent, A.FocusEventInit, A.MouseEvent, A.MouseEventInit, A.EventModifierInit, A.WheelEvent, A.WheelEventInit, A.InputEvent, A.InputEventInit, A.KeyboardEvent, A.KeyboardEventInit, A.CompositionEvent, A.CompositionEventInit, A.MutationEvent, A.Url, A.URLSearchParams, A.URLPattern, A.URLPatternInit, A.URLPatternOptions, A.URLPatternResult, A.URLPatternComponentResult, A.PerformanceMarkOptions, A.PerformanceMeasureOptions, A.PerformanceMark, A.PerformanceMeasure, A.VideoFrameCallbackMetadata, A.VirtualKeyboard, A.ARIAMixin, A.WebAssemblyInstantiatedSource, A.WebAssembly, A.ModuleExportDescriptor, A.ModuleImportDescriptor, A.Module, A.Instance, A.MemoryDescriptor, A.Memory, A.TableDescriptor, A.Table, A.GlobalDescriptor, A.Global, A.AnimationTimeline, A.DocumentTimelineOptions, A.DocumentTimeline, A.Animation, A.AnimationEffect, A.EffectTiming, A.OptionalEffectTiming, A.ComputedEffectTiming, A.KeyframeEffect, A.BaseComputedKeyframe, A.BasePropertyIndexedKeyframe, A.BaseKeyframe, A.KeyframeEffectOptions, A.Animatable, A.KeyframeAnimationOptions, A.GetAnimationsOptions, A.GroupEffect, A.AnimationNodeList, A.SequenceEffect, A.AnimationPlaybackEvent, A.AnimationPlaybackEventInit, A.LaunchParams, A.LaunchQueue, A.BluetoothDataFilterInit, A.BluetoothManufacturerDataFilterInit, A.BluetoothServiceDataFilterInit, A.BluetoothLEScanFilterInit, A.RequestDeviceOptions, A.Bluetooth, A.BluetoothPermissionDescriptor, A.AllowedBluetoothDevice, A.BluetoothPermissionStorage, A.BluetoothPermissionResult, A.ValueEvent, A.ValueEventInit, A.BluetoothDevice, A.WatchAdvertisementsOptions, A.BluetoothAdvertisingEvent, A.BluetoothAdvertisingEventInit, A.BluetoothRemoteGATTServer, A.BluetoothRemoteGATTService, A.BluetoothRemoteGATTCharacteristic, A.BluetoothCharacteristicProperties, A.BluetoothRemoteGATTDescriptor, A.CharacteristicEventHandlers, A.BluetoothDeviceEventHandlers, A.ServiceEventHandlers, A.BluetoothUUID, A.NavigatorLocks, A.LockManager, A.LockOptions, A.LockManagerSnapshot, A.LockInfo, A.Lock, A.NDEFMessage, A.NDEFMessageInit, A.NDEFRecord, A.NDEFRecordInit, A.NDEFReader, A.NDEFReadingEvent, A.NDEFReadingEventInit, A.NDEFWriteOptions, A.NDEFMakeReadOnlyOptions, A.NDEFScanOptions, A.OTPCredential, A.OTPCredentialRequestOptions, A.ShareData, A.BaseAudioContext, A.AudioContext, A.AudioContextOptions, A.AudioSinkOptions, A.AudioSinkInfo, A.AudioTimestamp, A.AudioRenderCapacity, A.AudioRenderCapacityOptions, A.AudioRenderCapacityEvent, A.AudioRenderCapacityEventInit, A.OfflineAudioContext, A.OfflineAudioContextOptions, A.OfflineAudioCompletionEvent, A.OfflineAudioCompletionEventInit, A.AudioBuffer, A.AudioBufferOptions, A.AudioNode, A.AudioNodeOptions, A.AudioParam, A.AudioScheduledSourceNode, A.AnalyserNode, A.AnalyserOptions, A.AudioBufferSourceNode, A.AudioBufferSourceOptions, A.AudioDestinationNode, A.AudioListener, A.AudioProcessingEvent, A.AudioProcessingEventInit, A.BiquadFilterNode, A.BiquadFilterOptions, A.ChannelMergerNode, A.ChannelMergerOptions, A.ChannelSplitterNode, A.ChannelSplitterOptions, A.ConstantSourceNode, A.ConstantSourceOptions, A.ConvolverNode, A.ConvolverOptions, A.DelayNode, A.DelayOptions, A.DynamicsCompressorNode, A.DynamicsCompressorOptions, A.GainNode, A.GainOptions, A.IIRFilterNode, A.IIRFilterOptions, A.MediaElementAudioSourceNode, A.MediaElementAudioSourceOptions, A.MediaStreamAudioDestinationNode, A.MediaStreamAudioSourceNode, A.MediaStreamAudioSourceOptions, A.MediaStreamTrackAudioSourceNode, A.MediaStreamTrackAudioSourceOptions, A.OscillatorNode, A.OscillatorOptions, A.PannerNode, A.PannerOptions, A.PeriodicWave, A.PeriodicWaveConstraints, A.PeriodicWaveOptions, A.ScriptProcessorNode, A.StereoPannerNode, A.StereoPannerOptions, A.WaveShaperNode, A.WaveShaperOptions, A.AudioWorklet, A.AudioWorkletGlobalScope, A.AudioWorkletNode, A.AudioWorkletNodeOptions, A.AudioWorkletProcessor, A.AudioParamDescriptor, A.PublicKeyCredential, A.RegistrationResponseJSON, A.AuthenticatorAttestationResponseJSON, A.AuthenticationResponseJSON, A.AuthenticatorAssertionResponseJSON, A.AuthenticationExtensionsClientOutputsJSON, A.PublicKeyCredentialCreationOptionsJSON, A.PublicKeyCredentialUserEntityJSON, A.PublicKeyCredentialDescriptorJSON, A.AuthenticationExtensionsClientInputsJSON, A.PublicKeyCredentialRequestOptionsJSON, A.AuthenticatorResponse, A.AuthenticatorAttestationResponse, A.AuthenticatorAssertionResponse, A.PublicKeyCredentialParameters, A.PublicKeyCredentialCreationOptions, A.PublicKeyCredentialEntity, A.PublicKeyCredentialRpEntity, A.PublicKeyCredentialUserEntity, A.AuthenticatorSelectionCriteria, A.PublicKeyCredentialRequestOptions, A.AuthenticationExtensionsClientInputs, A.AuthenticationExtensionsClientOutputs, A.CollectedClientData, A.TokenBinding, A.PublicKeyCredentialDescriptor, A.CredentialPropertiesOutput, A.AuthenticationExtensionsPRFValues, A.AuthenticationExtensionsPRFInputs, A.AuthenticationExtensionsPRFOutputs, A.AuthenticationExtensionsLargeBlobInputs, A.AuthenticationExtensionsLargeBlobOutputs, A.AuthenticationExtensionsDevicePublicKeyInputs, A.AuthenticationExtensionsDevicePublicKeyOutputs, A.AudioDecoder, A.AudioDecoderInit, A.VideoDecoder, A.VideoDecoderInit, A.AudioEncoder, A.AudioEncoderInit, A.EncodedAudioChunkMetadata, A.VideoEncoder, A.VideoEncoderInit, A.EncodedVideoChunkMetadata, A.SvcOutputMetadata, A.AudioDecoderSupport, A.VideoDecoderSupport, A.AudioEncoderSupport, A.VideoEncoderSupport, A.AudioDecoderConfig, A.VideoDecoderConfig, A.AudioEncoderConfig, A.VideoEncoderConfig, A.VideoEncoderEncodeOptions, A.EncodedAudioChunk, A.EncodedAudioChunkInit, A.EncodedVideoChunk, A.EncodedVideoChunkInit, A.AudioData, A.AudioDataInit, A.AudioDataCopyToOptions, A.VideoFrame, A.VideoFrameInit, A.VideoFrameBufferInit, A.VideoFrameMetadata, A.VideoFrameCopyToOptions, A.PlaneLayout, A.VideoColorSpace, A.VideoColorSpaceInit, A.ImageDecoder, A.ImageDecoderInit, A.ImageDecodeOptions, A.ImageDecodeResult, A.ImageTrackList, A.ImageTrack, A.AacEncoderConfig, A.AvcEncoderConfig, A.FlacEncoderConfig, A.HevcEncoderConfig, A.OpusEncoderConfig, A.Ed448Params, A.Crypto, A.Algorithm, A.KeyAlgorithm, A.CryptoKey, A.SubtleCrypto, A.RsaOtherPrimesInfo, A.JsonWebKey, A.CryptoKeyPair, A.RsaKeyGenParams, A.RsaHashedKeyGenParams, A.RsaKeyAlgorithm, A.RsaHashedKeyAlgorithm, A.RsaHashedImportParams, A.RsaPssParams, A.RsaOaepParams, A.EcdsaParams, A.EcKeyGenParams, A.EcKeyAlgorithm, A.EcKeyImportParams, A.EcdhKeyDeriveParams, A.AesCtrParams, A.AesKeyAlgorithm, A.AesKeyGenParams, A.AesDerivedKeyParams, A.AesCbcParams, A.AesGcmParams, A.HmacImportParams, A.HmacKeyAlgorithm, A.HmacKeyGenParams, A.HkdfParams, A.Pbkdf2Params, A.NavigatorAutomationInformation, A.WebGLContextAttributes, A.WebGLObject, A.WebGLBuffer, A.WebGLFramebuffer, A.WebGLProgram, A.WebGLRenderbuffer, A.WebGLShader, A.WebGLTexture, A.WebGLUniformLocation, A.WebGLActiveInfo, A.WebGLShaderPrecisionFormat, A.WebGLRenderingContextBase, A.WebGLRenderingContextOverloads, A.WebGLRenderingContext, A.WebGLContextEvent, A.WebGLContextEventInit, A.WebGLQuery, A.WebGLSampler, A.WebGLSync, A.WebGLTransformFeedback, A.WebGLVertexArrayObject, A.WebGL2RenderingContextBase, A.WebGL2RenderingContextOverloads, A.WebGL2RenderingContext, A.WEBGLBlendEquationAdvancedCoherent, A.WEBGLColorBufferFloat, A.WEBGLCompressedTextureAstc, A.WEBGLCompressedTextureEtc, A.WEBGLCompressedTextureEtc1, A.WEBGLCompressedTexturePvrtc, A.WEBGLCompressedTextureS3tc, A.WEBGLCompressedTextureS3tcSrgb, A.WEBGLDebugRendererInfo, A.WEBGLDebugShaders, A.WEBGLDepthTexture, A.WEBGLDrawBuffers, A.WEBGLDrawInstancedBaseVertexBaseInstance, A.WEBGLLoseContext, A.WEBGLMultiDraw, A.WEBGLMultiDrawInstancedBaseVertexBaseInstance, A.GPUObjectBase, A.GPUObjectDescriptorBase, A.GPUSupportedLimits, A.GPUAdapterInfo, A.NavigatorGPU, A.Gpu, A.GPURequestAdapterOptions, A.GPUAdapter, A.GPUDeviceDescriptor, A.GPUDevice, A.GPUBuffer, A.GPUBufferDescriptor, A.GPUBufferUsage, A.GPUMapMode, A.GPUTexture, A.GPUTextureDescriptor, A.GPUTextureUsage, A.GPUTextureView, A.GPUTextureViewDescriptor, A.GPUExternalTexture, A.GPUExternalTextureDescriptor, A.GPUSampler, A.GPUSamplerDescriptor, A.GPUBindGroupLayout, A.GPUBindGroupLayoutDescriptor, A.GPUBindGroupLayoutEntry, A.GPUShaderStage, A.GPUBufferBindingLayout, A.GPUSamplerBindingLayout, A.GPUTextureBindingLayout, A.GPUStorageTextureBindingLayout, A.GPUExternalTextureBindingLayout, A.GPUBindGroup, A.GPUBindGroupDescriptor, A.GPUBindGroupEntry, A.GPUBufferBinding, A.GPUPipelineLayout, A.GPUPipelineLayoutDescriptor, A.GPUShaderModule, A.GPUShaderModuleDescriptor, A.GPUShaderModuleCompilationHint, A.GPUCompilationMessage, A.GPUCompilationInfo, A.GPUPipelineError, A.GPUPipelineErrorInit, A.GPUPipelineDescriptorBase, A.GPUPipelineBase, A.GPUProgrammableStage, A.GPUComputePipeline, A.GPUComputePipelineDescriptor, A.GPURenderPipeline, A.GPURenderPipelineDescriptor, A.GPUPrimitiveState, A.GPUMultisampleState, A.GPUFragmentState, A.GPUColorTargetState, A.GPUBlendState, A.GPUColorWrite, A.GPUBlendComponent, A.GPUDepthStencilState, A.GPUStencilFaceState, A.GPUVertexState, A.GPUVertexBufferLayout, A.GPUVertexAttribute, A.GPUImageDataLayout, A.GPUImageCopyBuffer, A.GPUImageCopyTexture, A.GPUImageCopyTextureTagged, A.GPUImageCopyExternalImage, A.GPUCommandBuffer, A.GPUCommandBufferDescriptor, A.GPUCommandsMixin, A.GPUCommandEncoder, A.GPUCommandEncoderDescriptor, A.GPUBindingCommandsMixin, A.GPUDebugCommandsMixin, A.GPUComputePassEncoder, A.GPUComputePassTimestampWrite, A.GPUComputePassDescriptor, A.GPURenderPassEncoder, A.GPURenderPassTimestampWrite, A.GPURenderPassDescriptor, A.GPURenderPassColorAttachment, A.GPURenderPassDepthStencilAttachment, A.GPURenderPassLayout, A.GPURenderCommandsMixin, A.GPURenderBundle, A.GPURenderBundleDescriptor, A.GPURenderBundleEncoder, A.GPURenderBundleEncoderDescriptor, A.GPUQueueDescriptor, A.GPUQueue, A.GPUQuerySet, A.GPUQuerySetDescriptor, A.GPUCanvasContext, A.GPUCanvasConfiguration, A.GPUDeviceLostInfo, A.GPUError, A.GPUValidationError, A.GPUOutOfMemoryError, A.GPUInternalError, A.GPUUncapturedErrorEvent, A.GPUUncapturedErrorEventInit, A.GPUColorDict, A.GPUOrigin2DDict, A.GPUOrigin3DDict, A.GPUExtent3DDict, A.Hid, A.HIDDeviceRequestOptions, A.HIDDeviceFilter, A.HIDDevice, A.HIDConnectionEvent, A.HIDConnectionEventInit, A.HIDInputReportEvent, A.HIDInputReportEventInit, A.HIDCollectionInfo, A.HIDReportInfo, A.HIDReportItem, A.DOMException, A.MidiPermissionDescriptor, A.MIDIOptions, A.MIDIAccess, A.MIDIPort, A.MIDIInput, A.MIDIOutput, A.MIDIMessageEvent, A.MIDIMessageEventInit, A.MIDIConnectionEvent, A.MIDIConnectionEventInit, A.NavigatorML, A.MLContextOptions, A.Ml, A.MLContext, A.MLComputeResult, A.MLOperandDescriptor, A.MLOperand, A.MLActivation, A.MLBufferResourceView, A.MLGraphBuilder, A.MLBatchNormalizationOptions, A.MLClampOptions, A.MLConv2dOptions, A.MLConvTranspose2dOptions, A.MLEluOptions, A.MLGemmOptions, A.MLGruOptions, A.MLGruCellOptions, A.MLHardSigmoidOptions, A.MLInstanceNormalizationOptions, A.MLLeakyReluOptions, A.MLLinearOptions, A.MLLstmOptions, A.MLLstmCellOptions, A.MLPadOptions, A.MLPool2dOptions, A.MLReduceOptions, A.MLResample2dOptions, A.MLSliceOptions, A.MLSoftplusOptions, A.MLSplitOptions, A.MLSqueezeOptions, A.MLTransposeOptions, A.MLGraph, A.MLCommandEncoder, A.RTCConfiguration, A.RTCIceServer, A.RTCOfferAnswerOptions, A.RTCOfferOptions, A.RTCAnswerOptions, A.RTCPeerConnection, A.RTCSessionDescription, A.RTCSessionDescriptionInit, A.RTCLocalSessionDescriptionInit, A.RTCIceCandidate, A.RTCIceCandidateInit, A.RTCPeerConnectionIceEvent, A.RTCPeerConnectionIceEventInit, A.RTCPeerConnectionIceErrorEvent, A.RTCPeerConnectionIceErrorEventInit, A.RTCCertificateExpiration, A.RTCCertificate, A.RTCRtpTransceiverInit, A.RTCRtpSender, A.RTCRtpParameters, A.RTCRtpSendParameters, A.RTCRtpReceiveParameters, A.RTCRtpCodingParameters, A.RTCRtpEncodingParameters, A.RTCRtcpParameters, A.RTCRtpHeaderExtensionParameters, A.RTCRtpCodecParameters, A.RTCRtpCapabilities, A.RTCRtpCodecCapability, A.RTCRtpHeaderExtensionCapability, A.RTCRtpReceiver, A.RTCRtpContributingSource, A.RTCRtpSynchronizationSource, A.RTCRtpTransceiver, A.RTCDtlsTransport, A.RTCDtlsFingerprint, A.RTCIceTransport, A.RTCIceParameters, A.RTCIceCandidatePair, A.RTCTrackEvent, A.RTCTrackEventInit, A.RTCSctpTransport, A.RTCDataChannel, A.RTCDataChannelInit, A.RTCDataChannelEvent, A.RTCDataChannelEventInit, A.RTCDTMFSender, A.RTCDTMFToneChangeEvent, A.RTCDTMFToneChangeEventInit, A.RTCStats, A.RTCError, A.RTCErrorInit, A.RTCErrorEvent, A.RTCErrorEventInit, A.SFrameTransformOptions, A.SFrameTransform, A.SFrameTransformErrorEvent, A.SFrameTransformErrorEventInit, A.RTCEncodedVideoFrameMetadata, A.RTCEncodedVideoFrame, A.RTCEncodedAudioFrameMetadata, A.RTCEncodedAudioFrame, A.RTCTransformEvent, A.RTCRtpScriptTransformer, A.RTCRtpScriptTransform, A.RTCIceGatherOptions, A.RTCIdentityProviderGlobalScope, A.RTCIdentityProviderRegistrar, A.RTCIdentityProvider, A.RTCIdentityAssertionResult, A.RTCIdentityProviderDetails, A.RTCIdentityValidationResult, A.RTCIdentityProviderOptions, A.RTCIdentityAssertion, A.RTCRtpStreamStats, A.RTCCodecStats, A.RTCReceivedRtpStreamStats, A.RTCInboundRtpStreamStats, A.RTCRemoteInboundRtpStreamStats, A.RTCSentRtpStreamStats, A.RTCOutboundRtpStreamStats, A.RTCRemoteOutboundRtpStreamStats, A.RTCMediaSourceStats, A.RTCAudioSourceStats, A.RTCVideoSourceStats, A.RTCAudioPlayoutStats, A.RTCPeerConnectionStats, A.RTCDataChannelStats, A.RTCTransportStats, A.RTCIceCandidateStats, A.RTCIceCandidatePairStats, A.RTCCertificateStats, A.WebSocket, A.CloseEvent, A.CloseEventInit, A.WebTransportDatagramDuplexStream, A.WebTransport, A.WebTransportHash, A.WebTransportOptions, A.WebTransportCloseInfo, A.WebTransportSendStreamOptions, A.WebTransportStats, A.WebTransportDatagramStats, A.WebTransportSendStream, A.WebTransportSendStreamStats, A.WebTransportReceiveStream, A.WebTransportReceiveStreamStats, A.WebTransportBidirectionalStream, A.WebTransportError, A.WebTransportErrorInit, A.USBDeviceFilter, A.USBDeviceRequestOptions, A.Usb, A.USBConnectionEventInit, A.USBConnectionEvent, A.USBInTransferResult, A.USBOutTransferResult, A.USBIsochronousInTransferPacket, A.USBIsochronousInTransferResult, A.USBIsochronousOutTransferPacket, A.USBIsochronousOutTransferResult, A.USBDevice, A.USBControlTransferParameters, A.USBConfiguration, A.USBInterface, A.USBAlternateInterface, A.USBEndpoint, A.USBPermissionDescriptor, A.AllowedUSBDevice, A.USBPermissionStorage, A.USBPermissionResult, A.VTTCue, A.VTTRegion, A.XRSystem, A.XRSessionInit, A.XRSession, A.XRRenderStateInit, A.XRRenderState, A.XRFrame, A.XRSpace, A.XRReferenceSpace, A.XRBoundedReferenceSpace, A.XRView, A.XRViewport, A.XRRigidTransform, A.XRPose, A.XRViewerPose, A.XRInputSource, A.XRLayer, A.XRWebGLLayerInit, A.XRWebGLLayer, A.XRSessionEvent, A.XRSessionEventInit, A.XRInputSourceEvent, A.XRInputSourceEventInit, A.XRInputSourcesChangeEvent, A.XRInputSourcesChangeEventInit, A.XRReferenceSpaceEvent, A.XRReferenceSpaceEventInit, A.XRSessionSupportedPermissionDescriptor, A.XRPermissionDescriptor, A.XRPermissionStatus, A.XRDepthStateInit, A.XRDepthInformation, A.XRCPUDepthInformation, A.XRWebGLDepthInformation, A.XRDOMOverlayInit, A.XRDOMOverlayState, A.XRJointSpace, A.XRJointPose, A.XRHitTestOptionsInit, A.XRTransientInputHitTestOptionsInit, A.XRHitTestSource, A.XRTransientInputHitTestSource, A.XRHitTestResult, A.XRTransientInputHitTestResult, A.XRRayDirectionInit, A.XRRay, A.XRLightProbe, A.XRLightEstimate, A.XRLightProbeInit, A.XRCompositionLayer, A.XRProjectionLayer, A.XRQuadLayer, A.XRCylinderLayer, A.XREquirectLayer, A.XRCubeLayer, A.XRSubImage, A.XRWebGLSubImage, A.XRProjectionLayerInit, A.XRLayerInit, A.XRQuadLayerInit, A.XRCylinderLayerInit, A.XREquirectLayerInit, A.XRCubeLayerInit, A.XRWebGLBinding, A.XRMediaLayerInit, A.XRMediaQuadLayerInit, A.XRMediaCylinderLayerInit, A.XRMediaEquirectLayerInit, A.XRMediaBinding, A.XRLayerEvent, A.XRLayerEventInit, A.WindowControlsOverlay, A.WindowControlsOverlayGeometryChangeEvent, A.WindowControlsOverlayGeometryChangeEventInit, A.ScreenDetails, A.ScreenDetailed, A.XMLHttpRequestEventTarget, A.XMLHttpRequestUpload, A.XMLHttpRequest, A.FormData, A.ProgressEvent, A.ProgressEventInit, A.JSObject, A.IteratorItem, A.JsIterator, A.Number, A.Reflect, A.Promise, A.JavaScriptObject0]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A._Error, A.AssertionError, A.NullThrownError, A.ArgumentError, A.NoSuchMethodError, A.UnsupportedError, A.UnimplementedError, A.ConcurrentModificationError, A.CyclicInitializationError]);
    _inheritMany(A.Iterable, [A.EfficientLengthIterable, A.MappedIterable, A._ConstantMapKeyIterable]);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.MappedIterator, A.Iterator);
    _inherit(A.MappedListIterable, A.ListIterable);
    _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(A.ConstantMapView, A.UnmodifiableMapView);
    _inherit(A.ConstantStringMap, A.ConstantMap);
    _inheritMany(A.Closure, [A.Closure2Args, A.Closure0Args, A.TearOffClosure, A.initHooks_closure, A.initHooks_closure1, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A._convertDataTree__convert, A.VercelEdge_closure, A.main_closure]);
    _inheritMany(A.Closure2Args, [A.Primitives_functionNoSuchMethod_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A._Future__chainForeignFuture_closure0, A.MapBase_mapToString_closure, A.NoSuchMethodError_toString_closure, A.futureToPromise_closure]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inherit(A.MapBase, A.MapMixin);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._HashMap]);
    _inherit(A.NativeTypedArray, A.NativeTypedData);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A.Closure0Args, [A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A.Future_Future_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__asyncCompleteWithValue_closure, A._Future__chainFuture_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A.VercelEdge__closure]);
    _inherit(A._RootZone, A._Zone);
    _inherit(A._IdentityHashMap, A._HashMap);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inheritMany(A.JsArray, [A.XRAnchorSet, A.FontFaceVariations, A.FontFacePalette, A.FontFacePalettes, A.StylePropertyMapReadOnly, A.CSSNumericArray, A.CustomStateSet, A.NodeList, A.DOMTokenList, A.MediaKeyStatusMap, A.GPUSupportedFeatures, A.XRInputSourceArray, A.XRHand]);
    _inheritMany(A.JsMap, [A.CSSFontFeatureValuesMap, A.HighlightRegistry, A.NamedFlowMap, A.EventCounts, A.KeyboardLayoutMap, A.BluetoothManufacturerDataMap, A.BluetoothServiceDataMap, A.AudioParamMap, A.MIDIInputMap, A.MIDIOutputMap, A.RTCStatsReport]);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "~(~())", "Null(@)", "Null()", "~(String,@)", "@(@)", "@(@,String)", "@(String)", "Null(~())", "~(@)", "Null(@,StackTrace)", "~(int,@)", "Null(Object,StackTrace)", "_Future<@>(@)", "~(Object?,Object?)", "~(Symbol0,@)", "Object?(Object?)", "Promise<1&>(JavaScriptObject)", "Future<JavaScriptObject>()", "Response(Request)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti")
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","Accelerometer":"LegacyJavaScriptObject","AccelerometerSensorOptions":"LegacyJavaScriptObject","LinearAccelerationSensor":"LegacyJavaScriptObject","GravitySensor":"LegacyJavaScriptObject","AccelerometerReadingValues":"LegacyJavaScriptObject","LinearAccelerationReadingValues":"LegacyJavaScriptObject","GravityReadingValues":"LegacyJavaScriptObject","AmbientLightSensor":"LegacyJavaScriptObject","AmbientLightReadingValues":"LegacyJavaScriptObject","XRAnchor":"LegacyJavaScriptObject","XRAnchorSet":"LegacyJavaScriptObject","ANGLEInstancedArrays":"LegacyJavaScriptObject","HTMLAttributionSrcElementUtils":"LegacyJavaScriptObject","AudioOutputOptions":"LegacyJavaScriptObject","BackgroundFetchManager":"LegacyJavaScriptObject","BackgroundFetchUIOptions":"LegacyJavaScriptObject","BackgroundFetchOptions":"LegacyJavaScriptObject","BackgroundFetchRegistration":"LegacyJavaScriptObject","BackgroundFetchRecord":"LegacyJavaScriptObject","BackgroundFetchEvent":"LegacyJavaScriptObject","BackgroundFetchEventInit":"LegacyJavaScriptObject","BackgroundFetchUpdateUIEvent":"LegacyJavaScriptObject","SyncManager":"LegacyJavaScriptObject","SyncEvent":"LegacyJavaScriptObject","SyncEventInit":"LegacyJavaScriptObject","NavigatorBadge":"LegacyJavaScriptObject","BatteryManager":"LegacyJavaScriptObject","CaptureHandleConfig":"LegacyJavaScriptObject","CaptureHandle":"LegacyJavaScriptObject","ClipboardEventInit":"LegacyJavaScriptObject","ClipboardEvent":"LegacyJavaScriptObject","ClipboardItem":"LegacyJavaScriptObject","ClipboardItemOptions":"LegacyJavaScriptObject","Clipboard":"LegacyJavaScriptObject","ClipboardPermissionDescriptor":"LegacyJavaScriptObject","CloseWatcher":"LegacyJavaScriptObject","CloseWatcherOptions":"LegacyJavaScriptObject","CompressionStream":"LegacyJavaScriptObject","DecompressionStream":"LegacyJavaScriptObject","PressureObserver":"LegacyJavaScriptObject","PressureRecord":"LegacyJavaScriptObject","PressureObserverOptions":"LegacyJavaScriptObject","Console":"LegacyJavaScriptObject","ContactAddress":"LegacyJavaScriptObject","ContactInfo":"LegacyJavaScriptObject","ContactsSelectOptions":"LegacyJavaScriptObject","ContactsManager":"LegacyJavaScriptObject","ContentDescription":"LegacyJavaScriptObject","ContentIndex":"LegacyJavaScriptObject","ContentIndexEventInit":"LegacyJavaScriptObject","ContentIndexEvent":"LegacyJavaScriptObject","CookieStore":"LegacyJavaScriptObject","CookieStoreGetOptions":"LegacyJavaScriptObject","CookieInit":"LegacyJavaScriptObject","CookieStoreDeleteOptions":"LegacyJavaScriptObject","CookieListItem":"LegacyJavaScriptObject","CookieStoreManager":"LegacyJavaScriptObject","CookieChangeEvent":"LegacyJavaScriptObject","CookieChangeEventInit":"LegacyJavaScriptObject","ExtendableCookieChangeEvent":"LegacyJavaScriptObject","ExtendableCookieChangeEventInit":"LegacyJavaScriptObject","CrashReportBody":"LegacyJavaScriptObject","Credential":"LegacyJavaScriptObject","CredentialUserData":"LegacyJavaScriptObject","CredentialsContainer":"LegacyJavaScriptObject","CredentialData":"LegacyJavaScriptObject","CredentialRequestOptions":"LegacyJavaScriptObject","CredentialCreationOptions":"LegacyJavaScriptObject","PasswordCredential":"LegacyJavaScriptObject","PasswordCredentialData":"LegacyJavaScriptObject","FederatedCredential":"LegacyJavaScriptObject","FederatedCredentialRequestOptions":"LegacyJavaScriptObject","FederatedCredentialInit":"LegacyJavaScriptObject","CSPViolationReportBody":"LegacyJavaScriptObject","SecurityPolicyViolationEvent":"LegacyJavaScriptObject","SecurityPolicyViolationEventInit":"LegacyJavaScriptObject","ScriptingPolicyReportBody":"LegacyJavaScriptObject","AnimationWorkletGlobalScope":"LegacyJavaScriptObject","WorkletAnimationEffect":"LegacyJavaScriptObject","WorkletAnimation":"LegacyJavaScriptObject","WorkletGroupEffect":"LegacyJavaScriptObject","AnimationEvent":"LegacyJavaScriptObject","AnimationEventInit":"LegacyJavaScriptObject","CSSKeyframeRule":"LegacyJavaScriptObject","CSSKeyframesRule":"LegacyJavaScriptObject","CSSAnimation":"LegacyJavaScriptObject","CSSLayerBlockRule":"LegacyJavaScriptObject","CSSLayerStatementRule":"LegacyJavaScriptObject","CSSColorProfileRule":"LegacyJavaScriptObject","CSSConditionRule":"LegacyJavaScriptObject","CSSMediaRule":"LegacyJavaScriptObject","CSSSupportsRule":"LegacyJavaScriptObject","ContentVisibilityAutoStateChangedEvent":"LegacyJavaScriptObject","ContentVisibilityAutoStateChangedEventInit":"LegacyJavaScriptObject","CSSContainerRule":"LegacyJavaScriptObject","CSSCounterStyleRule":"LegacyJavaScriptObject","FontFaceDescriptors":"LegacyJavaScriptObject","FontFace":"LegacyJavaScriptObject","FontFaceFeatures":"LegacyJavaScriptObject","FontFaceVariationAxis":"LegacyJavaScriptObject","FontFaceVariations":"LegacyJavaScriptObject","FontFacePalette":"LegacyJavaScriptObject","FontFacePalettes":"LegacyJavaScriptObject","FontFaceSetLoadEventInit":"LegacyJavaScriptObject","FontFaceSetLoadEvent":"LegacyJavaScriptObject","FontFaceSet":"LegacyJavaScriptObject","FontFaceSource":"LegacyJavaScriptObject","CSSFontFaceRule":"LegacyJavaScriptObject","CSSFontFeatureValuesRule":"LegacyJavaScriptObject","CSSFontFeatureValuesMap":"LegacyJavaScriptObject","CSSFontPaletteValuesRule":"LegacyJavaScriptObject","Highlight":"LegacyJavaScriptObject","HighlightRegistry":"LegacyJavaScriptObject","LayoutWorkletGlobalScope":"LegacyJavaScriptObject","LayoutOptions":"LegacyJavaScriptObject","LayoutChild":"LegacyJavaScriptObject","LayoutFragment":"LegacyJavaScriptObject","IntrinsicSizes":"LegacyJavaScriptObject","LayoutConstraints":"LegacyJavaScriptObject","LayoutConstraintsOptions":"LegacyJavaScriptObject","ChildBreakToken":"LegacyJavaScriptObject","BreakToken":"LegacyJavaScriptObject","BreakTokenOptions":"LegacyJavaScriptObject","LayoutEdges":"LegacyJavaScriptObject","FragmentResultOptions":"LegacyJavaScriptObject","FragmentResult":"LegacyJavaScriptObject","IntrinsicSizesResultOptions":"LegacyJavaScriptObject","SVGClipPathElement":"LegacyJavaScriptObject","SVGMaskElement":"LegacyJavaScriptObject","FocusableAreasOption":"LegacyJavaScriptObject","SpatialNavigationSearchOptions":"LegacyJavaScriptObject","NavigationEvent":"LegacyJavaScriptObject","NavigationEventInit":"LegacyJavaScriptObject","PaintWorkletGlobalScope":"LegacyJavaScriptObject","PaintRenderingContext2DSettings":"LegacyJavaScriptObject","PaintRenderingContext2D":"LegacyJavaScriptObject","PaintSize":"LegacyJavaScriptObject","CSSParserOptions":"LegacyJavaScriptObject","CSSParserRule":"LegacyJavaScriptObject","CSSParserAtRule":"LegacyJavaScriptObject","CSSParserQualifiedRule":"LegacyJavaScriptObject","CSSParserDeclaration":"LegacyJavaScriptObject","CSSParserValue":"LegacyJavaScriptObject","CSSParserBlock":"LegacyJavaScriptObject","CSSParserFunction":"LegacyJavaScriptObject","PropertyDefinition":"LegacyJavaScriptObject","CSSPropertyRule":"LegacyJavaScriptObject","CSSPseudoElement":"LegacyJavaScriptObject","NamedFlowMap":"LegacyJavaScriptObject","NamedFlow":"LegacyJavaScriptObject","Region":"LegacyJavaScriptObject","TransitionEvent":"LegacyJavaScriptObject","TransitionEventInit":"LegacyJavaScriptObject","CSSTransition":"LegacyJavaScriptObject","CSSStyleValue":"LegacyJavaScriptObject","StylePropertyMapReadOnly":"LegacyJavaScriptObject","StylePropertyMap":"LegacyJavaScriptObject","CSSUnparsedValue":"LegacyJavaScriptObject","CSSVariableReferenceValue":"LegacyJavaScriptObject","CSSKeywordValue":"LegacyJavaScriptObject","CSSNumericType":"LegacyJavaScriptObject","CSSNumericValue":"LegacyJavaScriptObject","CSSUnitValue":"LegacyJavaScriptObject","CSSMathValue":"LegacyJavaScriptObject","CSSMathSum":"LegacyJavaScriptObject","CSSMathProduct":"LegacyJavaScriptObject","CSSMathNegate":"LegacyJavaScriptObject","CSSMathInvert":"LegacyJavaScriptObject","CSSMathMin":"LegacyJavaScriptObject","CSSMathMax":"LegacyJavaScriptObject","CSSMathClamp":"LegacyJavaScriptObject","CSSNumericArray":"LegacyJavaScriptObject","CSSTransformValue":"LegacyJavaScriptObject","CSSTransformComponent":"LegacyJavaScriptObject","CSSTranslate":"LegacyJavaScriptObject","CSSRotate":"LegacyJavaScriptObject","CSSScale":"LegacyJavaScriptObject","CSSSkew":"LegacyJavaScriptObject","CSSSkewX":"LegacyJavaScriptObject","CSSSkewY":"LegacyJavaScriptObject","CSSPerspective":"LegacyJavaScriptObject","CSSMatrixComponent":"LegacyJavaScriptObject","CSSMatrixComponentOptions":"LegacyJavaScriptObject","CSSImageValue":"LegacyJavaScriptObject","CSSColorValue":"LegacyJavaScriptObject","Cssrgb":"LegacyJavaScriptObject","Csshsl":"LegacyJavaScriptObject","Csshwb":"LegacyJavaScriptObject","CSSLab":"LegacyJavaScriptObject","Csslch":"LegacyJavaScriptObject","CSSOKLab":"LegacyJavaScriptObject","Cssoklch":"LegacyJavaScriptObject","CSSColor":"LegacyJavaScriptObject","ViewTransition":"LegacyJavaScriptObject","MediaList":"LegacyJavaScriptObject","StyleSheet":"LegacyJavaScriptObject","CSSStyleSheet":"LegacyJavaScriptObject","CSSStyleSheetInit":"LegacyJavaScriptObject","StyleSheetList":"LegacyJavaScriptObject","LinkStyle":"LegacyJavaScriptObject","CSSRuleList":"LegacyJavaScriptObject","CSSRule":"LegacyJavaScriptObject","CSSStyleRule":"LegacyJavaScriptObject","CSSImportRule":"LegacyJavaScriptObject","CSSGroupingRule":"LegacyJavaScriptObject","CSSPageRule":"LegacyJavaScriptObject","CSSMarginRule":"LegacyJavaScriptObject","CSSNamespaceRule":"LegacyJavaScriptObject","CSSStyleDeclaration":"LegacyJavaScriptObject","ElementCSSInlineStyle":"LegacyJavaScriptObject","Css":"LegacyJavaScriptObject","ScrollOptions":"LegacyJavaScriptObject","ScrollToOptions":"LegacyJavaScriptObject","MediaQueryList":"LegacyJavaScriptObject","MediaQueryListEvent":"LegacyJavaScriptObject","MediaQueryListEventInit":"LegacyJavaScriptObject","Screen":"LegacyJavaScriptObject","CaretPosition":"LegacyJavaScriptObject","ScrollIntoViewOptions":"LegacyJavaScriptObject","CheckVisibilityOptions":"LegacyJavaScriptObject","BoxQuadOptions":"LegacyJavaScriptObject","ConvertCoordinateOptions":"LegacyJavaScriptObject","GeometryUtils":"LegacyJavaScriptObject","VisualViewport":"LegacyJavaScriptObject","CustomStateSet":"LegacyJavaScriptObject","DataCue":"LegacyJavaScriptObject","DeprecationReportBody":"LegacyJavaScriptObject","NavigatorDeviceMemory":"LegacyJavaScriptObject","DevicePosture":"LegacyJavaScriptObject","DigitalGoodsService":"LegacyJavaScriptObject","ItemDetails":"LegacyJavaScriptObject","PurchaseDetails":"LegacyJavaScriptObject","Event":"LegacyJavaScriptObject","EventInit":"LegacyJavaScriptObject","CustomEvent":"LegacyJavaScriptObject","CustomEventInit":"LegacyJavaScriptObject","EventTarget":"LegacyJavaScriptObject","EventListenerOptions":"LegacyJavaScriptObject","AddEventListenerOptions":"LegacyJavaScriptObject","AbortController":"LegacyJavaScriptObject","AbortSignal":"LegacyJavaScriptObject","NonElementParentNode":"LegacyJavaScriptObject","DocumentOrShadowRoot":"LegacyJavaScriptObject","ParentNode":"LegacyJavaScriptObject","NonDocumentTypeChildNode":"LegacyJavaScriptObject","ChildNode":"LegacyJavaScriptObject","Slottable":"LegacyJavaScriptObject","NodeList":"LegacyJavaScriptObject","HTMLCollection":"LegacyJavaScriptObject","MutationObserver":"LegacyJavaScriptObject","MutationObserverInit":"LegacyJavaScriptObject","MutationRecord":"LegacyJavaScriptObject","Node":"LegacyJavaScriptObject","GetRootNodeOptions":"LegacyJavaScriptObject","Document":"LegacyJavaScriptObject","XMLDocument":"LegacyJavaScriptObject","ElementCreationOptions":"LegacyJavaScriptObject","DOMImplementation":"LegacyJavaScriptObject","DocumentType":"LegacyJavaScriptObject","DocumentFragment":"LegacyJavaScriptObject","ShadowRoot":"LegacyJavaScriptObject","Element":"LegacyJavaScriptObject","ShadowRootInit":"LegacyJavaScriptObject","NamedNodeMap":"LegacyJavaScriptObject","Attr":"LegacyJavaScriptObject","CharacterData":"LegacyJavaScriptObject","Text":"LegacyJavaScriptObject","CDATASection":"LegacyJavaScriptObject","ProcessingInstruction":"LegacyJavaScriptObject","Comment":"LegacyJavaScriptObject","AbstractRange":"LegacyJavaScriptObject","StaticRangeInit":"LegacyJavaScriptObject","StaticRange":"LegacyJavaScriptObject","Range":"LegacyJavaScriptObject","NodeIterator":"LegacyJavaScriptObject","TreeWalker":"LegacyJavaScriptObject","NodeFilter":"LegacyJavaScriptObject","DOMTokenList":"LegacyJavaScriptObject","XPathResult":"LegacyJavaScriptObject","XPathExpression":"LegacyJavaScriptObject","XPathNSResolver":"LegacyJavaScriptObject","XPathEvaluatorBase":"LegacyJavaScriptObject","XPathEvaluator":"LegacyJavaScriptObject","XSLTProcessor":"LegacyJavaScriptObject","XMLSerializer":"LegacyJavaScriptObject","InnerHTML":"LegacyJavaScriptObject","EditContextInit":"LegacyJavaScriptObject","EditContext":"LegacyJavaScriptObject","TextUpdateEventInit":"LegacyJavaScriptObject","TextUpdateEvent":"LegacyJavaScriptObject","TextFormatInit":"LegacyJavaScriptObject","TextFormat":"LegacyJavaScriptObject","TextFormatUpdateEventInit":"LegacyJavaScriptObject","TextFormatUpdateEvent":"LegacyJavaScriptObject","CharacterBoundsUpdateEventInit":"LegacyJavaScriptObject","CharacterBoundsUpdateEvent":"LegacyJavaScriptObject","PerformanceElementTiming":"LegacyJavaScriptObject","TextDecoderCommon":"LegacyJavaScriptObject","TextDecoderOptions":"LegacyJavaScriptObject","TextDecodeOptions":"LegacyJavaScriptObject","TextDecoder":"LegacyJavaScriptObject","TextEncoderCommon":"LegacyJavaScriptObject","TextEncoderEncodeIntoResult":"LegacyJavaScriptObject","TextEncoder":"LegacyJavaScriptObject","TextDecoderStream":"LegacyJavaScriptObject","TextEncoderStream":"LegacyJavaScriptObject","MediaKeySystemConfiguration":"LegacyJavaScriptObject","MediaKeySystemMediaCapability":"LegacyJavaScriptObject","MediaKeySystemAccess":"LegacyJavaScriptObject","MediaKeys":"LegacyJavaScriptObject","MediaKeySession":"LegacyJavaScriptObject","MediaKeyStatusMap":"LegacyJavaScriptObject","MediaKeyMessageEvent":"LegacyJavaScriptObject","MediaKeyMessageEventInit":"LegacyJavaScriptObject","MediaEncryptedEvent":"LegacyJavaScriptObject","MediaEncryptedEventInit":"LegacyJavaScriptObject","FileSystemEntry":"LegacyJavaScriptObject","FileSystemDirectoryEntry":"LegacyJavaScriptObject","FileSystemFlags":"LegacyJavaScriptObject","FileSystemDirectoryReader":"LegacyJavaScriptObject","FileSystemFileEntry":"LegacyJavaScriptObject","FileSystem":"LegacyJavaScriptObject","EpubReadingSystem":"LegacyJavaScriptObject","PerformanceEventTiming":"LegacyJavaScriptObject","EventCounts":"LegacyJavaScriptObject","EXTBlendMinmax":"LegacyJavaScriptObject","EXTClipCullDistance":"LegacyJavaScriptObject","EXTColorBufferFloat":"LegacyJavaScriptObject","EXTColorBufferHalfFloat":"LegacyJavaScriptObject","WebGLTimerQueryEXT":"LegacyJavaScriptObject","EXTDisjointTimerQuery":"LegacyJavaScriptObject","EXTDisjointTimerQueryWebgl2":"LegacyJavaScriptObject","EXTFloatBlend":"LegacyJavaScriptObject","EXTFragDepth":"LegacyJavaScriptObject","EXTShaderTextureLod":"LegacyJavaScriptObject","EXTSRGB":"LegacyJavaScriptObject","EXTTextureCompressionBptc":"LegacyJavaScriptObject","EXTTextureCompressionRgtc":"LegacyJavaScriptObject","EXTTextureFilterAnisotropic":"LegacyJavaScriptObject","EXTTextureNorm16":"LegacyJavaScriptObject","ColorSelectionResult":"LegacyJavaScriptObject","ColorSelectionOptions":"LegacyJavaScriptObject","EyeDropper":"LegacyJavaScriptObject","IdentityProviderWellKnown":"LegacyJavaScriptObject","IdentityProviderIcon":"LegacyJavaScriptObject","IdentityProviderBranding":"LegacyJavaScriptObject","IdentityProviderAPIConfig":"LegacyJavaScriptObject","IdentityProviderAccount":"LegacyJavaScriptObject","IdentityProviderAccountList":"LegacyJavaScriptObject","IdentityProviderClientMetadata":"LegacyJavaScriptObject","IdentityProviderToken":"LegacyJavaScriptObject","IdentityCredential":"LegacyJavaScriptObject","IdentityCredentialRequestOptions":"LegacyJavaScriptObject","IdentityProviderConfig":"LegacyJavaScriptObject","IdentityCredentialLogoutRPsRequest":"LegacyJavaScriptObject","IdentityProvider":"LegacyJavaScriptObject","Headers":"LegacyJavaScriptObject","Body":"LegacyJavaScriptObject","Request0":"LegacyJavaScriptObject","RequestInit":"LegacyJavaScriptObject","Response0":"LegacyJavaScriptObject","ResponseInit":"LegacyJavaScriptObject","HMACGetSecretInput":"LegacyJavaScriptObject","HMACGetSecretOutput":"LegacyJavaScriptObject","FileSystemPermissionDescriptor":"LegacyJavaScriptObject","FileSystemHandlePermissionDescriptor":"LegacyJavaScriptObject","FilePickerAcceptType":"LegacyJavaScriptObject","FilePickerOptions":"LegacyJavaScriptObject","OpenFilePickerOptions":"LegacyJavaScriptObject","SaveFilePickerOptions":"LegacyJavaScriptObject","DirectoryPickerOptions":"LegacyJavaScriptObject","Blob":"LegacyJavaScriptObject","BlobPropertyBag":"LegacyJavaScriptObject","File":"LegacyJavaScriptObject","FilePropertyBag":"LegacyJavaScriptObject","FileList":"LegacyJavaScriptObject","FileReader":"LegacyJavaScriptObject","FileReaderSync":"LegacyJavaScriptObject","SVGFilterElement":"LegacyJavaScriptObject","SVGFilterPrimitiveStandardAttributes":"LegacyJavaScriptObject","SVGFEBlendElement":"LegacyJavaScriptObject","SVGFEColorMatrixElement":"LegacyJavaScriptObject","SVGFEComponentTransferElement":"LegacyJavaScriptObject","SVGComponentTransferFunctionElement":"LegacyJavaScriptObject","SVGFEFuncRElement":"LegacyJavaScriptObject","SVGFEFuncGElement":"LegacyJavaScriptObject","SVGFEFuncBElement":"LegacyJavaScriptObject","SVGFEFuncAElement":"LegacyJavaScriptObject","SVGFECompositeElement":"LegacyJavaScriptObject","SVGFEConvolveMatrixElement":"LegacyJavaScriptObject","SVGFEDiffuseLightingElement":"LegacyJavaScriptObject","SVGFEDistantLightElement":"LegacyJavaScriptObject","SVGFEPointLightElement":"LegacyJavaScriptObject","SVGFESpotLightElement":"LegacyJavaScriptObject","SVGFEDisplacementMapElement":"LegacyJavaScriptObject","SVGFEDropShadowElement":"LegacyJavaScriptObject","SVGFEFloodElement":"LegacyJavaScriptObject","SVGFEGaussianBlurElement":"LegacyJavaScriptObject","SVGFEImageElement":"LegacyJavaScriptObject","SVGFEMergeElement":"LegacyJavaScriptObject","SVGFEMergeNodeElement":"LegacyJavaScriptObject","SVGFEMorphologyElement":"LegacyJavaScriptObject","SVGFEOffsetElement":"LegacyJavaScriptObject","SVGFESpecularLightingElement":"LegacyJavaScriptObject","SVGFETileElement":"LegacyJavaScriptObject","SVGFETurbulenceElement":"LegacyJavaScriptObject","FontMetrics":"LegacyJavaScriptObject","Baseline":"LegacyJavaScriptObject","Font":"LegacyJavaScriptObject","FileSystemHandle":"LegacyJavaScriptObject","FileSystemCreateWritableOptions":"LegacyJavaScriptObject","FileSystemFileHandle":"LegacyJavaScriptObject","FileSystemGetFileOptions":"LegacyJavaScriptObject","FileSystemGetDirectoryOptions":"LegacyJavaScriptObject","FileSystemRemoveOptions":"LegacyJavaScriptObject","FileSystemDirectoryHandle":"LegacyJavaScriptObject","WriteParams":"LegacyJavaScriptObject","FileSystemWritableFileStream":"LegacyJavaScriptObject","FileSystemReadWriteOptions":"LegacyJavaScriptObject","FileSystemSyncAccessHandle":"LegacyJavaScriptObject","FullscreenOptions":"LegacyJavaScriptObject","Gamepad":"LegacyJavaScriptObject","GamepadButton":"LegacyJavaScriptObject","GamepadEvent":"LegacyJavaScriptObject","GamepadEventInit":"LegacyJavaScriptObject","GamepadHapticActuator":"LegacyJavaScriptObject","GamepadEffectParameters":"LegacyJavaScriptObject","GamepadPose":"LegacyJavaScriptObject","GamepadTouch":"LegacyJavaScriptObject","Sensor":"LegacyJavaScriptObject","SensorOptions":"LegacyJavaScriptObject","SensorErrorEvent":"LegacyJavaScriptObject","SensorErrorEventInit":"LegacyJavaScriptObject","MockSensorConfiguration":"LegacyJavaScriptObject","MockSensor":"LegacyJavaScriptObject","MockSensorReadingValues":"LegacyJavaScriptObject","Geolocation":"LegacyJavaScriptObject","PositionOptions":"LegacyJavaScriptObject","GeolocationPosition":"LegacyJavaScriptObject","GeolocationCoordinates":"LegacyJavaScriptObject","GeolocationPositionError":"LegacyJavaScriptObject","GeolocationSensor":"LegacyJavaScriptObject","GeolocationSensorOptions":"LegacyJavaScriptObject","ReadOptions":"LegacyJavaScriptObject","GeolocationSensorReading":"LegacyJavaScriptObject","GeolocationReadingValues":"LegacyJavaScriptObject","DOMPointReadOnly":"LegacyJavaScriptObject","DOMPoint":"LegacyJavaScriptObject","DOMPointInit":"LegacyJavaScriptObject","DOMRectReadOnly":"LegacyJavaScriptObject","DOMRect":"LegacyJavaScriptObject","DOMRectInit":"LegacyJavaScriptObject","DOMRectList":"LegacyJavaScriptObject","DOMQuad":"LegacyJavaScriptObject","DOMQuadInit":"LegacyJavaScriptObject","DOMMatrixReadOnly":"LegacyJavaScriptObject","DOMMatrix":"LegacyJavaScriptObject","DOMMatrix2DInit":"LegacyJavaScriptObject","DOMMatrixInit":"LegacyJavaScriptObject","RelatedApplication":"LegacyJavaScriptObject","Gyroscope":"LegacyJavaScriptObject","GyroscopeSensorOptions":"LegacyJavaScriptObject","GyroscopeReadingValues":"LegacyJavaScriptObject","Performance":"LegacyJavaScriptObject","HTMLAllCollection":"LegacyJavaScriptObject","HTMLFormControlsCollection":"LegacyJavaScriptObject","RadioNodeList":"LegacyJavaScriptObject","HTMLOptionsCollection":"LegacyJavaScriptObject","DOMStringList":"LegacyJavaScriptObject","HTMLElement":"LegacyJavaScriptObject","HTMLUnknownElement":"LegacyJavaScriptObject","HTMLOrSVGElement":"LegacyJavaScriptObject","DOMStringMap":"LegacyJavaScriptObject","HTMLHtmlElement":"LegacyJavaScriptObject","HTMLHeadElement":"LegacyJavaScriptObject","HTMLTitleElement":"LegacyJavaScriptObject","HTMLBaseElement":"LegacyJavaScriptObject","HTMLLinkElement":"LegacyJavaScriptObject","HTMLMetaElement":"LegacyJavaScriptObject","HTMLStyleElement":"LegacyJavaScriptObject","HTMLBodyElement":"LegacyJavaScriptObject","HTMLHeadingElement":"LegacyJavaScriptObject","HTMLParagraphElement":"LegacyJavaScriptObject","HTMLHRElement":"LegacyJavaScriptObject","HTMLPreElement":"LegacyJavaScriptObject","HTMLQuoteElement":"LegacyJavaScriptObject","HTMLOListElement":"LegacyJavaScriptObject","HTMLUListElement":"LegacyJavaScriptObject","HTMLMenuElement":"LegacyJavaScriptObject","HTMLLIElement":"LegacyJavaScriptObject","HTMLDListElement":"LegacyJavaScriptObject","HTMLDivElement":"LegacyJavaScriptObject","HTMLAnchorElement":"LegacyJavaScriptObject","HTMLDataElement":"LegacyJavaScriptObject","HTMLTimeElement":"LegacyJavaScriptObject","HTMLSpanElement":"LegacyJavaScriptObject","HTMLBRElement":"LegacyJavaScriptObject","HTMLHyperlinkElementUtils":"LegacyJavaScriptObject","HTMLModElement":"LegacyJavaScriptObject","HTMLPictureElement":"LegacyJavaScriptObject","HTMLSourceElement":"LegacyJavaScriptObject","HTMLImageElement":"LegacyJavaScriptObject","HTMLIFrameElement":"LegacyJavaScriptObject","HTMLEmbedElement":"LegacyJavaScriptObject","HTMLObjectElement":"LegacyJavaScriptObject","HTMLVideoElement":"LegacyJavaScriptObject","HTMLAudioElement":"LegacyJavaScriptObject","HTMLTrackElement":"LegacyJavaScriptObject","HTMLMediaElement":"LegacyJavaScriptObject","MediaError":"LegacyJavaScriptObject","AudioTrackList":"LegacyJavaScriptObject","AudioTrack":"LegacyJavaScriptObject","VideoTrackList":"LegacyJavaScriptObject","VideoTrack":"LegacyJavaScriptObject","TextTrackList":"LegacyJavaScriptObject","TextTrack":"LegacyJavaScriptObject","TextTrackCueList":"LegacyJavaScriptObject","TextTrackCue":"LegacyJavaScriptObject","TimeRanges":"LegacyJavaScriptObject","TrackEvent":"LegacyJavaScriptObject","TrackEventInit":"LegacyJavaScriptObject","HTMLMapElement":"LegacyJavaScriptObject","HTMLAreaElement":"LegacyJavaScriptObject","HTMLTableElement":"LegacyJavaScriptObject","HTMLTableCaptionElement":"LegacyJavaScriptObject","HTMLTableColElement":"LegacyJavaScriptObject","HTMLTableSectionElement":"LegacyJavaScriptObject","HTMLTableRowElement":"LegacyJavaScriptObject","HTMLTableCellElement":"LegacyJavaScriptObject","HTMLFormElement":"LegacyJavaScriptObject","HTMLLabelElement":"LegacyJavaScriptObject","HTMLInputElement":"LegacyJavaScriptObject","HTMLButtonElement":"LegacyJavaScriptObject","HTMLSelectElement":"LegacyJavaScriptObject","HTMLDataListElement":"LegacyJavaScriptObject","HTMLOptGroupElement":"LegacyJavaScriptObject","HTMLOptionElement":"LegacyJavaScriptObject","HTMLTextAreaElement":"LegacyJavaScriptObject","HTMLOutputElement":"LegacyJavaScriptObject","HTMLProgressElement":"LegacyJavaScriptObject","HTMLMeterElement":"LegacyJavaScriptObject","HTMLFieldSetElement":"LegacyJavaScriptObject","HTMLLegendElement":"LegacyJavaScriptObject","ValidityState":"LegacyJavaScriptObject","SubmitEvent":"LegacyJavaScriptObject","SubmitEventInit":"LegacyJavaScriptObject","FormDataEvent":"LegacyJavaScriptObject","FormDataEventInit":"LegacyJavaScriptObject","HTMLDetailsElement":"LegacyJavaScriptObject","HTMLDialogElement":"LegacyJavaScriptObject","HTMLScriptElement":"LegacyJavaScriptObject","HTMLTemplateElement":"LegacyJavaScriptObject","HTMLSlotElement":"LegacyJavaScriptObject","AssignedNodesOptions":"LegacyJavaScriptObject","HTMLCanvasElement":"LegacyJavaScriptObject","CanvasRenderingContext2DSettings":"LegacyJavaScriptObject","CanvasRenderingContext2D":"LegacyJavaScriptObject","CanvasState":"LegacyJavaScriptObject","CanvasTransform":"LegacyJavaScriptObject","CanvasCompositing":"LegacyJavaScriptObject","CanvasImageSmoothing":"LegacyJavaScriptObject","CanvasFillStrokeStyles":"LegacyJavaScriptObject","CanvasShadowStyles":"LegacyJavaScriptObject","CanvasFilters":"LegacyJavaScriptObject","CanvasRect":"LegacyJavaScriptObject","CanvasDrawPath":"LegacyJavaScriptObject","CanvasUserInterface":"LegacyJavaScriptObject","CanvasText":"LegacyJavaScriptObject","CanvasDrawImage":"LegacyJavaScriptObject","CanvasImageData":"LegacyJavaScriptObject","CanvasPathDrawingStyles":"LegacyJavaScriptObject","CanvasTextDrawingStyles":"LegacyJavaScriptObject","CanvasPath":"LegacyJavaScriptObject","CanvasGradient":"LegacyJavaScriptObject","CanvasPattern":"LegacyJavaScriptObject","TextMetrics":"LegacyJavaScriptObject","ImageDataSettings":"LegacyJavaScriptObject","ImageData":"LegacyJavaScriptObject","Path2D":"LegacyJavaScriptObject","ImageBitmapRenderingContext":"LegacyJavaScriptObject","ImageBitmapRenderingContextSettings":"LegacyJavaScriptObject","ImageEncodeOptions":"LegacyJavaScriptObject","OffscreenCanvas":"LegacyJavaScriptObject","OffscreenCanvasRenderingContext2D":"LegacyJavaScriptObject","CustomElementRegistry":"LegacyJavaScriptObject","ElementDefinitionOptions":"LegacyJavaScriptObject","ElementInternals":"LegacyJavaScriptObject","ValidityStateFlags":"LegacyJavaScriptObject","UserActivation":"LegacyJavaScriptObject","FocusOptions":"LegacyJavaScriptObject","ElementContentEditable":"LegacyJavaScriptObject","DataTransfer":"LegacyJavaScriptObject","DataTransferItemList":"LegacyJavaScriptObject","DataTransferItem":"LegacyJavaScriptObject","DragEvent":"LegacyJavaScriptObject","DragEventInit":"LegacyJavaScriptObject","Window":"LegacyJavaScriptObject","WindowPostMessageOptions":"LegacyJavaScriptObject","BarProp":"LegacyJavaScriptObject","Location":"LegacyJavaScriptObject","History":"LegacyJavaScriptObject","PopStateEvent":"LegacyJavaScriptObject","PopStateEventInit":"LegacyJavaScriptObject","HashChangeEvent":"LegacyJavaScriptObject","HashChangeEventInit":"LegacyJavaScriptObject","PageTransitionEvent":"LegacyJavaScriptObject","PageTransitionEventInit":"LegacyJavaScriptObject","BeforeUnloadEvent":"LegacyJavaScriptObject","ErrorEvent":"LegacyJavaScriptObject","ErrorEventInit":"LegacyJavaScriptObject","PromiseRejectionEvent":"LegacyJavaScriptObject","PromiseRejectionEventInit":"LegacyJavaScriptObject","GlobalEventHandlers":"LegacyJavaScriptObject","WindowEventHandlers":"LegacyJavaScriptObject","WindowOrWorkerGlobalScope":"LegacyJavaScriptObject","DOMParser":"LegacyJavaScriptObject","Navigator":"LegacyJavaScriptObject","NavigatorID":"LegacyJavaScriptObject","NavigatorLanguage":"LegacyJavaScriptObject","NavigatorOnLine":"LegacyJavaScriptObject","NavigatorContentUtils":"LegacyJavaScriptObject","NavigatorCookies":"LegacyJavaScriptObject","NavigatorPlugins":"LegacyJavaScriptObject","PluginArray":"LegacyJavaScriptObject","MimeTypeArray":"LegacyJavaScriptObject","Plugin":"LegacyJavaScriptObject","MimeType":"LegacyJavaScriptObject","ImageBitmap":"LegacyJavaScriptObject","ImageBitmapOptions":"LegacyJavaScriptObject","AnimationFrameProvider":"LegacyJavaScriptObject","MessageEvent":"LegacyJavaScriptObject","MessageEventInit":"LegacyJavaScriptObject","EventSource":"LegacyJavaScriptObject","EventSourceInit":"LegacyJavaScriptObject","MessageChannel":"LegacyJavaScriptObject","MessagePort":"LegacyJavaScriptObject","StructuredSerializeOptions":"LegacyJavaScriptObject","BroadcastChannel":"LegacyJavaScriptObject","WorkerGlobalScope":"LegacyJavaScriptObject","DedicatedWorkerGlobalScope":"LegacyJavaScriptObject","SharedWorkerGlobalScope":"LegacyJavaScriptObject","AbstractWorker":"LegacyJavaScriptObject","Worker":"LegacyJavaScriptObject","WorkerOptions":"LegacyJavaScriptObject","SharedWorker":"LegacyJavaScriptObject","NavigatorConcurrentHardware":"LegacyJavaScriptObject","WorkerNavigator":"LegacyJavaScriptObject","WorkerLocation":"LegacyJavaScriptObject","WorkletGlobalScope":"LegacyJavaScriptObject","Worklet":"LegacyJavaScriptObject","WorkletOptions":"LegacyJavaScriptObject","Storage":"LegacyJavaScriptObject","WindowSessionStorage":"LegacyJavaScriptObject","WindowLocalStorage":"LegacyJavaScriptObject","StorageEvent":"LegacyJavaScriptObject","StorageEventInit":"LegacyJavaScriptObject","HTMLMarqueeElement":"LegacyJavaScriptObject","HTMLFrameSetElement":"LegacyJavaScriptObject","HTMLFrameElement":"LegacyJavaScriptObject","HTMLDirectoryElement":"LegacyJavaScriptObject","HTMLFontElement":"LegacyJavaScriptObject","HTMLParamElement":"LegacyJavaScriptObject","External":"LegacyJavaScriptObject","IdleOptions":"LegacyJavaScriptObject","IdleDetector":"LegacyJavaScriptObject","ImageCapture":"LegacyJavaScriptObject","PhotoCapabilities":"LegacyJavaScriptObject","PhotoSettings":"LegacyJavaScriptObject","MediaSettingsRange":"LegacyJavaScriptObject","ConstrainPoint2DParameters":"LegacyJavaScriptObject","Point2D":"LegacyJavaScriptObject","ImageResource":"LegacyJavaScriptObject","IDBRequest":"LegacyJavaScriptObject","IDBOpenDBRequest":"LegacyJavaScriptObject","IDBVersionChangeEvent":"LegacyJavaScriptObject","IDBVersionChangeEventInit":"LegacyJavaScriptObject","IDBFactory":"LegacyJavaScriptObject","IDBDatabaseInfo":"LegacyJavaScriptObject","IDBDatabase":"LegacyJavaScriptObject","IDBTransactionOptions":"LegacyJavaScriptObject","IDBObjectStoreParameters":"LegacyJavaScriptObject","IDBObjectStore":"LegacyJavaScriptObject","IDBIndexParameters":"LegacyJavaScriptObject","IDBIndex":"LegacyJavaScriptObject","IDBKeyRange":"LegacyJavaScriptObject","IDBCursor":"LegacyJavaScriptObject","IDBCursorWithValue":"LegacyJavaScriptObject","IDBTransaction":"LegacyJavaScriptObject","Ink":"LegacyJavaScriptObject","InkPresenterParam":"LegacyJavaScriptObject","InkPresenter":"LegacyJavaScriptObject","InkTrailStyle":"LegacyJavaScriptObject","InputDeviceCapabilities":"LegacyJavaScriptObject","InputDeviceCapabilitiesInit":"LegacyJavaScriptObject","IntersectionObserver":"LegacyJavaScriptObject","IntersectionObserverEntry":"LegacyJavaScriptObject","IntersectionObserverEntryInit":"LegacyJavaScriptObject","IntersectionObserverInit":"LegacyJavaScriptObject","InterventionReportBody":"LegacyJavaScriptObject","IsInputPendingOptions":"LegacyJavaScriptObject","Scheduling":"LegacyJavaScriptObject","Profiler":"LegacyJavaScriptObject","ProfilerTrace":"LegacyJavaScriptObject","ProfilerSample":"LegacyJavaScriptObject","ProfilerStack":"LegacyJavaScriptObject","ProfilerFrame":"LegacyJavaScriptObject","ProfilerInitOptions":"LegacyJavaScriptObject","JsonLd":"LegacyJavaScriptObject","JsonLdProcessor":"LegacyJavaScriptObject","RdfDataset":"LegacyJavaScriptObject","RdfGraph":"LegacyJavaScriptObject","RdfTriple":"LegacyJavaScriptObject","RdfLiteral":"LegacyJavaScriptObject","JsonLdOptions":"LegacyJavaScriptObject","LoadDocumentOptions":"LegacyJavaScriptObject","RemoteDocument":"LegacyJavaScriptObject","JsonLdError":"LegacyJavaScriptObject","JsonLdFramingError":"LegacyJavaScriptObject","Keyboard":"LegacyJavaScriptObject","KeyboardLayoutMap":"LegacyJavaScriptObject","KHRParallelShaderCompile":"LegacyJavaScriptObject","LargestContentfulPaint":"LegacyJavaScriptObject","LayoutShift":"LegacyJavaScriptObject","LayoutShiftAttribution":"LegacyJavaScriptObject","QueryOptions":"LegacyJavaScriptObject","FontData":"LegacyJavaScriptObject","PerformanceLongTaskTiming":"LegacyJavaScriptObject","TaskAttributionTiming":"LegacyJavaScriptObject","Magnetometer":"LegacyJavaScriptObject","MagnetometerSensorOptions":"LegacyJavaScriptObject","UncalibratedMagnetometer":"LegacyJavaScriptObject","MagnetometerReadingValues":"LegacyJavaScriptObject","UncalibratedMagnetometerReadingValues":"LegacyJavaScriptObject","BeforeInstallPromptEvent":"LegacyJavaScriptObject","PromptResponseObject":"LegacyJavaScriptObject","MathMLElement":"LegacyJavaScriptObject","MediaConfiguration":"LegacyJavaScriptObject","MediaDecodingConfiguration":"LegacyJavaScriptObject","MediaEncodingConfiguration":"LegacyJavaScriptObject","VideoConfiguration":"LegacyJavaScriptObject","AudioConfiguration":"LegacyJavaScriptObject","MediaCapabilitiesKeySystemConfiguration":"LegacyJavaScriptObject","KeySystemTrackConfiguration":"LegacyJavaScriptObject","MediaCapabilitiesInfo":"LegacyJavaScriptObject","MediaCapabilitiesDecodingInfo":"LegacyJavaScriptObject","MediaCapabilitiesEncodingInfo":"LegacyJavaScriptObject","MediaCapabilities":"LegacyJavaScriptObject","VideoPlaybackQuality":"LegacyJavaScriptObject","MediaSource":"LegacyJavaScriptObject","MediaSourceHandle":"LegacyJavaScriptObject","SourceBuffer":"LegacyJavaScriptObject","SourceBufferList":"LegacyJavaScriptObject","MockCapturePromptResultConfiguration":"LegacyJavaScriptObject","MockCaptureDeviceConfiguration":"LegacyJavaScriptObject","MockCameraConfiguration":"LegacyJavaScriptObject","MockMicrophoneConfiguration":"LegacyJavaScriptObject","CanvasCaptureMediaStreamTrack":"LegacyJavaScriptObject","CaptureActionEvent":"LegacyJavaScriptObject","CaptureActionEventInit":"LegacyJavaScriptObject","CropTarget":"LegacyJavaScriptObject","BrowserCaptureMediaStreamTrack":"LegacyJavaScriptObject","MediaStream":"LegacyJavaScriptObject","MediaStreamTrack":"LegacyJavaScriptObject","MediaTrackSupportedConstraints":"LegacyJavaScriptObject","MediaTrackCapabilities":"LegacyJavaScriptObject","MediaTrackConstraints":"LegacyJavaScriptObject","MediaTrackConstraintSet":"LegacyJavaScriptObject","MediaTrackSettings":"LegacyJavaScriptObject","MediaStreamTrackEvent":"LegacyJavaScriptObject","MediaStreamTrackEventInit":"LegacyJavaScriptObject","OverconstrainedError":"LegacyJavaScriptObject","MediaDevices":"LegacyJavaScriptObject","MediaDeviceInfo":"LegacyJavaScriptObject","InputDeviceInfo":"LegacyJavaScriptObject","MediaStreamConstraints":"LegacyJavaScriptObject","DoubleRange":"LegacyJavaScriptObject","ConstrainDoubleRange":"LegacyJavaScriptObject","ULongRange":"LegacyJavaScriptObject","ConstrainULongRange":"LegacyJavaScriptObject","ConstrainBooleanParameters":"LegacyJavaScriptObject","ConstrainDOMStringParameters":"LegacyJavaScriptObject","DevicePermissionDescriptor":"LegacyJavaScriptObject","CameraDevicePermissionDescriptor":"LegacyJavaScriptObject","MediaStreamTrackProcessor":"LegacyJavaScriptObject","MediaStreamTrackProcessorInit":"LegacyJavaScriptObject","VideoTrackGenerator":"LegacyJavaScriptObject","ViewportMediaStreamConstraints":"LegacyJavaScriptObject","MediaSession":"LegacyJavaScriptObject","MediaMetadata":"LegacyJavaScriptObject","MediaMetadataInit":"LegacyJavaScriptObject","MediaImage":"LegacyJavaScriptObject","MediaPositionState":"LegacyJavaScriptObject","MediaSessionActionDetails":"LegacyJavaScriptObject","MediaRecorder":"LegacyJavaScriptObject","MediaRecorderOptions":"LegacyJavaScriptObject","BlobEvent":"LegacyJavaScriptObject","BlobEventInit":"LegacyJavaScriptObject","HTMLModelElement":"LegacyJavaScriptObject","Navigation":"LegacyJavaScriptObject","NavigationUpdateCurrentEntryOptions":"LegacyJavaScriptObject","NavigationOptions":"LegacyJavaScriptObject","NavigationNavigateOptions":"LegacyJavaScriptObject","NavigationReloadOptions":"LegacyJavaScriptObject","NavigationResult":"LegacyJavaScriptObject","NavigationCurrentEntryChangeEvent":"LegacyJavaScriptObject","NavigationCurrentEntryChangeEventInit":"LegacyJavaScriptObject","NavigationTransition":"LegacyJavaScriptObject","NavigateEvent":"LegacyJavaScriptObject","NavigateEventInit":"LegacyJavaScriptObject","NavigationInterceptOptions":"LegacyJavaScriptObject","NavigationDestination":"LegacyJavaScriptObject","NavigationHistoryEntry":"LegacyJavaScriptObject","PerformanceNavigationTiming":"LegacyJavaScriptObject","PerformanceTiming":"LegacyJavaScriptObject","PerformanceNavigation":"LegacyJavaScriptObject","NavigatorNetworkInformation":"LegacyJavaScriptObject","NetworkInformation":"LegacyJavaScriptObject","Notification":"LegacyJavaScriptObject","NotificationOptions":"LegacyJavaScriptObject","NotificationAction":"LegacyJavaScriptObject","GetNotificationOptions":"LegacyJavaScriptObject","NotificationEvent":"LegacyJavaScriptObject","NotificationEventInit":"LegacyJavaScriptObject","OESDrawBuffersIndexed":"LegacyJavaScriptObject","OESElementIndexUint":"LegacyJavaScriptObject","OESFboRenderMipmap":"LegacyJavaScriptObject","OESStandardDerivatives":"LegacyJavaScriptObject","OESTextureFloat":"LegacyJavaScriptObject","OESTextureFloatLinear":"LegacyJavaScriptObject","OESTextureHalfFloat":"LegacyJavaScriptObject","OESTextureHalfFloatLinear":"LegacyJavaScriptObject","WebGLVertexArrayObjectOES":"LegacyJavaScriptObject","OESVertexArrayObject":"LegacyJavaScriptObject","DeviceOrientationEvent":"LegacyJavaScriptObject","DeviceOrientationEventInit":"LegacyJavaScriptObject","DeviceMotionEventAcceleration":"LegacyJavaScriptObject","DeviceMotionEventRotationRate":"LegacyJavaScriptObject","DeviceMotionEvent":"LegacyJavaScriptObject","DeviceMotionEventAccelerationInit":"LegacyJavaScriptObject","DeviceMotionEventRotationRateInit":"LegacyJavaScriptObject","DeviceMotionEventInit":"LegacyJavaScriptObject","OrientationSensor":"LegacyJavaScriptObject","OrientationSensorOptions":"LegacyJavaScriptObject","AbsoluteOrientationSensor":"LegacyJavaScriptObject","RelativeOrientationSensor":"LegacyJavaScriptObject","AbsoluteOrientationReadingValues":"LegacyJavaScriptObject","RelativeOrientationReadingValues":"LegacyJavaScriptObject","OVRMultiview2":"LegacyJavaScriptObject","PerformancePaintTiming":"LegacyJavaScriptObject","PaymentManager":"LegacyJavaScriptObject","PaymentInstruments":"LegacyJavaScriptObject","PaymentInstrument":"LegacyJavaScriptObject","ImageObject":"LegacyJavaScriptObject","CanMakePaymentEvent":"LegacyJavaScriptObject","PaymentRequestDetailsUpdate":"LegacyJavaScriptObject","PaymentRequestEvent":"LegacyJavaScriptObject","PaymentRequestEventInit":"LegacyJavaScriptObject","PaymentHandlerResponse":"LegacyJavaScriptObject","AddressInit":"LegacyJavaScriptObject","PaymentOptions":"LegacyJavaScriptObject","PaymentShippingOption":"LegacyJavaScriptObject","AddressErrors":"LegacyJavaScriptObject","PaymentRequest":"LegacyJavaScriptObject","PaymentMethodData":"LegacyJavaScriptObject","PaymentCurrencyAmount":"LegacyJavaScriptObject","PaymentDetailsBase":"LegacyJavaScriptObject","PaymentDetailsInit":"LegacyJavaScriptObject","PaymentDetailsUpdate":"LegacyJavaScriptObject","PaymentDetailsModifier":"LegacyJavaScriptObject","PaymentItem":"LegacyJavaScriptObject","PaymentCompleteDetails":"LegacyJavaScriptObject","PaymentResponse":"LegacyJavaScriptObject","PaymentValidationErrors":"LegacyJavaScriptObject","PaymentMethodChangeEvent":"LegacyJavaScriptObject","PaymentMethodChangeEventInit":"LegacyJavaScriptObject","PaymentRequestUpdateEvent":"LegacyJavaScriptObject","PaymentRequestUpdateEventInit":"LegacyJavaScriptObject","MemoryMeasurement":"LegacyJavaScriptObject","MemoryBreakdownEntry":"LegacyJavaScriptObject","MemoryAttribution":"LegacyJavaScriptObject","MemoryAttributionContainer":"LegacyJavaScriptObject","PerformanceEntry":"LegacyJavaScriptObject","PerformanceObserver":"LegacyJavaScriptObject","PerformanceObserverCallbackOptions":"LegacyJavaScriptObject","PerformanceObserverInit":"LegacyJavaScriptObject","PerformanceObserverEntryList":"LegacyJavaScriptObject","PeriodicSyncManager":"LegacyJavaScriptObject","BackgroundSyncOptions":"LegacyJavaScriptObject","PeriodicSyncEventInit":"LegacyJavaScriptObject","PeriodicSyncEvent":"LegacyJavaScriptObject","Permissions":"LegacyJavaScriptObject","PermissionDescriptor":"LegacyJavaScriptObject","PermissionStatus":"LegacyJavaScriptObject","PermissionSetParameters":"LegacyJavaScriptObject","PermissionsPolicy":"LegacyJavaScriptObject","PermissionsPolicyViolationReportBody":"LegacyJavaScriptObject","PictureInPictureWindow":"LegacyJavaScriptObject","PictureInPictureEvent":"LegacyJavaScriptObject","PictureInPictureEventInit":"LegacyJavaScriptObject","PointerEventInit":"LegacyJavaScriptObject","PointerEvent":"LegacyJavaScriptObject","HTMLPortalElement":"LegacyJavaScriptObject","PortalActivateOptions":"LegacyJavaScriptObject","PortalHost":"LegacyJavaScriptObject","PortalActivateEvent":"LegacyJavaScriptObject","PortalActivateEventInit":"LegacyJavaScriptObject","Presentation":"LegacyJavaScriptObject","PresentationRequest":"LegacyJavaScriptObject","PresentationAvailability":"LegacyJavaScriptObject","PresentationConnectionAvailableEvent":"LegacyJavaScriptObject","PresentationConnectionAvailableEventInit":"LegacyJavaScriptObject","PresentationConnection":"LegacyJavaScriptObject","PresentationConnectionCloseEvent":"LegacyJavaScriptObject","PresentationConnectionCloseEventInit":"LegacyJavaScriptObject","PresentationReceiver":"LegacyJavaScriptObject","PresentationConnectionList":"LegacyJavaScriptObject","ProximitySensor":"LegacyJavaScriptObject","ProximityReadingValues":"LegacyJavaScriptObject","PushPermissionDescriptor":"LegacyJavaScriptObject","PushManager":"LegacyJavaScriptObject","PushSubscriptionOptions":"LegacyJavaScriptObject","PushSubscriptionOptionsInit":"LegacyJavaScriptObject","PushSubscription":"LegacyJavaScriptObject","PushSubscriptionJSON":"LegacyJavaScriptObject","PushMessageData":"LegacyJavaScriptObject","PushEvent":"LegacyJavaScriptObject","PushEventInit":"LegacyJavaScriptObject","PushSubscriptionChangeEvent":"LegacyJavaScriptObject","PushSubscriptionChangeEventInit":"LegacyJavaScriptObject","XRCamera":"LegacyJavaScriptObject","RemotePlayback":"LegacyJavaScriptObject","ReportBody":"LegacyJavaScriptObject","Report":"LegacyJavaScriptObject","ReportingObserver":"LegacyJavaScriptObject","ReportingObserverOptions":"LegacyJavaScriptObject","GenerateTestReportParameters":"LegacyJavaScriptObject","IdleRequestOptions":"LegacyJavaScriptObject","IdleDeadline":"LegacyJavaScriptObject","ResizeObserverOptions":"LegacyJavaScriptObject","ResizeObserver":"LegacyJavaScriptObject","ResizeObserverEntry":"LegacyJavaScriptObject","ResizeObserverSize":"LegacyJavaScriptObject","PerformanceResourceTiming":"LegacyJavaScriptObject","Sanitizer":"LegacyJavaScriptObject","SetHTMLOptions":"LegacyJavaScriptObject","SanitizerConfig":"LegacyJavaScriptObject","NetworkInformationSaveData":"LegacyJavaScriptObject","SchedulerPostTaskOptions":"LegacyJavaScriptObject","Scheduler":"LegacyJavaScriptObject","TaskPriorityChangeEvent":"LegacyJavaScriptObject","TaskPriorityChangeEventInit":"LegacyJavaScriptObject","TaskControllerInit":"LegacyJavaScriptObject","TaskController":"LegacyJavaScriptObject","TaskSignal":"LegacyJavaScriptObject","CaptureController":"LegacyJavaScriptObject","DisplayMediaStreamOptions":"LegacyJavaScriptObject","ScreenOrientation":"LegacyJavaScriptObject","WakeLock":"LegacyJavaScriptObject","WakeLockSentinel":"LegacyJavaScriptObject","ScrollTimelineOptions":"LegacyJavaScriptObject","ScrollTimeline":"LegacyJavaScriptObject","ViewTimelineOptions":"LegacyJavaScriptObject","ViewTimeline":"LegacyJavaScriptObject","FragmentDirective":"LegacyJavaScriptObject","SecurePaymentConfirmationRequest":"LegacyJavaScriptObject","AuthenticationExtensionsPaymentInputs":"LegacyJavaScriptObject","CollectedClientPaymentData":"LegacyJavaScriptObject","CollectedClientAdditionalPaymentData":"LegacyJavaScriptObject","PaymentCredentialInstrument":"LegacyJavaScriptObject","Selection":"LegacyJavaScriptObject","Serial":"LegacyJavaScriptObject","SerialPortRequestOptions":"LegacyJavaScriptObject","SerialPortFilter":"LegacyJavaScriptObject","SerialPort":"LegacyJavaScriptObject","SerialPortInfo":"LegacyJavaScriptObject","SerialOptions":"LegacyJavaScriptObject","SerialOutputSignals":"LegacyJavaScriptObject","SerialInputSignals":"LegacyJavaScriptObject","PerformanceServerTiming":"LegacyJavaScriptObject","ServiceWorker":"LegacyJavaScriptObject","ServiceWorkerRegistration":"LegacyJavaScriptObject","ServiceWorkerContainer":"LegacyJavaScriptObject","RegistrationOptions":"LegacyJavaScriptObject","NavigationPreloadManager":"LegacyJavaScriptObject","NavigationPreloadState":"LegacyJavaScriptObject","ServiceWorkerGlobalScope":"LegacyJavaScriptObject","Client":"LegacyJavaScriptObject","WindowClient":"LegacyJavaScriptObject","Clients":"LegacyJavaScriptObject","ClientQueryOptions":"LegacyJavaScriptObject","ExtendableEvent":"LegacyJavaScriptObject","ExtendableEventInit":"LegacyJavaScriptObject","FetchEvent":"LegacyJavaScriptObject","FetchEventInit":"LegacyJavaScriptObject","ExtendableMessageEvent":"LegacyJavaScriptObject","ExtendableMessageEventInit":"LegacyJavaScriptObject","Cache":"LegacyJavaScriptObject","CacheQueryOptions":"LegacyJavaScriptObject","CacheStorage":"LegacyJavaScriptObject","MultiCacheQueryOptions":"LegacyJavaScriptObject","FaceDetector":"LegacyJavaScriptObject","FaceDetectorOptions":"LegacyJavaScriptObject","DetectedFace":"LegacyJavaScriptObject","Landmark":"LegacyJavaScriptObject","BarcodeDetector":"LegacyJavaScriptObject","BarcodeDetectorOptions":"LegacyJavaScriptObject","DetectedBarcode":"LegacyJavaScriptObject","SpeechRecognition":"LegacyJavaScriptObject","SpeechRecognitionErrorEvent":"LegacyJavaScriptObject","SpeechRecognitionErrorEventInit":"LegacyJavaScriptObject","SpeechRecognitionAlternative":"LegacyJavaScriptObject","SpeechRecognitionResult":"LegacyJavaScriptObject","SpeechRecognitionResultList":"LegacyJavaScriptObject","SpeechRecognitionEvent":"LegacyJavaScriptObject","SpeechRecognitionEventInit":"LegacyJavaScriptObject","SpeechGrammar":"LegacyJavaScriptObject","SpeechGrammarList":"LegacyJavaScriptObject","SpeechSynthesis":"LegacyJavaScriptObject","SpeechSynthesisUtterance":"LegacyJavaScriptObject","SpeechSynthesisEvent":"LegacyJavaScriptObject","SpeechSynthesisEventInit":"LegacyJavaScriptObject","SpeechSynthesisErrorEvent":"LegacyJavaScriptObject","SpeechSynthesisErrorEventInit":"LegacyJavaScriptObject","SpeechSynthesisVoice":"LegacyJavaScriptObject","NavigatorStorage":"LegacyJavaScriptObject","StorageManager":"LegacyJavaScriptObject","StorageEstimate":"LegacyJavaScriptObject","ReadableStream":"LegacyJavaScriptObject","ReadableStreamGetReaderOptions":"LegacyJavaScriptObject","ReadableStreamIteratorOptions":"LegacyJavaScriptObject","ReadableWritablePair":"LegacyJavaScriptObject","StreamPipeOptions":"LegacyJavaScriptObject","UnderlyingSource":"LegacyJavaScriptObject","ReadableStreamGenericReader":"LegacyJavaScriptObject","ReadableStreamDefaultReader":"LegacyJavaScriptObject","ReadableStreamReadResult":"LegacyJavaScriptObject","ReadableStreamBYOBReader":"LegacyJavaScriptObject","ReadableStreamDefaultController":"LegacyJavaScriptObject","ReadableByteStreamController":"LegacyJavaScriptObject","ReadableStreamBYOBRequest":"LegacyJavaScriptObject","WritableStream":"LegacyJavaScriptObject","UnderlyingSink":"LegacyJavaScriptObject","WritableStreamDefaultWriter":"LegacyJavaScriptObject","WritableStreamDefaultController":"LegacyJavaScriptObject","TransformStream":"LegacyJavaScriptObject","Transformer":"LegacyJavaScriptObject","TransformStreamDefaultController":"LegacyJavaScriptObject","QueuingStrategy":"LegacyJavaScriptObject","QueuingStrategyInit":"LegacyJavaScriptObject","ByteLengthQueuingStrategy":"LegacyJavaScriptObject","CountQueuingStrategy":"LegacyJavaScriptObject","GenericTransformStream":"LegacyJavaScriptObject","SVGElement":"LegacyJavaScriptObject","SVGBoundingBoxOptions":"LegacyJavaScriptObject","SVGGraphicsElement":"LegacyJavaScriptObject","SVGGeometryElement":"LegacyJavaScriptObject","SVGNumber":"LegacyJavaScriptObject","SVGLength":"LegacyJavaScriptObject","SVGAngle":"LegacyJavaScriptObject","SVGNumberList":"LegacyJavaScriptObject","SVGLengthList":"LegacyJavaScriptObject","SVGStringList":"LegacyJavaScriptObject","SVGAnimatedBoolean":"LegacyJavaScriptObject","SVGAnimatedEnumeration":"LegacyJavaScriptObject","SVGAnimatedInteger":"LegacyJavaScriptObject","SVGAnimatedNumber":"LegacyJavaScriptObject","SVGAnimatedLength":"LegacyJavaScriptObject","SVGAnimatedAngle":"LegacyJavaScriptObject","SVGAnimatedString":"LegacyJavaScriptObject","SVGAnimatedRect":"LegacyJavaScriptObject","SVGAnimatedNumberList":"LegacyJavaScriptObject","SVGAnimatedLengthList":"LegacyJavaScriptObject","SVGUnitTypes":"LegacyJavaScriptObject","SVGTests":"LegacyJavaScriptObject","SVGFitToViewBox":"LegacyJavaScriptObject","SVGURIReference":"LegacyJavaScriptObject","SVGSVGElement":"LegacyJavaScriptObject","SVGGElement":"LegacyJavaScriptObject","SVGDefsElement":"LegacyJavaScriptObject","SVGDescElement":"LegacyJavaScriptObject","SVGMetadataElement":"LegacyJavaScriptObject","SVGTitleElement":"LegacyJavaScriptObject","SVGSymbolElement":"LegacyJavaScriptObject","SVGUseElement":"LegacyJavaScriptObject","SVGUseElementShadowRoot":"LegacyJavaScriptObject","SVGElementInstance":"LegacyJavaScriptObject","ShadowAnimation":"LegacyJavaScriptObject","SVGSwitchElement":"LegacyJavaScriptObject","GetSVGDocument":"LegacyJavaScriptObject","SVGStyleElement":"LegacyJavaScriptObject","SVGTransform":"LegacyJavaScriptObject","SVGTransformList":"LegacyJavaScriptObject","SVGAnimatedTransformList":"LegacyJavaScriptObject","SVGPreserveAspectRatio":"LegacyJavaScriptObject","SVGAnimatedPreserveAspectRatio":"LegacyJavaScriptObject","SVGPathElement":"LegacyJavaScriptObject","SVGRectElement":"LegacyJavaScriptObject","SVGCircleElement":"LegacyJavaScriptObject","SVGEllipseElement":"LegacyJavaScriptObject","SVGLineElement":"LegacyJavaScriptObject","SVGAnimatedPoints":"LegacyJavaScriptObject","SVGPointList":"LegacyJavaScriptObject","SVGPolylineElement":"LegacyJavaScriptObject","SVGPolygonElement":"LegacyJavaScriptObject","SVGTextContentElement":"LegacyJavaScriptObject","SVGTextPositioningElement":"LegacyJavaScriptObject","SVGTextElement":"LegacyJavaScriptObject","SVGTSpanElement":"LegacyJavaScriptObject","SVGTextPathElement":"LegacyJavaScriptObject","SVGImageElement":"LegacyJavaScriptObject","SVGForeignObjectElement":"LegacyJavaScriptObject","SVGMarkerElement":"LegacyJavaScriptObject","SVGGradientElement":"LegacyJavaScriptObject","SVGLinearGradientElement":"LegacyJavaScriptObject","SVGRadialGradientElement":"LegacyJavaScriptObject","SVGStopElement":"LegacyJavaScriptObject","SVGPatternElement":"LegacyJavaScriptObject","SVGScriptElement":"LegacyJavaScriptObject","SVGAElement":"LegacyJavaScriptObject","SVGViewElement":"LegacyJavaScriptObject","TimeEvent":"LegacyJavaScriptObject","SVGAnimationElement":"LegacyJavaScriptObject","SVGAnimateElement":"LegacyJavaScriptObject","SVGSetElement":"LegacyJavaScriptObject","SVGAnimateMotionElement":"LegacyJavaScriptObject","SVGMPathElement":"LegacyJavaScriptObject","SVGAnimateTransformElement":"LegacyJavaScriptObject","SVGDiscardElement":"LegacyJavaScriptObject","TestUtils":"LegacyJavaScriptObject","TextDetector":"LegacyJavaScriptObject","DetectedText":"LegacyJavaScriptObject","TouchInit":"LegacyJavaScriptObject","Touch":"LegacyJavaScriptObject","TouchList":"LegacyJavaScriptObject","TouchEventInit":"LegacyJavaScriptObject","TouchEvent":"LegacyJavaScriptObject","TrustedHTML":"LegacyJavaScriptObject","TrustedScript":"LegacyJavaScriptObject","TrustedScriptURL":"LegacyJavaScriptObject","TrustedTypePolicyFactory":"LegacyJavaScriptObject","TrustedTypePolicy":"LegacyJavaScriptObject","TrustedTypePolicyOptions":"LegacyJavaScriptObject","NavigatorUABrandVersion":"LegacyJavaScriptObject","UADataValues":"LegacyJavaScriptObject","UALowEntropyJSON":"LegacyJavaScriptObject","NavigatorUAData":"LegacyJavaScriptObject","NavigatorUA":"LegacyJavaScriptObject","UIEvent":"LegacyJavaScriptObject","UIEventInit":"LegacyJavaScriptObject","FocusEvent":"LegacyJavaScriptObject","FocusEventInit":"LegacyJavaScriptObject","MouseEvent":"LegacyJavaScriptObject","MouseEventInit":"LegacyJavaScriptObject","EventModifierInit":"LegacyJavaScriptObject","WheelEvent":"LegacyJavaScriptObject","WheelEventInit":"LegacyJavaScriptObject","InputEvent":"LegacyJavaScriptObject","InputEventInit":"LegacyJavaScriptObject","KeyboardEvent":"LegacyJavaScriptObject","KeyboardEventInit":"LegacyJavaScriptObject","CompositionEvent":"LegacyJavaScriptObject","CompositionEventInit":"LegacyJavaScriptObject","MutationEvent":"LegacyJavaScriptObject","Url":"LegacyJavaScriptObject","URLSearchParams":"LegacyJavaScriptObject","URLPattern":"LegacyJavaScriptObject","URLPatternInit":"LegacyJavaScriptObject","URLPatternOptions":"LegacyJavaScriptObject","URLPatternResult":"LegacyJavaScriptObject","URLPatternComponentResult":"LegacyJavaScriptObject","PerformanceMarkOptions":"LegacyJavaScriptObject","PerformanceMeasureOptions":"LegacyJavaScriptObject","PerformanceMark":"LegacyJavaScriptObject","PerformanceMeasure":"LegacyJavaScriptObject","VideoFrameCallbackMetadata":"LegacyJavaScriptObject","VirtualKeyboard":"LegacyJavaScriptObject","ARIAMixin":"LegacyJavaScriptObject","WebAssemblyInstantiatedSource":"LegacyJavaScriptObject","WebAssembly":"LegacyJavaScriptObject","ModuleExportDescriptor":"LegacyJavaScriptObject","ModuleImportDescriptor":"LegacyJavaScriptObject","Module":"LegacyJavaScriptObject","Instance":"LegacyJavaScriptObject","MemoryDescriptor":"LegacyJavaScriptObject","Memory":"LegacyJavaScriptObject","TableDescriptor":"LegacyJavaScriptObject","Table":"LegacyJavaScriptObject","GlobalDescriptor":"LegacyJavaScriptObject","Global":"LegacyJavaScriptObject","AnimationTimeline":"LegacyJavaScriptObject","DocumentTimelineOptions":"LegacyJavaScriptObject","DocumentTimeline":"LegacyJavaScriptObject","Animation":"LegacyJavaScriptObject","AnimationEffect":"LegacyJavaScriptObject","EffectTiming":"LegacyJavaScriptObject","OptionalEffectTiming":"LegacyJavaScriptObject","ComputedEffectTiming":"LegacyJavaScriptObject","KeyframeEffect":"LegacyJavaScriptObject","BaseComputedKeyframe":"LegacyJavaScriptObject","BasePropertyIndexedKeyframe":"LegacyJavaScriptObject","BaseKeyframe":"LegacyJavaScriptObject","KeyframeEffectOptions":"LegacyJavaScriptObject","Animatable":"LegacyJavaScriptObject","KeyframeAnimationOptions":"LegacyJavaScriptObject","GetAnimationsOptions":"LegacyJavaScriptObject","GroupEffect":"LegacyJavaScriptObject","AnimationNodeList":"LegacyJavaScriptObject","SequenceEffect":"LegacyJavaScriptObject","AnimationPlaybackEvent":"LegacyJavaScriptObject","AnimationPlaybackEventInit":"LegacyJavaScriptObject","LaunchParams":"LegacyJavaScriptObject","LaunchQueue":"LegacyJavaScriptObject","BluetoothDataFilterInit":"LegacyJavaScriptObject","BluetoothManufacturerDataFilterInit":"LegacyJavaScriptObject","BluetoothServiceDataFilterInit":"LegacyJavaScriptObject","BluetoothLEScanFilterInit":"LegacyJavaScriptObject","RequestDeviceOptions":"LegacyJavaScriptObject","Bluetooth":"LegacyJavaScriptObject","BluetoothPermissionDescriptor":"LegacyJavaScriptObject","AllowedBluetoothDevice":"LegacyJavaScriptObject","BluetoothPermissionStorage":"LegacyJavaScriptObject","BluetoothPermissionResult":"LegacyJavaScriptObject","ValueEvent":"LegacyJavaScriptObject","ValueEventInit":"LegacyJavaScriptObject","BluetoothDevice":"LegacyJavaScriptObject","WatchAdvertisementsOptions":"LegacyJavaScriptObject","BluetoothManufacturerDataMap":"LegacyJavaScriptObject","BluetoothServiceDataMap":"LegacyJavaScriptObject","BluetoothAdvertisingEvent":"LegacyJavaScriptObject","BluetoothAdvertisingEventInit":"LegacyJavaScriptObject","BluetoothRemoteGATTServer":"LegacyJavaScriptObject","BluetoothRemoteGATTService":"LegacyJavaScriptObject","BluetoothRemoteGATTCharacteristic":"LegacyJavaScriptObject","BluetoothCharacteristicProperties":"LegacyJavaScriptObject","BluetoothRemoteGATTDescriptor":"LegacyJavaScriptObject","CharacteristicEventHandlers":"LegacyJavaScriptObject","BluetoothDeviceEventHandlers":"LegacyJavaScriptObject","ServiceEventHandlers":"LegacyJavaScriptObject","BluetoothUUID":"LegacyJavaScriptObject","NavigatorLocks":"LegacyJavaScriptObject","LockManager":"LegacyJavaScriptObject","LockOptions":"LegacyJavaScriptObject","LockManagerSnapshot":"LegacyJavaScriptObject","LockInfo":"LegacyJavaScriptObject","Lock":"LegacyJavaScriptObject","NDEFMessage":"LegacyJavaScriptObject","NDEFMessageInit":"LegacyJavaScriptObject","NDEFRecord":"LegacyJavaScriptObject","NDEFRecordInit":"LegacyJavaScriptObject","NDEFReader":"LegacyJavaScriptObject","NDEFReadingEvent":"LegacyJavaScriptObject","NDEFReadingEventInit":"LegacyJavaScriptObject","NDEFWriteOptions":"LegacyJavaScriptObject","NDEFMakeReadOnlyOptions":"LegacyJavaScriptObject","NDEFScanOptions":"LegacyJavaScriptObject","OTPCredential":"LegacyJavaScriptObject","OTPCredentialRequestOptions":"LegacyJavaScriptObject","ShareData":"LegacyJavaScriptObject","BaseAudioContext":"LegacyJavaScriptObject","AudioContext":"LegacyJavaScriptObject","AudioContextOptions":"LegacyJavaScriptObject","AudioSinkOptions":"LegacyJavaScriptObject","AudioSinkInfo":"LegacyJavaScriptObject","AudioTimestamp":"LegacyJavaScriptObject","AudioRenderCapacity":"LegacyJavaScriptObject","AudioRenderCapacityOptions":"LegacyJavaScriptObject","AudioRenderCapacityEvent":"LegacyJavaScriptObject","AudioRenderCapacityEventInit":"LegacyJavaScriptObject","OfflineAudioContext":"LegacyJavaScriptObject","OfflineAudioContextOptions":"LegacyJavaScriptObject","OfflineAudioCompletionEvent":"LegacyJavaScriptObject","OfflineAudioCompletionEventInit":"LegacyJavaScriptObject","AudioBuffer":"LegacyJavaScriptObject","AudioBufferOptions":"LegacyJavaScriptObject","AudioNode":"LegacyJavaScriptObject","AudioNodeOptions":"LegacyJavaScriptObject","AudioParam":"LegacyJavaScriptObject","AudioScheduledSourceNode":"LegacyJavaScriptObject","AnalyserNode":"LegacyJavaScriptObject","AnalyserOptions":"LegacyJavaScriptObject","AudioBufferSourceNode":"LegacyJavaScriptObject","AudioBufferSourceOptions":"LegacyJavaScriptObject","AudioDestinationNode":"LegacyJavaScriptObject","AudioListener":"LegacyJavaScriptObject","AudioProcessingEvent":"LegacyJavaScriptObject","AudioProcessingEventInit":"LegacyJavaScriptObject","BiquadFilterNode":"LegacyJavaScriptObject","BiquadFilterOptions":"LegacyJavaScriptObject","ChannelMergerNode":"LegacyJavaScriptObject","ChannelMergerOptions":"LegacyJavaScriptObject","ChannelSplitterNode":"LegacyJavaScriptObject","ChannelSplitterOptions":"LegacyJavaScriptObject","ConstantSourceNode":"LegacyJavaScriptObject","ConstantSourceOptions":"LegacyJavaScriptObject","ConvolverNode":"LegacyJavaScriptObject","ConvolverOptions":"LegacyJavaScriptObject","DelayNode":"LegacyJavaScriptObject","DelayOptions":"LegacyJavaScriptObject","DynamicsCompressorNode":"LegacyJavaScriptObject","DynamicsCompressorOptions":"LegacyJavaScriptObject","GainNode":"LegacyJavaScriptObject","GainOptions":"LegacyJavaScriptObject","IIRFilterNode":"LegacyJavaScriptObject","IIRFilterOptions":"LegacyJavaScriptObject","MediaElementAudioSourceNode":"LegacyJavaScriptObject","MediaElementAudioSourceOptions":"LegacyJavaScriptObject","MediaStreamAudioDestinationNode":"LegacyJavaScriptObject","MediaStreamAudioSourceNode":"LegacyJavaScriptObject","MediaStreamAudioSourceOptions":"LegacyJavaScriptObject","MediaStreamTrackAudioSourceNode":"LegacyJavaScriptObject","MediaStreamTrackAudioSourceOptions":"LegacyJavaScriptObject","OscillatorNode":"LegacyJavaScriptObject","OscillatorOptions":"LegacyJavaScriptObject","PannerNode":"LegacyJavaScriptObject","PannerOptions":"LegacyJavaScriptObject","PeriodicWave":"LegacyJavaScriptObject","PeriodicWaveConstraints":"LegacyJavaScriptObject","PeriodicWaveOptions":"LegacyJavaScriptObject","ScriptProcessorNode":"LegacyJavaScriptObject","StereoPannerNode":"LegacyJavaScriptObject","StereoPannerOptions":"LegacyJavaScriptObject","WaveShaperNode":"LegacyJavaScriptObject","WaveShaperOptions":"LegacyJavaScriptObject","AudioWorklet":"LegacyJavaScriptObject","AudioWorkletGlobalScope":"LegacyJavaScriptObject","AudioParamMap":"LegacyJavaScriptObject","AudioWorkletNode":"LegacyJavaScriptObject","AudioWorkletNodeOptions":"LegacyJavaScriptObject","AudioWorkletProcessor":"LegacyJavaScriptObject","AudioParamDescriptor":"LegacyJavaScriptObject","PublicKeyCredential":"LegacyJavaScriptObject","RegistrationResponseJSON":"LegacyJavaScriptObject","AuthenticatorAttestationResponseJSON":"LegacyJavaScriptObject","AuthenticationResponseJSON":"LegacyJavaScriptObject","AuthenticatorAssertionResponseJSON":"LegacyJavaScriptObject","AuthenticationExtensionsClientOutputsJSON":"LegacyJavaScriptObject","PublicKeyCredentialCreationOptionsJSON":"LegacyJavaScriptObject","PublicKeyCredentialUserEntityJSON":"LegacyJavaScriptObject","PublicKeyCredentialDescriptorJSON":"LegacyJavaScriptObject","AuthenticationExtensionsClientInputsJSON":"LegacyJavaScriptObject","PublicKeyCredentialRequestOptionsJSON":"LegacyJavaScriptObject","AuthenticatorResponse":"LegacyJavaScriptObject","AuthenticatorAttestationResponse":"LegacyJavaScriptObject","AuthenticatorAssertionResponse":"LegacyJavaScriptObject","PublicKeyCredentialParameters":"LegacyJavaScriptObject","PublicKeyCredentialCreationOptions":"LegacyJavaScriptObject","PublicKeyCredentialEntity":"LegacyJavaScriptObject","PublicKeyCredentialRpEntity":"LegacyJavaScriptObject","PublicKeyCredentialUserEntity":"LegacyJavaScriptObject","AuthenticatorSelectionCriteria":"LegacyJavaScriptObject","PublicKeyCredentialRequestOptions":"LegacyJavaScriptObject","AuthenticationExtensionsClientInputs":"LegacyJavaScriptObject","AuthenticationExtensionsClientOutputs":"LegacyJavaScriptObject","CollectedClientData":"LegacyJavaScriptObject","TokenBinding":"LegacyJavaScriptObject","PublicKeyCredentialDescriptor":"LegacyJavaScriptObject","CredentialPropertiesOutput":"LegacyJavaScriptObject","AuthenticationExtensionsPRFValues":"LegacyJavaScriptObject","AuthenticationExtensionsPRFInputs":"LegacyJavaScriptObject","AuthenticationExtensionsPRFOutputs":"LegacyJavaScriptObject","AuthenticationExtensionsLargeBlobInputs":"LegacyJavaScriptObject","AuthenticationExtensionsLargeBlobOutputs":"LegacyJavaScriptObject","AuthenticationExtensionsDevicePublicKeyInputs":"LegacyJavaScriptObject","AuthenticationExtensionsDevicePublicKeyOutputs":"LegacyJavaScriptObject","AudioDecoder":"LegacyJavaScriptObject","AudioDecoderInit":"LegacyJavaScriptObject","VideoDecoder":"LegacyJavaScriptObject","VideoDecoderInit":"LegacyJavaScriptObject","AudioEncoder":"LegacyJavaScriptObject","AudioEncoderInit":"LegacyJavaScriptObject","EncodedAudioChunkMetadata":"LegacyJavaScriptObject","VideoEncoder":"LegacyJavaScriptObject","VideoEncoderInit":"LegacyJavaScriptObject","EncodedVideoChunkMetadata":"LegacyJavaScriptObject","SvcOutputMetadata":"LegacyJavaScriptObject","AudioDecoderSupport":"LegacyJavaScriptObject","VideoDecoderSupport":"LegacyJavaScriptObject","AudioEncoderSupport":"LegacyJavaScriptObject","VideoEncoderSupport":"LegacyJavaScriptObject","AudioDecoderConfig":"LegacyJavaScriptObject","VideoDecoderConfig":"LegacyJavaScriptObject","AudioEncoderConfig":"LegacyJavaScriptObject","VideoEncoderConfig":"LegacyJavaScriptObject","VideoEncoderEncodeOptions":"LegacyJavaScriptObject","EncodedAudioChunk":"LegacyJavaScriptObject","EncodedAudioChunkInit":"LegacyJavaScriptObject","EncodedVideoChunk":"LegacyJavaScriptObject","EncodedVideoChunkInit":"LegacyJavaScriptObject","AudioData":"LegacyJavaScriptObject","AudioDataInit":"LegacyJavaScriptObject","AudioDataCopyToOptions":"LegacyJavaScriptObject","VideoFrame":"LegacyJavaScriptObject","VideoFrameInit":"LegacyJavaScriptObject","VideoFrameBufferInit":"LegacyJavaScriptObject","VideoFrameMetadata":"LegacyJavaScriptObject","VideoFrameCopyToOptions":"LegacyJavaScriptObject","PlaneLayout":"LegacyJavaScriptObject","VideoColorSpace":"LegacyJavaScriptObject","VideoColorSpaceInit":"LegacyJavaScriptObject","ImageDecoder":"LegacyJavaScriptObject","ImageDecoderInit":"LegacyJavaScriptObject","ImageDecodeOptions":"LegacyJavaScriptObject","ImageDecodeResult":"LegacyJavaScriptObject","ImageTrackList":"LegacyJavaScriptObject","ImageTrack":"LegacyJavaScriptObject","AacEncoderConfig":"LegacyJavaScriptObject","AvcEncoderConfig":"LegacyJavaScriptObject","FlacEncoderConfig":"LegacyJavaScriptObject","HevcEncoderConfig":"LegacyJavaScriptObject","OpusEncoderConfig":"LegacyJavaScriptObject","Ed448Params":"LegacyJavaScriptObject","Crypto":"LegacyJavaScriptObject","Algorithm":"LegacyJavaScriptObject","KeyAlgorithm":"LegacyJavaScriptObject","CryptoKey":"LegacyJavaScriptObject","SubtleCrypto":"LegacyJavaScriptObject","RsaOtherPrimesInfo":"LegacyJavaScriptObject","JsonWebKey":"LegacyJavaScriptObject","CryptoKeyPair":"LegacyJavaScriptObject","RsaKeyGenParams":"LegacyJavaScriptObject","RsaHashedKeyGenParams":"LegacyJavaScriptObject","RsaKeyAlgorithm":"LegacyJavaScriptObject","RsaHashedKeyAlgorithm":"LegacyJavaScriptObject","RsaHashedImportParams":"LegacyJavaScriptObject","RsaPssParams":"LegacyJavaScriptObject","RsaOaepParams":"LegacyJavaScriptObject","EcdsaParams":"LegacyJavaScriptObject","EcKeyGenParams":"LegacyJavaScriptObject","EcKeyAlgorithm":"LegacyJavaScriptObject","EcKeyImportParams":"LegacyJavaScriptObject","EcdhKeyDeriveParams":"LegacyJavaScriptObject","AesCtrParams":"LegacyJavaScriptObject","AesKeyAlgorithm":"LegacyJavaScriptObject","AesKeyGenParams":"LegacyJavaScriptObject","AesDerivedKeyParams":"LegacyJavaScriptObject","AesCbcParams":"LegacyJavaScriptObject","AesGcmParams":"LegacyJavaScriptObject","HmacImportParams":"LegacyJavaScriptObject","HmacKeyAlgorithm":"LegacyJavaScriptObject","HmacKeyGenParams":"LegacyJavaScriptObject","HkdfParams":"LegacyJavaScriptObject","Pbkdf2Params":"LegacyJavaScriptObject","NavigatorAutomationInformation":"LegacyJavaScriptObject","WebGLContextAttributes":"LegacyJavaScriptObject","WebGLObject":"LegacyJavaScriptObject","WebGLBuffer":"LegacyJavaScriptObject","WebGLFramebuffer":"LegacyJavaScriptObject","WebGLProgram":"LegacyJavaScriptObject","WebGLRenderbuffer":"LegacyJavaScriptObject","WebGLShader":"LegacyJavaScriptObject","WebGLTexture":"LegacyJavaScriptObject","WebGLUniformLocation":"LegacyJavaScriptObject","WebGLActiveInfo":"LegacyJavaScriptObject","WebGLShaderPrecisionFormat":"LegacyJavaScriptObject","WebGLRenderingContextBase":"LegacyJavaScriptObject","WebGLRenderingContextOverloads":"LegacyJavaScriptObject","WebGLRenderingContext":"LegacyJavaScriptObject","WebGLContextEvent":"LegacyJavaScriptObject","WebGLContextEventInit":"LegacyJavaScriptObject","WebGLQuery":"LegacyJavaScriptObject","WebGLSampler":"LegacyJavaScriptObject","WebGLSync":"LegacyJavaScriptObject","WebGLTransformFeedback":"LegacyJavaScriptObject","WebGLVertexArrayObject":"LegacyJavaScriptObject","WebGL2RenderingContextBase":"LegacyJavaScriptObject","WebGL2RenderingContextOverloads":"LegacyJavaScriptObject","WebGL2RenderingContext":"LegacyJavaScriptObject","WEBGLBlendEquationAdvancedCoherent":"LegacyJavaScriptObject","WEBGLColorBufferFloat":"LegacyJavaScriptObject","WEBGLCompressedTextureAstc":"LegacyJavaScriptObject","WEBGLCompressedTextureEtc":"LegacyJavaScriptObject","WEBGLCompressedTextureEtc1":"LegacyJavaScriptObject","WEBGLCompressedTexturePvrtc":"LegacyJavaScriptObject","WEBGLCompressedTextureS3tc":"LegacyJavaScriptObject","WEBGLCompressedTextureS3tcSrgb":"LegacyJavaScriptObject","WEBGLDebugRendererInfo":"LegacyJavaScriptObject","WEBGLDebugShaders":"LegacyJavaScriptObject","WEBGLDepthTexture":"LegacyJavaScriptObject","WEBGLDrawBuffers":"LegacyJavaScriptObject","WEBGLDrawInstancedBaseVertexBaseInstance":"LegacyJavaScriptObject","WEBGLLoseContext":"LegacyJavaScriptObject","WEBGLMultiDraw":"LegacyJavaScriptObject","WEBGLMultiDrawInstancedBaseVertexBaseInstance":"LegacyJavaScriptObject","GPUObjectBase":"LegacyJavaScriptObject","GPUObjectDescriptorBase":"LegacyJavaScriptObject","GPUSupportedLimits":"LegacyJavaScriptObject","GPUSupportedFeatures":"LegacyJavaScriptObject","GPUAdapterInfo":"LegacyJavaScriptObject","NavigatorGPU":"LegacyJavaScriptObject","Gpu":"LegacyJavaScriptObject","GPURequestAdapterOptions":"LegacyJavaScriptObject","GPUAdapter":"LegacyJavaScriptObject","GPUDeviceDescriptor":"LegacyJavaScriptObject","GPUDevice":"LegacyJavaScriptObject","GPUBuffer":"LegacyJavaScriptObject","GPUBufferDescriptor":"LegacyJavaScriptObject","GPUBufferUsage":"LegacyJavaScriptObject","GPUMapMode":"LegacyJavaScriptObject","GPUTexture":"LegacyJavaScriptObject","GPUTextureDescriptor":"LegacyJavaScriptObject","GPUTextureUsage":"LegacyJavaScriptObject","GPUTextureView":"LegacyJavaScriptObject","GPUTextureViewDescriptor":"LegacyJavaScriptObject","GPUExternalTexture":"LegacyJavaScriptObject","GPUExternalTextureDescriptor":"LegacyJavaScriptObject","GPUSampler":"LegacyJavaScriptObject","GPUSamplerDescriptor":"LegacyJavaScriptObject","GPUBindGroupLayout":"LegacyJavaScriptObject","GPUBindGroupLayoutDescriptor":"LegacyJavaScriptObject","GPUBindGroupLayoutEntry":"LegacyJavaScriptObject","GPUShaderStage":"LegacyJavaScriptObject","GPUBufferBindingLayout":"LegacyJavaScriptObject","GPUSamplerBindingLayout":"LegacyJavaScriptObject","GPUTextureBindingLayout":"LegacyJavaScriptObject","GPUStorageTextureBindingLayout":"LegacyJavaScriptObject","GPUExternalTextureBindingLayout":"LegacyJavaScriptObject","GPUBindGroup":"LegacyJavaScriptObject","GPUBindGroupDescriptor":"LegacyJavaScriptObject","GPUBindGroupEntry":"LegacyJavaScriptObject","GPUBufferBinding":"LegacyJavaScriptObject","GPUPipelineLayout":"LegacyJavaScriptObject","GPUPipelineLayoutDescriptor":"LegacyJavaScriptObject","GPUShaderModule":"LegacyJavaScriptObject","GPUShaderModuleDescriptor":"LegacyJavaScriptObject","GPUShaderModuleCompilationHint":"LegacyJavaScriptObject","GPUCompilationMessage":"LegacyJavaScriptObject","GPUCompilationInfo":"LegacyJavaScriptObject","GPUPipelineError":"LegacyJavaScriptObject","GPUPipelineErrorInit":"LegacyJavaScriptObject","GPUPipelineDescriptorBase":"LegacyJavaScriptObject","GPUPipelineBase":"LegacyJavaScriptObject","GPUProgrammableStage":"LegacyJavaScriptObject","GPUComputePipeline":"LegacyJavaScriptObject","GPUComputePipelineDescriptor":"LegacyJavaScriptObject","GPURenderPipeline":"LegacyJavaScriptObject","GPURenderPipelineDescriptor":"LegacyJavaScriptObject","GPUPrimitiveState":"LegacyJavaScriptObject","GPUMultisampleState":"LegacyJavaScriptObject","GPUFragmentState":"LegacyJavaScriptObject","GPUColorTargetState":"LegacyJavaScriptObject","GPUBlendState":"LegacyJavaScriptObject","GPUColorWrite":"LegacyJavaScriptObject","GPUBlendComponent":"LegacyJavaScriptObject","GPUDepthStencilState":"LegacyJavaScriptObject","GPUStencilFaceState":"LegacyJavaScriptObject","GPUVertexState":"LegacyJavaScriptObject","GPUVertexBufferLayout":"LegacyJavaScriptObject","GPUVertexAttribute":"LegacyJavaScriptObject","GPUImageDataLayout":"LegacyJavaScriptObject","GPUImageCopyBuffer":"LegacyJavaScriptObject","GPUImageCopyTexture":"LegacyJavaScriptObject","GPUImageCopyTextureTagged":"LegacyJavaScriptObject","GPUImageCopyExternalImage":"LegacyJavaScriptObject","GPUCommandBuffer":"LegacyJavaScriptObject","GPUCommandBufferDescriptor":"LegacyJavaScriptObject","GPUCommandsMixin":"LegacyJavaScriptObject","GPUCommandEncoder":"LegacyJavaScriptObject","GPUCommandEncoderDescriptor":"LegacyJavaScriptObject","GPUBindingCommandsMixin":"LegacyJavaScriptObject","GPUDebugCommandsMixin":"LegacyJavaScriptObject","GPUComputePassEncoder":"LegacyJavaScriptObject","GPUComputePassTimestampWrite":"LegacyJavaScriptObject","GPUComputePassDescriptor":"LegacyJavaScriptObject","GPURenderPassEncoder":"LegacyJavaScriptObject","GPURenderPassTimestampWrite":"LegacyJavaScriptObject","GPURenderPassDescriptor":"LegacyJavaScriptObject","GPURenderPassColorAttachment":"LegacyJavaScriptObject","GPURenderPassDepthStencilAttachment":"LegacyJavaScriptObject","GPURenderPassLayout":"LegacyJavaScriptObject","GPURenderCommandsMixin":"LegacyJavaScriptObject","GPURenderBundle":"LegacyJavaScriptObject","GPURenderBundleDescriptor":"LegacyJavaScriptObject","GPURenderBundleEncoder":"LegacyJavaScriptObject","GPURenderBundleEncoderDescriptor":"LegacyJavaScriptObject","GPUQueueDescriptor":"LegacyJavaScriptObject","GPUQueue":"LegacyJavaScriptObject","GPUQuerySet":"LegacyJavaScriptObject","GPUQuerySetDescriptor":"LegacyJavaScriptObject","GPUCanvasContext":"LegacyJavaScriptObject","GPUCanvasConfiguration":"LegacyJavaScriptObject","GPUDeviceLostInfo":"LegacyJavaScriptObject","GPUError":"LegacyJavaScriptObject","GPUValidationError":"LegacyJavaScriptObject","GPUOutOfMemoryError":"LegacyJavaScriptObject","GPUInternalError":"LegacyJavaScriptObject","GPUUncapturedErrorEvent":"LegacyJavaScriptObject","GPUUncapturedErrorEventInit":"LegacyJavaScriptObject","GPUColorDict":"LegacyJavaScriptObject","GPUOrigin2DDict":"LegacyJavaScriptObject","GPUOrigin3DDict":"LegacyJavaScriptObject","GPUExtent3DDict":"LegacyJavaScriptObject","Hid":"LegacyJavaScriptObject","HIDDeviceRequestOptions":"LegacyJavaScriptObject","HIDDeviceFilter":"LegacyJavaScriptObject","HIDDevice":"LegacyJavaScriptObject","HIDConnectionEvent":"LegacyJavaScriptObject","HIDConnectionEventInit":"LegacyJavaScriptObject","HIDInputReportEvent":"LegacyJavaScriptObject","HIDInputReportEventInit":"LegacyJavaScriptObject","HIDCollectionInfo":"LegacyJavaScriptObject","HIDReportInfo":"LegacyJavaScriptObject","HIDReportItem":"LegacyJavaScriptObject","DOMException":"LegacyJavaScriptObject","MidiPermissionDescriptor":"LegacyJavaScriptObject","MIDIOptions":"LegacyJavaScriptObject","MIDIInputMap":"LegacyJavaScriptObject","MIDIOutputMap":"LegacyJavaScriptObject","MIDIAccess":"LegacyJavaScriptObject","MIDIPort":"LegacyJavaScriptObject","MIDIInput":"LegacyJavaScriptObject","MIDIOutput":"LegacyJavaScriptObject","MIDIMessageEvent":"LegacyJavaScriptObject","MIDIMessageEventInit":"LegacyJavaScriptObject","MIDIConnectionEvent":"LegacyJavaScriptObject","MIDIConnectionEventInit":"LegacyJavaScriptObject","NavigatorML":"LegacyJavaScriptObject","MLContextOptions":"LegacyJavaScriptObject","Ml":"LegacyJavaScriptObject","MLContext":"LegacyJavaScriptObject","MLComputeResult":"LegacyJavaScriptObject","MLOperandDescriptor":"LegacyJavaScriptObject","MLOperand":"LegacyJavaScriptObject","MLActivation":"LegacyJavaScriptObject","MLBufferResourceView":"LegacyJavaScriptObject","MLGraphBuilder":"LegacyJavaScriptObject","MLBatchNormalizationOptions":"LegacyJavaScriptObject","MLClampOptions":"LegacyJavaScriptObject","MLConv2dOptions":"LegacyJavaScriptObject","MLConvTranspose2dOptions":"LegacyJavaScriptObject","MLEluOptions":"LegacyJavaScriptObject","MLGemmOptions":"LegacyJavaScriptObject","MLGruOptions":"LegacyJavaScriptObject","MLGruCellOptions":"LegacyJavaScriptObject","MLHardSigmoidOptions":"LegacyJavaScriptObject","MLInstanceNormalizationOptions":"LegacyJavaScriptObject","MLLeakyReluOptions":"LegacyJavaScriptObject","MLLinearOptions":"LegacyJavaScriptObject","MLLstmOptions":"LegacyJavaScriptObject","MLLstmCellOptions":"LegacyJavaScriptObject","MLPadOptions":"LegacyJavaScriptObject","MLPool2dOptions":"LegacyJavaScriptObject","MLReduceOptions":"LegacyJavaScriptObject","MLResample2dOptions":"LegacyJavaScriptObject","MLSliceOptions":"LegacyJavaScriptObject","MLSoftplusOptions":"LegacyJavaScriptObject","MLSplitOptions":"LegacyJavaScriptObject","MLSqueezeOptions":"LegacyJavaScriptObject","MLTransposeOptions":"LegacyJavaScriptObject","MLGraph":"LegacyJavaScriptObject","MLCommandEncoder":"LegacyJavaScriptObject","RTCConfiguration":"LegacyJavaScriptObject","RTCIceServer":"LegacyJavaScriptObject","RTCOfferAnswerOptions":"LegacyJavaScriptObject","RTCOfferOptions":"LegacyJavaScriptObject","RTCAnswerOptions":"LegacyJavaScriptObject","RTCPeerConnection":"LegacyJavaScriptObject","RTCSessionDescription":"LegacyJavaScriptObject","RTCSessionDescriptionInit":"LegacyJavaScriptObject","RTCLocalSessionDescriptionInit":"LegacyJavaScriptObject","RTCIceCandidate":"LegacyJavaScriptObject","RTCIceCandidateInit":"LegacyJavaScriptObject","RTCPeerConnectionIceEvent":"LegacyJavaScriptObject","RTCPeerConnectionIceEventInit":"LegacyJavaScriptObject","RTCPeerConnectionIceErrorEvent":"LegacyJavaScriptObject","RTCPeerConnectionIceErrorEventInit":"LegacyJavaScriptObject","RTCCertificateExpiration":"LegacyJavaScriptObject","RTCCertificate":"LegacyJavaScriptObject","RTCRtpTransceiverInit":"LegacyJavaScriptObject","RTCRtpSender":"LegacyJavaScriptObject","RTCRtpParameters":"LegacyJavaScriptObject","RTCRtpSendParameters":"LegacyJavaScriptObject","RTCRtpReceiveParameters":"LegacyJavaScriptObject","RTCRtpCodingParameters":"LegacyJavaScriptObject","RTCRtpEncodingParameters":"LegacyJavaScriptObject","RTCRtcpParameters":"LegacyJavaScriptObject","RTCRtpHeaderExtensionParameters":"LegacyJavaScriptObject","RTCRtpCodecParameters":"LegacyJavaScriptObject","RTCRtpCapabilities":"LegacyJavaScriptObject","RTCRtpCodecCapability":"LegacyJavaScriptObject","RTCRtpHeaderExtensionCapability":"LegacyJavaScriptObject","RTCRtpReceiver":"LegacyJavaScriptObject","RTCRtpContributingSource":"LegacyJavaScriptObject","RTCRtpSynchronizationSource":"LegacyJavaScriptObject","RTCRtpTransceiver":"LegacyJavaScriptObject","RTCDtlsTransport":"LegacyJavaScriptObject","RTCDtlsFingerprint":"LegacyJavaScriptObject","RTCIceTransport":"LegacyJavaScriptObject","RTCIceParameters":"LegacyJavaScriptObject","RTCIceCandidatePair":"LegacyJavaScriptObject","RTCTrackEvent":"LegacyJavaScriptObject","RTCTrackEventInit":"LegacyJavaScriptObject","RTCSctpTransport":"LegacyJavaScriptObject","RTCDataChannel":"LegacyJavaScriptObject","RTCDataChannelInit":"LegacyJavaScriptObject","RTCDataChannelEvent":"LegacyJavaScriptObject","RTCDataChannelEventInit":"LegacyJavaScriptObject","RTCDTMFSender":"LegacyJavaScriptObject","RTCDTMFToneChangeEvent":"LegacyJavaScriptObject","RTCDTMFToneChangeEventInit":"LegacyJavaScriptObject","RTCStatsReport":"LegacyJavaScriptObject","RTCStats":"LegacyJavaScriptObject","RTCError":"LegacyJavaScriptObject","RTCErrorInit":"LegacyJavaScriptObject","RTCErrorEvent":"LegacyJavaScriptObject","RTCErrorEventInit":"LegacyJavaScriptObject","SFrameTransformOptions":"LegacyJavaScriptObject","SFrameTransform":"LegacyJavaScriptObject","SFrameTransformErrorEvent":"LegacyJavaScriptObject","SFrameTransformErrorEventInit":"LegacyJavaScriptObject","RTCEncodedVideoFrameMetadata":"LegacyJavaScriptObject","RTCEncodedVideoFrame":"LegacyJavaScriptObject","RTCEncodedAudioFrameMetadata":"LegacyJavaScriptObject","RTCEncodedAudioFrame":"LegacyJavaScriptObject","RTCTransformEvent":"LegacyJavaScriptObject","RTCRtpScriptTransformer":"LegacyJavaScriptObject","RTCRtpScriptTransform":"LegacyJavaScriptObject","RTCIceGatherOptions":"LegacyJavaScriptObject","RTCIdentityProviderGlobalScope":"LegacyJavaScriptObject","RTCIdentityProviderRegistrar":"LegacyJavaScriptObject","RTCIdentityProvider":"LegacyJavaScriptObject","RTCIdentityAssertionResult":"LegacyJavaScriptObject","RTCIdentityProviderDetails":"LegacyJavaScriptObject","RTCIdentityValidationResult":"LegacyJavaScriptObject","RTCIdentityProviderOptions":"LegacyJavaScriptObject","RTCIdentityAssertion":"LegacyJavaScriptObject","RTCRtpStreamStats":"LegacyJavaScriptObject","RTCCodecStats":"LegacyJavaScriptObject","RTCReceivedRtpStreamStats":"LegacyJavaScriptObject","RTCInboundRtpStreamStats":"LegacyJavaScriptObject","RTCRemoteInboundRtpStreamStats":"LegacyJavaScriptObject","RTCSentRtpStreamStats":"LegacyJavaScriptObject","RTCOutboundRtpStreamStats":"LegacyJavaScriptObject","RTCRemoteOutboundRtpStreamStats":"LegacyJavaScriptObject","RTCMediaSourceStats":"LegacyJavaScriptObject","RTCAudioSourceStats":"LegacyJavaScriptObject","RTCVideoSourceStats":"LegacyJavaScriptObject","RTCAudioPlayoutStats":"LegacyJavaScriptObject","RTCPeerConnectionStats":"LegacyJavaScriptObject","RTCDataChannelStats":"LegacyJavaScriptObject","RTCTransportStats":"LegacyJavaScriptObject","RTCIceCandidateStats":"LegacyJavaScriptObject","RTCIceCandidatePairStats":"LegacyJavaScriptObject","RTCCertificateStats":"LegacyJavaScriptObject","WebSocket":"LegacyJavaScriptObject","CloseEvent":"LegacyJavaScriptObject","CloseEventInit":"LegacyJavaScriptObject","WebTransportDatagramDuplexStream":"LegacyJavaScriptObject","WebTransport":"LegacyJavaScriptObject","WebTransportHash":"LegacyJavaScriptObject","WebTransportOptions":"LegacyJavaScriptObject","WebTransportCloseInfo":"LegacyJavaScriptObject","WebTransportSendStreamOptions":"LegacyJavaScriptObject","WebTransportStats":"LegacyJavaScriptObject","WebTransportDatagramStats":"LegacyJavaScriptObject","WebTransportSendStream":"LegacyJavaScriptObject","WebTransportSendStreamStats":"LegacyJavaScriptObject","WebTransportReceiveStream":"LegacyJavaScriptObject","WebTransportReceiveStreamStats":"LegacyJavaScriptObject","WebTransportBidirectionalStream":"LegacyJavaScriptObject","WebTransportError":"LegacyJavaScriptObject","WebTransportErrorInit":"LegacyJavaScriptObject","USBDeviceFilter":"LegacyJavaScriptObject","USBDeviceRequestOptions":"LegacyJavaScriptObject","Usb":"LegacyJavaScriptObject","USBConnectionEventInit":"LegacyJavaScriptObject","USBConnectionEvent":"LegacyJavaScriptObject","USBInTransferResult":"LegacyJavaScriptObject","USBOutTransferResult":"LegacyJavaScriptObject","USBIsochronousInTransferPacket":"LegacyJavaScriptObject","USBIsochronousInTransferResult":"LegacyJavaScriptObject","USBIsochronousOutTransferPacket":"LegacyJavaScriptObject","USBIsochronousOutTransferResult":"LegacyJavaScriptObject","USBDevice":"LegacyJavaScriptObject","USBControlTransferParameters":"LegacyJavaScriptObject","USBConfiguration":"LegacyJavaScriptObject","USBInterface":"LegacyJavaScriptObject","USBAlternateInterface":"LegacyJavaScriptObject","USBEndpoint":"LegacyJavaScriptObject","USBPermissionDescriptor":"LegacyJavaScriptObject","AllowedUSBDevice":"LegacyJavaScriptObject","USBPermissionStorage":"LegacyJavaScriptObject","USBPermissionResult":"LegacyJavaScriptObject","VTTCue":"LegacyJavaScriptObject","VTTRegion":"LegacyJavaScriptObject","XRSystem":"LegacyJavaScriptObject","XRSessionInit":"LegacyJavaScriptObject","XRSession":"LegacyJavaScriptObject","XRRenderStateInit":"LegacyJavaScriptObject","XRRenderState":"LegacyJavaScriptObject","XRFrame":"LegacyJavaScriptObject","XRSpace":"LegacyJavaScriptObject","XRReferenceSpace":"LegacyJavaScriptObject","XRBoundedReferenceSpace":"LegacyJavaScriptObject","XRView":"LegacyJavaScriptObject","XRViewport":"LegacyJavaScriptObject","XRRigidTransform":"LegacyJavaScriptObject","XRPose":"LegacyJavaScriptObject","XRViewerPose":"LegacyJavaScriptObject","XRInputSource":"LegacyJavaScriptObject","XRInputSourceArray":"LegacyJavaScriptObject","XRLayer":"LegacyJavaScriptObject","XRWebGLLayerInit":"LegacyJavaScriptObject","XRWebGLLayer":"LegacyJavaScriptObject","XRSessionEvent":"LegacyJavaScriptObject","XRSessionEventInit":"LegacyJavaScriptObject","XRInputSourceEvent":"LegacyJavaScriptObject","XRInputSourceEventInit":"LegacyJavaScriptObject","XRInputSourcesChangeEvent":"LegacyJavaScriptObject","XRInputSourcesChangeEventInit":"LegacyJavaScriptObject","XRReferenceSpaceEvent":"LegacyJavaScriptObject","XRReferenceSpaceEventInit":"LegacyJavaScriptObject","XRSessionSupportedPermissionDescriptor":"LegacyJavaScriptObject","XRPermissionDescriptor":"LegacyJavaScriptObject","XRPermissionStatus":"LegacyJavaScriptObject","XRDepthStateInit":"LegacyJavaScriptObject","XRDepthInformation":"LegacyJavaScriptObject","XRCPUDepthInformation":"LegacyJavaScriptObject","XRWebGLDepthInformation":"LegacyJavaScriptObject","XRDOMOverlayInit":"LegacyJavaScriptObject","XRDOMOverlayState":"LegacyJavaScriptObject","XRHand":"LegacyJavaScriptObject","XRJointSpace":"LegacyJavaScriptObject","XRJointPose":"LegacyJavaScriptObject","XRHitTestOptionsInit":"LegacyJavaScriptObject","XRTransientInputHitTestOptionsInit":"LegacyJavaScriptObject","XRHitTestSource":"LegacyJavaScriptObject","XRTransientInputHitTestSource":"LegacyJavaScriptObject","XRHitTestResult":"LegacyJavaScriptObject","XRTransientInputHitTestResult":"LegacyJavaScriptObject","XRRayDirectionInit":"LegacyJavaScriptObject","XRRay":"LegacyJavaScriptObject","XRLightProbe":"LegacyJavaScriptObject","XRLightEstimate":"LegacyJavaScriptObject","XRLightProbeInit":"LegacyJavaScriptObject","XRCompositionLayer":"LegacyJavaScriptObject","XRProjectionLayer":"LegacyJavaScriptObject","XRQuadLayer":"LegacyJavaScriptObject","XRCylinderLayer":"LegacyJavaScriptObject","XREquirectLayer":"LegacyJavaScriptObject","XRCubeLayer":"LegacyJavaScriptObject","XRSubImage":"LegacyJavaScriptObject","XRWebGLSubImage":"LegacyJavaScriptObject","XRProjectionLayerInit":"LegacyJavaScriptObject","XRLayerInit":"LegacyJavaScriptObject","XRQuadLayerInit":"LegacyJavaScriptObject","XRCylinderLayerInit":"LegacyJavaScriptObject","XREquirectLayerInit":"LegacyJavaScriptObject","XRCubeLayerInit":"LegacyJavaScriptObject","XRWebGLBinding":"LegacyJavaScriptObject","XRMediaLayerInit":"LegacyJavaScriptObject","XRMediaQuadLayerInit":"LegacyJavaScriptObject","XRMediaCylinderLayerInit":"LegacyJavaScriptObject","XRMediaEquirectLayerInit":"LegacyJavaScriptObject","XRMediaBinding":"LegacyJavaScriptObject","XRLayerEvent":"LegacyJavaScriptObject","XRLayerEventInit":"LegacyJavaScriptObject","WindowControlsOverlay":"LegacyJavaScriptObject","WindowControlsOverlayGeometryChangeEvent":"LegacyJavaScriptObject","WindowControlsOverlayGeometryChangeEventInit":"LegacyJavaScriptObject","ScreenDetails":"LegacyJavaScriptObject","ScreenDetailed":"LegacyJavaScriptObject","XMLHttpRequestEventTarget":"LegacyJavaScriptObject","XMLHttpRequestUpload":"LegacyJavaScriptObject","XMLHttpRequest":"LegacyJavaScriptObject","FormData":"LegacyJavaScriptObject","ProgressEvent":"LegacyJavaScriptObject","ProgressEventInit":"LegacyJavaScriptObject","JsArray":"LegacyJavaScriptObject","JSObject":"LegacyJavaScriptObject","JsMap":"LegacyJavaScriptObject","IteratorItem":"LegacyJavaScriptObject","JsIterator":"LegacyJavaScriptObject","Number":"LegacyJavaScriptObject","Reflect":"LegacyJavaScriptObject","Promise":"LegacyJavaScriptObject","JavaScriptObject0":"LegacyJavaScriptObject","NativeFloat32List":"NativeTypedArrayOfDouble","JSBool":{"bool":[]},"JSNull":{"Null":[]},"LegacyJavaScriptObject":{"JavaScriptObject":[],"Promise":["1&"]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"double":[],"int":[],"num":[]},"JSNumNotInt":{"double":[],"num":[]},"JSString":{"String":[]},"LateError":{"Error":[]},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"JSInvocationMirror":{"Invocation":[]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"Map":["1","2"]},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double"},"NativeTypedArrayOfInt":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeInt16List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeInt32List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeInt8List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint16List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint32List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8ClampedList":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8List":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"AsyncError":{"Error":[]},"_Zone":{"Zone":[]},"_RootZone":{"_Zone":[],"Zone":[]},"_HashMap":{"MapMixin":["1","2"],"Map":["1","2"]},"_IdentityHashMap":{"_HashMap":["1","2"],"MapMixin":["1","2"],"Map":["1","2"]},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_HashMapKeyIterator":{"Iterator":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"double":{"num":[]},"int":{"num":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"TypeError":[],"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_StringStackTrace":{"StackTrace":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"NativeTypedArray":1,"MapBase":2,"JsArray":1,"JsMap":2,"IteratorItem":1,"JsIterator":1}'));
  var string$ = {
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AsyncError: findType("AsyncError"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Error: findType("Error"),
      Function: findType("Function"),
      Future_dynamic: findType("Future<@>"),
      Invocation: findType("Invocation"),
      Iterable_dynamic: findType("Iterable<@>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JavaScriptObject: findType("JavaScriptObject"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      List_dynamic: findType("List<@>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Null: findType("Null"),
      Object: findType("Object"),
      Promise_JavaScriptObject_Function_JavaScriptObject: findType("Promise<1&>(JavaScriptObject)"),
      Record: findType("Record"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      Symbol: findType("Symbol0"),
      TypeError: findType("TypeError"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      _Future_dynamic: findType("_Future<@>"),
      _IdentityHashMap_dynamic_dynamic: findType("_IdentityHashMap<@,@>"),
      bool: findType("bool"),
      bool_Function_Object: findType("bool(Object)"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function: findType("@()"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_JavaScriptObject: findType("JavaScriptObject?"),
      nullable_Object: findType("Object?"),
      nullable__FutureListener_dynamic_dynamic: findType("_FutureListener<@,@>?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.C_Duration = new A.Duration();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C__Required = new A._Required();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_dynamic);
    B.List_empty0 = A._setArrayType(makeConstList([]), A.findType("JSArray<Symbol0>"));
    B.Map_empty = new A.ConstantStringMap(0, {}, B.List_empty0, A.findType("ConstantStringMap<Symbol0,@>"));
    B.Symbol_call = new A.Symbol("call");
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: J.Interceptor, DataView: A.NativeTypedData, ArrayBufferView: A.NativeTypedData, Float32Array: A.NativeTypedArrayOfDouble, Float64Array: A.NativeTypedArrayOfDouble, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List});
    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, DataView: true, ArrayBufferView: false, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map

addEventListener("fetch", async (event) => {
  if (self.__dartFetchHandler !== undefined) {
    event.respondWith(self.__dartFetchHandler(event.request));
  }
});

